{"!define":{"sap.ui.commons.MenuBarDesign":{"Standard":{"!description":"The MenuBar appears in standard design.","!type":"String","!category":"enum"},"!description":"Determines the visual design of a MenuBar. The feature might be not supported by all themes.","Header":{"!description":"The MenuBar appears in header design.","!type":"String","!category":"enum"},"!category":"static class"},"sap.ui.commons.layout.BorderLayoutArea":{"addContent":{"!description":"Adds some content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.layout.BorderLayoutArea","!category":"function"},"setSize":{"!description":"Setter for property <code>size<\/code>.\n\nDefault value is <code>100px<\/code>.","!type":"fn(sSize: sap.ui.core.CSSSize) -> sap.ui.commons.layout.BorderLayoutArea","!category":"function"},"setContentAlign":{"!description":"Setter for property <code>contentAlign<\/code>.\n\nDefault value is <code>left<\/code>.","!type":"fn(sContentAlign: String) -> sap.ui.commons.layout.BorderLayoutArea","!category":"function"},"removeAllContent":{"!description":"Removes all the controls in the aggregation named <code>content<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getContent":{"!description":"Getter for aggregation <code>content<\/code>.\n\nControls within the area","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function"},"setVisible":{"!description":"Setter for property <code>visible<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisible: Boolean) -> sap.ui.commons.layout.BorderLayoutArea","!category":"function"},"removeContent":{"!description":"Removes a content from the aggregation named <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"getAreaId":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.3.3 Redundant to the aggregation by the parent border layout.<br>Getter for property <code>areaId<\/code>.\n\nDefines which area the element represents: top, begin, center, end, bottom\n\nDefault value is <code>top<\/code>.","!type":"fn() -> sap.ui.commons.layout.BorderLayoutAreaTypes","!category":"function"},"destroyContent":{"!description":"Destroys all the content in the aggregation\nnamed <code>content<\/code>.","!type":"fn() -> sap.ui.commons.layout.BorderLayoutArea","!category":"function"},"getVisible":{"!description":"Getter for property <code>visible<\/code>.\n\nInvisible controls are not rendered\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"insertContent":{"!description":"Inserts a content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.layout.BorderLayoutArea","!category":"function"},"!description":"The BorderLayoutArea represents one area of a BorderLayout","setAreaId":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.3.3 Redundant to the aggregation by the parent border layout.<br>Setter for property <code>areaId<\/code>.\n\nDefault value is <code>top<\/code>.","!type":"fn(sAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes) -> sap.ui.commons.layout.BorderLayoutArea","!category":"function"},"setOverflowX":{"!description":"Setter for property <code>overflowX<\/code>.\n\nDefault value is <code>auto<\/code>.","!type":"fn(sOverflowX: String) -> sap.ui.commons.layout.BorderLayoutArea","!category":"function"},"setOverflowY":{"!description":"Setter for property <code>overflowY<\/code>.\n\nDefault value is <code>auto<\/code>.","!type":"fn(sOverflowY: String) -> sap.ui.commons.layout.BorderLayoutArea","!category":"function"},"!category":"class","getContentAlign":{"!description":"Getter for property <code>contentAlign<\/code>.\n\nThe content alignment as CSS value\n\nDefault value is <code>left<\/code>.","!type":"fn() -> String","!category":"function"},"getSize":{"!description":"Getter for property <code>size<\/code>.\n\nDefines the height or the width. Is not used when the area element is in Center.\n\nDefault value is <code>100px<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getOverflowY":{"!description":"Getter for property <code>overflowY<\/code>.\n\nThe overflow mode of the area in vertical direction as CSS value\n\nDefault value is <code>auto<\/code>.","!type":"fn() -> String","!category":"function"},"!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.BorderLayoutArea.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"getOverflowX":{"!description":"Getter for property <code>overflowX<\/code>.\n\nThe overflow mode of the area in horizontal direction as CSS value\n\nDefault value is <code>auto<\/code>.","!type":"fn() -> String","!category":"function"}},"sap.ui.commons.RangeSlider_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RangeSlider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.Slider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RangeSlider"},"sap.ui.commons.ResponsiveContainer":{"attachRangeSwitch":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'rangeSwitch' event of this <code>sap.ui.commons.ResponsiveContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.ResponsiveContainer<\/code> itself.\n\nThe event is fired the width of the container reaches a new range.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.ResponsiveContainer","!category":"function"},"getRanges":{"!description":"Getter for aggregation <code>ranges<\/code>.\n\nThe ranges defined for this container","!type":"fn() -> [sap.ui.commons.ResponsiveContainerRange]","!category":"function"},"setDefaultContent":{"!description":"Setter for the associated <code>defaultContent<\/code>.","!type":"fn(oDefaultContent: sap.ui.core.Control) -> sap.ui.commons.ResponsiveContainer","!category":"function"},"detachRangeSwitch":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'rangeSwitch' event of this <code>sap.ui.commons.ResponsiveContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.ResponsiveContainer","!category":"function"},"removeRange":{"!description":"Removes a range from the aggregation named <code>ranges<\/code>.","!type":"fn(vRange: Number | String | sap.ui.commons.ResponsiveContainerRange) -> sap.ui.commons.ResponsiveContainerRange","!category":"function"},"insertRange":{"!description":"Inserts a range into the aggregation named <code>ranges<\/code>.","!type":"fn(oRange: sap.ui.commons.ResponsiveContainerRange, iIndex: Number) -> sap.ui.commons.ResponsiveContainer","!category":"function"},"indexOfRange":{"!description":"Checks for the provided <code>sap.ui.commons.ResponsiveContainerRange<\/code> in the aggregation named <code>ranges<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oRange: sap.ui.commons.ResponsiveContainerRange) -> Number","!category":"function"},"destroyRanges":{"!description":"Destroys all the ranges in the aggregation\nnamed <code>ranges<\/code>.","!type":"fn() -> sap.ui.commons.ResponsiveContainer","!category":"function"},"getHeight":{"!description":"Getter for property <code>height<\/code>.\n\nThe width of the responsive container.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"!description":"Is used to provide a container, which can show different content depending on its current width. It fires an event, whenever a new range is reached. In addition the content of the new range is automatically shown, if it is set.","getDefaultContent":{"!description":"Id of the element which is the current target of the <code>defaultContent<\/code> association, or null.\n\nThe default content to show, in case the range does not provide content","!type":"fn() -> sap.ui.core.Control","!category":"function"},"setHeight":{"!description":"Setter for property <code>height<\/code>.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.ResponsiveContainer","!category":"function"},"!category":"class","addRange":{"!description":"Adds some range into the aggregation named <code>ranges<\/code>.","!type":"fn(oRange: sap.ui.commons.ResponsiveContainerRange) -> sap.ui.commons.ResponsiveContainer","!category":"function"},"fireRangeSwitch":{"!description":"Fire event rangeSwitch to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'currentRange' of type <code>sap.ui.commons.ResponsiveContainerRange<\/code>The current range<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.ResponsiveContainer","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nThe width of the responsive container.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.ResponsiveContainer","!category":"function"},"removeAllRanges":{"!description":"Removes all the controls in the aggregation named <code>ranges<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.ResponsiveContainerRange]","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ResponsiveContainer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.RadioButtonGroup_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RadioButtonGroup with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RadioButtonGroup"},"sap.ui.commons.Message":{"bindDetails":{"!description":"Registers a callback function to be invoked if long text Details are to be made available. \n\nThis callback function will be supplied the corresponding Message \"id\", and should \nreturn the (simple) HTML string to be displayed within the Message Details Dialog.\n\nE.g.: myMessage.bindDetails(getDetails);\nfunction getDetails(sId) {... return htmlString;}","!type":"fn(fnCallBack: fn())","!category":"function"},"setAssociatedElementId":{"!description":"Setter for property <code>associatedElementId<\/code>.","!type":"fn(sAssociatedElementId: String) -> sap.ui.commons.Message","!category":"function"},"setType":{"!description":"Setter for property <code>type<\/code>.","!type":"fn(sType: sap.ui.commons.MessageType) -> sap.ui.commons.Message","!category":"function"},"getDesign":{"!description":"Getter for property <code>design<\/code>.\n\nInternal attribute, used to force the display of the \"short\" or the \"long\" text only.","!type":"fn() -> String","!category":"function"},"getAssociatedElementId":{"!description":"Getter for property <code>associatedElementId<\/code>.\n\nAssociated UI element ID. (Optional)\nFor navigation to error field.","!type":"fn() -> String","!category":"function"},"setText":{"!description":"Setter for property <code>text<\/code>.","!type":"fn(sText: String) -> sap.ui.commons.Message","!category":"function"},"getText":{"!description":"Getter for property <code>text<\/code>.\n\nMessage short text. (Mandatory)","!type":"fn() -> String","!category":"function"},"getType":{"!description":"Getter for property <code>type<\/code>.\n\n\"Success\", or \"Warning\", or \"Error\" messages. (Mandatory)","!type":"fn() -> sap.ui.commons.MessageType","!category":"function"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.4.0 A new messaging concept will be created in future. Therefore this control might be removed in one of the next versions.<br>Creates the \"Message\"s to be supplied to the \"MessageBar\" Control.","!category":"class","setDesign":{"!description":"Setter for property <code>design<\/code>.","!type":"fn(sDesign: String) -> sap.ui.commons.Message","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Message.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.TextViewColor":{"Default":{"!description":"Default color","!type":"String","!category":"enum"},"!description":"Semantic Colors of a text.","!category":"static class","Critical":{"!description":"Critical color","!type":"String","!category":"enum"},"Positive":{"!description":"Positive color","!type":"String","!category":"enum"},"Negative":{"!description":"Negative color","!type":"String","!category":"enum"}},"sap.ui.commons.ProgressIndicator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ProgressIndicator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ProgressIndicator"},"sap.ui.commons.Area":{"getAlt":{"!description":"Getter for property <code>alt<\/code>.\n\nAlternative text that is displayed in the case the image is not available","!type":"fn() -> String","!category":"function"},"setCoords":{"!description":"Setter for property <code>coords<\/code>.","!type":"fn(sCoords: String) -> sap.ui.commons.Area","!category":"function"},"getCoords":{"!description":"Getter for property <code>coords<\/code>.\n\nCoordinates of the area","!type":"fn() -> String","!category":"function"},"!description":"Used for defining areas in an image map. At runtime, the user can trigger an action, or start a URL, from the single image areas.","setHref":{"!description":"Setter for property <code>href<\/code>.","!type":"fn(sHref: sap.ui.core.URI) -> sap.ui.commons.Area","!category":"function"},"!category":"class","setShape":{"!description":"Setter for property <code>shape<\/code>.","!type":"fn(sShape: String) -> sap.ui.commons.Area","!category":"function"},"setAlt":{"!description":"Setter for property <code>alt<\/code>.","!type":"fn(sAlt: String) -> sap.ui.commons.Area","!category":"function"},"getShape":{"!description":"Getter for property <code>shape<\/code>.\n\nThe value is a string and can be 'rect' for rectangle, 'poly' for poligon, 'circle', or default.","!type":"fn() -> String","!category":"function"},"getHref":{"!description":"Getter for property <code>href<\/code>.\n\nHyper link that is executed when the area is clicked","!type":"fn() -> sap.ui.core.URI","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Area.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Element"},"sap.ui.commons.MessageList":{"setAnchorId":{"!description":"Setter for property <code>anchorId<\/code>.","!type":"fn(sAnchorId: String) -> sap.ui.commons.MessageList","!category":"function"},"getMaxListed":{"!description":"Getter for property <code>maxListed<\/code>.\n\nMaximum number of messages being display in the List before a scrollbar appears. Value '0' means no limit.\n\nDefault value is <code>7<\/code>.","!type":"fn() -> String","!category":"function"},"getVisible":{"!description":"Getter for property <code>visible<\/code>.\n\nTo open or close the Control.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setMessages":{"!description":"Set the list of Messages to be displayed and re-render this Control if visible.","!type":"fn(aMessages: [sap.ui.commons.Message])","!category":"function"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.4.0 A new messaging concept will be created in future. Therefore this control might be removed in one of the next versions.<br>Instantiated by the \"MessageBar\" Control if the user ever requests to generate the corresponding \"MessageList\".","setMaxListed":{"!description":"Setter for property <code>maxListed<\/code>.\n\nDefault value is <code>7<\/code>.","!type":"fn(sMaxListed: String) -> sap.ui.commons.MessageList","!category":"function"},"setVisible":{"!description":"Setter for property <code>visible<\/code>.\n\nDefault value is <code>true<\/code>\n\nThe default implementation of function \"setVisible()\" is overwritten \nin order to invoke the open() and close() of the MessageList Popup.","!type":"fn(bVisible: Boolean) -> sap.ui.commons.MessageList","!category":"function"},"getAnchorId":{"!description":"Getter for property <code>anchorId<\/code>.\n\nId of the anchor under which the MessageList is to render.","!type":"fn() -> String","!category":"function"},"!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.MessageList.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Control"},"sap.ui.commons.MenuItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the control sap.ui.unified.MenuItem of the library sap.ui.unified instead.<br>Smallest unit in the menu hierarchy. An item can be a direct part of a menu bar, of a menu, or of a sub menu.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.MenuItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.unified.MenuItem"},"sap.ui.commons.layout.Separation":{"MediumWithLine":{"!description":"\nA medium (31px) vertical gutter with a vertical line in its middle.","!type":"String","!category":"enum"},"Medium":{"!description":"\nA medium (31px) vertical gutter without a vertical line.","!type":"String","!category":"enum"},"!description":"Separation, e.g. of a layout cell from its neighbor, via a vertical gutter of\ndefined width, with or without a vertical line in its middle.","SmallWithLine":{"!description":"\nA small (17px) vertical gutter with a vertical line in its middle.","!type":"String","!category":"enum"},"Large":{"!description":"\nA large (63px) vertical gutter without a vertical line.","!type":"String","!category":"enum"},"!category":"static class","None":{"!description":"\nNo gutter at all (0px), and without a vertical line, of course.","!type":"String","!category":"enum"},"LargeWithLine":{"!description":"\nA large (63px) vertical gutter with a vertical line in its middle.","!type":"String","!category":"enum"},"Small":{"!description":"\nA small (17px) vertical gutter without a vertical line.","!type":"String","!category":"enum"}},"sap.ui.commons.TextField":{"getInputDomRef":{"!description":"Method for accessing the DOM Ref of the input element.","!type":"fn() -> Object","!category":"function"},"_checkChange":{"!description":"Compares the previous value with the current value and fires the change event\nif the TextField is editable and the value has changed.","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"onsapfocusleave":{"!description":"Event handler called when control is losing the focus","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"detachLiveChange":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'liveChange' event of this <code>sap.ui.commons.TextField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.TextField","!category":"function"},"getHelpId":{"!description":"Getter for property <code>helpId<\/code>.\n\nUnique identifier used for help service.\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function"},"getLiveValue":{"!description":"Returns the current value of the <code>TextField<\/code>.\nIn case of editing the <code>TextField<\/code> you can access the current value via this method.\nThe validated value is accessible via the property value.","!type":"fn() -> String","!category":"function"},"getFocusInfo":{"!description":"Returns an object representing the serialized focus information","!type":"fn() -> Object","!category":"function"},"setEditable":{"!description":"Setter for property <code>editable<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEditable: Boolean) -> sap.ui.commons.TextField","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nWidth of text field. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text field length defines the width.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getAriaLabelledBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaLabelledBy<\/code> association.\n\nAssociation to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getImeMode":{"!description":"Getter for property <code>imeMode<\/code>.\n\nState of the Input Method Editor (IME).\n\nDefault value is <code>Auto<\/code>.","!type":"fn() -> sap.ui.core.ImeMode","!category":"function"},"onselectstart":{"!description":"Event handler called when text selection starts.\nWhen the text field is disabled, the text should not be selectable, so cancel the event.","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"getEditable":{"!description":"Getter for property <code>editable<\/code>.\n\nSwitches edit state of the control. Read-only fields have different colors, depending on theme setting.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setImeMode":{"!description":"Setter for property <code>imeMode<\/code>.\n\nDefault value is <code>Auto<\/code>.","!type":"fn(sImeMode: sap.ui.core.ImeMode) -> sap.ui.commons.TextField","!category":"function"},"getRequired":{"!description":"Getter for property <code>required<\/code>.\n\nDepending on theme the <code>TextField<\/code> is shown as required.\nIf a <code>Label<\/code> is assigned to the <code>TextField<\/code> it will visualize the requires state too.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"onkeyup":{"!description":"Event handler for keyup.\nfire the liveChange event","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"onsapenter":{"!description":"Event handler called when enter key is pressed.","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"setHelpId":{"!description":"Setter for property <code>helpId<\/code>.\n\nDefault value is <code><\/code>.","!type":"fn(sHelpId: String) -> sap.ui.commons.TextField","!category":"function"},"getTextAlign":{"!description":"Getter for property <code>textAlign<\/code>.\n\nSets the horizontal alignment of the text.\n\nDefault value is <code>Begin<\/code>.","!type":"fn() -> sap.ui.core.TextAlign","!category":"function"},"getAccessibleRole":{"!description":"Getter for property <code>accessibleRole<\/code>.\n\nAccessibility role for the text field.\n\nDefault value is <code>Textbox<\/code>.","!type":"fn() -> sap.ui.core.AccessibleRole","!category":"function"},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.TextField","!category":"function"},"unbindValue":{"!description":"Unbinder for property <code>value<\/code>.","!type":"fn() -> sap.ui.commons.TextField","!category":"function"},"fireChange":{"!description":"Fire event change to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'newValue' of type <code>string<\/code>The new / changed value of the <code>TextField<\/code>.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.TextField","!category":"function"},"setName":{"!description":"Setter for property <code>name<\/code>.","!type":"fn(sName: String) -> sap.ui.commons.TextField","!category":"function"},"setDesign":{"!description":"Setter for property <code>design<\/code>.\n\nDefault value is <code>Standard<\/code>.","!type":"fn(sDesign: sap.ui.core.Design) -> sap.ui.commons.TextField","!category":"function"},"!proto":"sap.ui.core.Control","getValue":{"!description":"Getter for property <code>value<\/code>.\n\nText inside the <code>TextField<\/code>\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function"},"getTextDirection":{"!description":"Getter for property <code>textDirection<\/code>.\n\nDirection of the text. Possible values: \"rtl\", \"ltr\".\n\nDefault value is <code>Inherit<\/code>.","!type":"fn() -> sap.ui.core.TextDirection","!category":"function"},"getEnabled":{"!description":"Getter for property <code>enabled<\/code>.\n\nSwitches enabled state of the control. Disabled fields have different colors, and can not be focused.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setAccessibleRole":{"!description":"Setter for property <code>accessibleRole<\/code>.\n\nDefault value is <code>Textbox<\/code>.","!type":"fn(sAccessibleRole: sap.ui.core.AccessibleRole) -> sap.ui.commons.TextField","!category":"function"},"getDesign":{"!description":"Getter for property <code>design<\/code>.\n\nFont type. valid values are Standard and Monospace.\n\nDefault value is <code>Standard<\/code>.","!type":"fn() -> sap.ui.core.Design","!category":"function"},"getMaxLength":{"!description":"Getter for property <code>maxLength<\/code>.\n\nMaximum number of characters. Value '0' means the feature is switched off.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function"},"setRequired":{"!description":"Setter for property <code>required<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bRequired: Boolean) -> sap.ui.commons.TextField","!category":"function"},"getValueState":{"!description":"Getter for property <code>valueState<\/code>.\n\nVisualizes warnings or errors related to the text field. Possible values: Warning, Error, Success.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.ui.core.ValueState","!category":"function"},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"setPlaceholder":{"!description":"Setter for property <code>placeholder<\/code>.","!type":"fn(sPlaceholder: String) -> sap.ui.commons.TextField","!category":"function"},"getAriaDescribedBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaDescribedBy<\/code> association.\n\nAssociation to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setValueState":{"!description":"Setter for property <code>valueState<\/code>.\n\nDefault value is <code>None<\/code>.","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.commons.TextField","!category":"function"},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.TextField","!category":"function"},"!category":"class","setEnabled":{"!description":"Setter for property <code>enabled<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.TextField","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.TextField","!category":"function"},"setTextDirection":{"!description":"Setter for property <code>textDirection<\/code>.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.ui.commons.TextField","!category":"function"},"setTextAlign":{"!description":"Setter for property <code>textAlign<\/code>.\n\nDefault value is <code>Begin<\/code>.","!type":"fn(sTextAlign: sap.ui.core.TextAlign) -> sap.ui.commons.TextField","!category":"function"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setValue":{"!description":"Setter for property <code>value<\/code>.\n\nDefault value is <code><\/code>.","!type":"fn(sValue: String) -> sap.ui.commons.TextField","!category":"function"},"setMaxLength":{"!description":"Setter for property <code>maxLength<\/code>.\n\nDefault value is <code>0<\/code>.","!type":"fn(iMaxLength: Number) -> sap.ui.commons.TextField","!category":"function"},"detachChange":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'change' event of this <code>sap.ui.commons.TextField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.TextField","!category":"function"},"getPlaceholder":{"!description":"Getter for property <code>placeholder<\/code>.\n\nPlaceholder for the text field.","!type":"fn() -> String","!category":"function"},"bindValue":{"!description":"Binder for property <code>value<\/code>.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.TextField","!category":"function"},"!description":"Renders a input field for text input.","fireLiveChange":{"!description":"Fire event liveChange to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'liveValue' of type <code>string<\/code>Current visible value of the <code>TextField<\/code>.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.TextField","!category":"function"},"attachLiveChange":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'liveChange' event of this <code>sap.ui.commons.TextField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.TextField<\/code> itself.\n\nThis event if fired during typing into the <code>TextField<\/code> and returns the currently entered value.\n<b>Note:<\/b> This is not the content of the value property.\nThe value property is only updated by ENTER and by leaving the control.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.TextField","!category":"function"},"getName":{"!description":"Getter for property <code>name<\/code>.\n\nThe <code>name<\/code> property to be used in the HTML code (e.g. for HTML forms that send data to the server via 'submit').","!type":"fn() -> String","!category":"function"},"attachChange":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'change' event of this <code>sap.ui.commons.TextField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.TextField<\/code> itself.\n\nEvent is fired when the text in the field has changed AND the focus leaves the TextField or the Enter key is pressed.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.TextField","!category":"function"},"applyFocusInfo":{"!description":"Applies the focus info\noverwrite of the Element method because in IE8 on rerendering focus is lost","!type":"fn(oFocusInfo: Object) -> Object","!category":"function"},"onfocusin":{"!description":"Event handler called when control is receiving the focus","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.TextField.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.layout.BorderLayoutArea_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.BorderLayoutArea with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.BorderLayoutArea"},"sap.ui.commons.layout.HorizontalLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.HorizontalLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.HorizontalLayout.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.HorizontalLayout"},"sap.ui.commons.ValueHelpField_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ValueHelpField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ValueHelpField"},"sap.ui.commons.TextArea":{"getWrapping":{"!description":"Getter for property <code>wrapping<\/code>.\n\nText wrapping. Possible values are: Soft, Hard, Off.","!type":"fn() -> sap.ui.core.Wrapping","!category":"function"},"getLabeledBy":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.2 Please use association AriaLabelledBy instead.<br>Getter for property <code>labeledBy<\/code>.\n\nID of label control","!type":"fn() -> String","!category":"function"},"setLabeledBy":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.2 Please use association AriaLabelledBy instead.<br>Setter for property <code>labeledBy<\/code>.","!type":"fn(sLabeledBy: String) -> sap.ui.commons.TextArea","!category":"function"},"setRows":{"!description":"Setter for property <code>rows<\/code>.","!type":"fn(iRows: Number) -> sap.ui.commons.TextArea","!category":"function"},"setMaxLength":{"!description":"Property setter for MaxLength","!type":"fn(iMaxLength: Number) -> sap.ui.commons.TextArea","!category":"function"},"setExplanation":{"!description":"Setter for property <code>explanation<\/code>.","!type":"fn(sExplanation: String) -> sap.ui.commons.TextArea","!category":"function"},"getExplanation":{"!description":"Getter for property <code>explanation<\/code>.\n\ntext which appears, in case quick-help is switched on","!type":"fn() -> String","!category":"function"},"setCursorPos":{"!description":"Property setter for the cursor position","!type":"fn(iCursorPos: Number) -> sap.ui.commons.TextArea","!category":"function"},"getCols":{"!description":"Getter for property <code>cols<\/code>.\n\nNumber of Columns. Cols means number of characters per row. This proprty is only used if Width is not used.","!type":"fn() -> Number","!category":"function"},"getHeight":{"!description":"Getter for property <code>height<\/code>.\n\nHeight of text field. When it is set (CSS-size such as % or px), this is the exact size.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setWrapping":{"!description":"Setter for property <code>wrapping<\/code>.","!type":"fn(sWrapping: sap.ui.core.Wrapping) -> sap.ui.commons.TextArea","!category":"function"},"!description":"Control to enter or display multible row text.","setHeight":{"!description":"Setter for property <code>height<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.TextArea","!category":"function"},"!category":"class","getRows":{"!description":"Getter for property <code>rows<\/code>.\n\nNumber of Rows. This proprty is only used if Height is not used.","!type":"fn() -> Number","!category":"function"},"getCursorPos":{"!description":"Getter for property <code>cursorPos<\/code>.\n\nPosition of cursor, e.g., to let the user re-start typing at the same position as before the server roundtrip","!type":"fn() -> Number","!category":"function"},"setCols":{"!description":"Setter for property <code>cols<\/code>.","!type":"fn(iCols: Number) -> sap.ui.commons.TextArea","!category":"function"},"!proto":"sap.ui.commons.TextField","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.TextArea.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.Panel":{"getEnabled":{"!description":"Getter for property <code>enabled<\/code>.\n\nRepresents the state of the of the Panel (enabled or disabled)\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setScrollLeft":{"!description":"Sets the scroll position of the panel in pixels from the left.","!type":"fn(iPosition: Number) -> sap.ui.commons.Panel","!category":"function"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function"},"removeContent":{"!description":"Removes a content from the aggregation named <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"setText":{"!description":"Setter for property <code>text<\/code>.","!type":"fn(sText: String) -> sap.ui.commons.Panel","!category":"function"},"removeButton":{"!description":"Removes a button from the aggregation named <code>buttons<\/code>.","!type":"fn(vButton: Number | String | sap.ui.commons.Button) -> sap.ui.commons.Button","!category":"function"},"setBorderDesign":{"!description":"Setter for property <code>borderDesign<\/code>.\n\nDefault value is <code>Box<\/code>.","!type":"fn(sBorderDesign: sap.ui.commons.enums.BorderDesign) -> sap.ui.commons.Panel","!category":"function"},"setScrollTop":{"!description":"Sets the scrolls position of the panel in pixels from the top.","!type":"fn(iPosition: Number) -> sap.ui.commons.Panel","!category":"function"},"destroyContent":{"!description":"Destroys all the content in the aggregation\nnamed <code>content<\/code>.","!type":"fn() -> sap.ui.commons.Panel","!category":"function"},"getText":{"!description":"Getter for property <code>text<\/code>.\n\nCan be used to create a simple title text for Panels that do not require an icon in the header.","!type":"fn() -> String","!category":"function"},"getFocusInfo":{"!type":"fn()","!category":"function"},"getHeight":{"!description":"Getter for property <code>height<\/code>.\n\nPer default, the height for the Panel is automatically adjusted to the content. Dimension allows to explicitly specify the height.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"destroyButtons":{"!description":"Destroys all the buttons in the aggregation\nnamed <code>buttons<\/code>.","!type":"fn() -> sap.ui.commons.Panel","!category":"function"},"getScrollLeft":{"!description":"Returns the scroll position of the panel in pixels from the left. Returns 0 if not rendered yet.\nAlso internally updates the control property.","!type":"fn() -> Number","!category":"function"},"setApplyContentPadding":{"!description":"Property setter for the padding","!type":"fn(bPadding: Boolean) -> sap.ui.commons.Panel","!category":"function"},"getScrollTop":{"!description":"Returns the scroll position of the panel in pixels from the top. Returns 0 if not rendered yet.\nAlso internally updates the control property.","!type":"fn() -> Number","!category":"function"},"setShowCollapseIcon":{"!description":"Setter for property <code>showCollapseIcon<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowCollapseIcon: Boolean) -> sap.ui.commons.Panel","!category":"function"},"!category":"class","setEnabled":{"!description":"Property setter for the \"enabled\" state","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.Panel","!category":"function"},"indexOfButton":{"!description":"Checks for the provided <code>sap.ui.commons.Button<\/code> in the aggregation named <code>buttons<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oButton: sap.ui.commons.Button) -> Number","!category":"function"},"getTitle":{"!description":"Getter for aggregation <code>title<\/code>.\n\nAggregates the title element of the Panel. For text titles only, you alternatively could use setText() which also creates a title in the background.","!type":"fn() -> sap.ui.core.Title","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nPanel width in CSS size\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getButtons":{"!description":"Getter for aggregation <code>buttons<\/code>.\n\nThe buttons that shall be displayed in the Panel header","!type":"fn() -> [sap.ui.commons.Button]","!category":"function"},"setWidth":{"!description":"Sets the width of the panel.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Panel","!category":"function"},"setAreaDesign":{"!description":"Setter for property <code>areaDesign<\/code>.\n\nDefault value is <code>Fill<\/code>.","!type":"fn(sAreaDesign: sap.ui.commons.enums.AreaDesign) -> sap.ui.commons.Panel","!category":"function"},"getApplyContentPadding":{"!description":"Getter for property <code>applyContentPadding<\/code>.\n\nPadding is theme-dependent.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"addContent":{"!description":"Adds some content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.Panel","!category":"function"},"removeAllContent":{"!description":"Removes all the controls in the aggregation named <code>content<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getContent":{"!description":"Getter for aggregation <code>content<\/code>.\n\nAggregates the controls that are contained in the Panel. It is recommended to use a layout control as single direct child.\nWhen the Panel dimensions are set, the child control may have width and height of 100%. When the dimensions are not set, the child defines\nthe Panel size.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getBorderDesign":{"!description":"Getter for property <code>borderDesign<\/code>.\n\nThe Panel can have a box as border. Note that displaying borders is theme-dependent.\n\nDefault value is <code>Box<\/code>.","!type":"fn() -> sap.ui.commons.enums.BorderDesign","!category":"function"},"removeAllButtons":{"!description":"Removes all the controls in the aggregation named <code>buttons<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.Button]","!category":"function"},"destroyTitle":{"!description":"Destroys the title in the aggregation\nnamed <code>title<\/code>.","!type":"fn() -> sap.ui.commons.Panel","!category":"function"},"insertButton":{"!description":"Inserts a button into the aggregation named <code>buttons<\/code>.","!type":"fn(oButton: sap.ui.commons.Button, iIndex: Number) -> sap.ui.commons.Panel","!category":"function"},"setCollapsed":{"!description":"Property setter for the \"collapsed\" state","!type":"fn(bCollapsed: Boolean) -> sap.ui.commons.Panel","!category":"function"},"insertContent":{"!description":"Inserts a content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.Panel","!category":"function"},"!description":"Represents a container with scroll functionality, the control can be used for text and controls. The Panel does not layout the embedded controls.","getCollapsed":{"!description":"Getter for property <code>collapsed<\/code>.\n\nA collapsed Panel consumes less space than a not collapsed one. When it is initially collapsed, the contents are not rendered.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setTitle":{"!description":"Setter for the aggregated <code>title<\/code>.","!type":"fn(oTitle: sap.ui.core.Title) -> sap.ui.commons.Panel","!category":"function"},"getAreaDesign":{"!description":"Getter for property <code>areaDesign<\/code>.\n\nDefines the background color. Note that color settings are theme-dependent.\n\nDefault value is <code>Fill<\/code>.","!type":"fn() -> sap.ui.commons.enums.AreaDesign","!category":"function"},"addButton":{"!description":"Adds some button into the aggregation named <code>buttons<\/code>.","!type":"fn(oButton: sap.ui.commons.Button) -> sap.ui.commons.Panel","!category":"function"},"setHeight":{"!description":"Sets the height of the panel.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Panel","!category":"function"},"getShowCollapseIcon":{"!description":"Getter for property <code>showCollapseIcon<\/code>.\n\nSpecifies whether the Panel shall have an icon for collapsing/expanding, or not.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setDimensions":{"!description":"Sets the dimensions of the panel.","!type":"fn(sWidth: sap.ui.core.CSSSize, sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Panel","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Panel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.layout.BorderLayout":{"destroyBegin":{"!description":"Destroys the begin in the aggregation\nnamed <code>begin<\/code>.","!type":"fn() -> sap.ui.commons.layout.BorderLayout","!category":"function"},"indexOfContent":{"!description":"Determines the index of a given content control","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes, oContent: sap.ui.core.Control) -> Number","!category":"function"},"getBottom":{"!description":"Getter for aggregation <code>bottom<\/code>.\n\nRepresents the Bottom area","!type":"fn() -> sap.ui.commons.layout.BorderLayoutArea","!category":"function"},"removeContent":{"!description":"Removes the content with the given index from an area","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes, iIndex: Number)","!category":"function"},"getAreaData":{"!description":"Returns a JSON-like object that contains all property values of the requested area","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes) -> Object","!category":"function"},"getBegin":{"!description":"Getter for aggregation <code>begin<\/code>.\n\nRepresents the Begin area","!type":"fn() -> sap.ui.commons.layout.BorderLayoutArea","!category":"function"},"getEnd":{"!description":"Getter for aggregation <code>end<\/code>.\n\nRepresents the End area","!type":"fn() -> sap.ui.commons.layout.BorderLayoutArea","!category":"function"},"destroyContent":{"!description":"Destroys the content of the specified area","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes)","!category":"function"},"getHeight":{"!description":"Getter for property <code>height<\/code>.\n\nDefines the overall height of the layout\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getRtl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.2 RTL should not be configured on control level but is determined by a global configuration.<br>Getter for property <code>rtl<\/code>.\n\nThe RTL setting swaps the areas Begin and End. Since version 1.5.2, this property is deprecated and ignored as it conflicts with the central configuration for the page.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setAreaData":{"!description":"Sets the properties of the specified area with the given values","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes, oData: Object)","!category":"function"},"!category":"class","getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nDefines the overall width of the layout\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.layout.BorderLayout","!category":"function"},"setEnd":{"!description":"Setter for the aggregated <code>end<\/code>.","!type":"fn(oEnd: sap.ui.commons.layout.BorderLayoutArea) -> sap.ui.commons.layout.BorderLayout","!category":"function"},"setCenter":{"!description":"Setter for the aggregated <code>center<\/code>.","!type":"fn(oCenter: sap.ui.commons.layout.BorderLayoutArea) -> sap.ui.commons.layout.BorderLayout","!category":"function"},"getTop":{"!description":"Getter for aggregation <code>top<\/code>.\n\nRepresents the Top area","!type":"fn() -> sap.ui.commons.layout.BorderLayoutArea","!category":"function"},"setTop":{"!description":"Setter for the aggregated <code>top<\/code>.","!type":"fn(oTop: sap.ui.commons.layout.BorderLayoutArea) -> sap.ui.commons.layout.BorderLayout","!category":"function"},"addContent":{"!description":"Adds controls to the specified area","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes, oControls: sap.ui.core.Control)","!category":"function"},"getCenter":{"!description":"Getter for aggregation <code>center<\/code>.\n\nRepresents the Center area","!type":"fn() -> sap.ui.commons.layout.BorderLayoutArea","!category":"function"},"removeAllContent":{"!description":"Removes all content from an area","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes)","!category":"function"},"destroyEnd":{"!description":"Destroys the end in the aggregation\nnamed <code>end<\/code>.","!type":"fn() -> sap.ui.commons.layout.BorderLayout","!category":"function"},"destroyBottom":{"!description":"Destroys the bottom in the aggregation\nnamed <code>bottom<\/code>.","!type":"fn() -> sap.ui.commons.layout.BorderLayout","!category":"function"},"getContent":{"!description":"Returns all controls inside the specified area inside an array","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes) -> [sap.ui.core.Control]","!category":"function"},"setBegin":{"!description":"Setter for the aggregated <code>begin<\/code>.","!type":"fn(oBegin: sap.ui.commons.layout.BorderLayoutArea) -> sap.ui.commons.layout.BorderLayout","!category":"function"},"destroyTop":{"!description":"Destroys the top in the aggregation\nnamed <code>top<\/code>.","!type":"fn() -> sap.ui.commons.layout.BorderLayout","!category":"function"},"destroyCenter":{"!description":"Destroys the center in the aggregation\nnamed <code>center<\/code>.","!type":"fn() -> sap.ui.commons.layout.BorderLayout","!category":"function"},"getAreaById":{"!description":"Returns the object of the specified area. If the area does not exist, the area will be created and returned.","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes) -> sap.ui.commons.layout.BorderLayoutArea","!category":"function"},"insertContent":{"!description":"Inserts controls to an area at a given index.","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes, iIndex: Number, oControl: sap.ui.core.Control)","!category":"function"},"getArea":{"!description":"Returns the area of the given type. If the area does not exist, it will be created when create is set to true.","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes, bCreate: Boolean) -> sap.ui.commons.layout.BorderLayoutAreaTypes","!category":"function"},"!description":"Based upon the border layout as it comes with the Java standard. Using this layout, you are able to divide your available UI space into five areas whose sizes can be defined. These areas are: Top: Header; Bottom: Footer; Begin: Left/right-hand side panel; Center: Content area\nin the middle; End: Right/left-hand side panel.","setHeight":{"!description":"Setter for property <code>height<\/code>.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.layout.BorderLayout","!category":"function"},"setBottom":{"!description":"Setter for the aggregated <code>bottom<\/code>.","!type":"fn(oBottom: sap.ui.commons.layout.BorderLayoutArea) -> sap.ui.commons.layout.BorderLayout","!category":"function"},"createArea":{"!description":"Creates the specified area and adds the given controls to it. Returns the created area.","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes, oControls: sap.ui.core.Control) -> sap.ui.commons.layout.BorderLayoutArea","!category":"function"},"setRtl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.2 RTL should not be configured on control level but is determined by a global configuration.<br>Setter for property <code>rtl<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bRtl: Boolean) -> sap.ui.commons.layout.BorderLayout","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.BorderLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.layout.MatrixLayoutRow":{"indexOfCell":{"!description":"Checks for the provided <code>sap.ui.commons.layout.MatrixLayoutCell<\/code> in the aggregation named <code>cells<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oCell: sap.ui.commons.layout.MatrixLayoutCell) -> Number","!category":"function"},"getCells":{"!description":"Getter for aggregation <code>cells<\/code>.\n\n\nThe matrix layout row's individual cells.","!type":"fn() -> [sap.ui.commons.layout.MatrixLayoutCell]","!category":"function"},"removeStyleClass":{"!description":"Removes the given string from the list of custom style classes that have been set previously.\nRegular style classes like \"sapUiBtn\" cannot be removed.\n\nReturns <code>this<\/code> to allow method chaining","!type":"fn(sStyleClass: String) -> sap.ui.commons.layout.MatrixLayoutRow","!category":"function"},"insertCell":{"!description":"Inserts a cell into the aggregation named <code>cells<\/code>.","!type":"fn(oCell: sap.ui.commons.layout.MatrixLayoutCell, iIndex: Number) -> sap.ui.commons.layout.MatrixLayoutRow","!category":"function"},"destroyCells":{"!description":"Destroys all the cells in the aggregation\nnamed <code>cells<\/code>.","!type":"fn() -> sap.ui.commons.layout.MatrixLayoutRow","!category":"function"},"addCell":{"!description":"Adds some cell into the aggregation named <code>cells<\/code>.","!type":"fn(oCell: sap.ui.commons.layout.MatrixLayoutCell) -> sap.ui.commons.layout.MatrixLayoutRow","!category":"function"},"removeAllCells":{"!description":"Removes all the controls in the aggregation named <code>cells<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.layout.MatrixLayoutCell]","!category":"function"},"hasStyleClass":{"!description":"Returns true if the given style class string is valid and if this Element has this style class set via a previous call to addStyleClass().","!type":"fn(sStyleClass: String) -> Boolean","!category":"function"},"getHeight":{"!description":"Getter for property <code>height<\/code>.\n\nHeight of the row.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"!description":"\nNon-control element used as part of a matrix layout's inner structure.","setHeight":{"!description":"Setter for property <code>height<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.layout.MatrixLayoutRow","!category":"function"},"!category":"class","addStyleClass":{"!description":"The string given as \"sStyleClass\" will be added to the \"class\" attribute of this element's root HTML element.\n\nThis method is intended to be used to mark controls as being of a special type for which\nspecial styling can be provided using CSS selectors that reference this style class name.\n\n<pre>\nExample:\nmyButton.addStyleClass(\"myRedTextButton\"); // add a CSS class to one button instance\n\n...and in CSS:\n.myRedTextButton {\ncolor: red;\n}\n<\/pre>\n\nThis will add the CSS class \"myRedTextButton\" to the Button HTML and the CSS code above will then\nmake the text in this particular button red.\n\nOnly characters allowed inside HTML attributes are allowed.\nQuotes are not allowed and this method will ignore any strings containing quotes.\nStrings containing spaces are interpreted as ONE custom style class (even though CSS selectors interpret them\nas different classes) and can only removed later by calling removeStyleClass() with exactly the\nsame (space-containing) string as parameter.\nMultiple calls with the same sStyleClass will have no different effect than calling once.\nIf sStyleClass is null, the call is ignored.\n\nReturns <code>this<\/code> to allow method chaining","!type":"fn(sStyleClass: String) -> sap.ui.commons.layout.MatrixLayoutRow","!category":"function"},"removeCell":{"!description":"Removes a cell from the aggregation named <code>cells<\/code>.","!type":"fn(vCell: Number | String | sap.ui.commons.layout.MatrixLayoutCell) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function"},"!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.MatrixLayoutRow.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.ToolbarSeparator":{"!description":"A small vertical line that is generally added to the tool bar between the items to visually separate them.","getDesign":{"!description":"Getter for property <code>design<\/code>.\n\nDesign of the Separator.","!type":"fn() -> sap.ui.commons.ToolbarSeparatorDesign","!category":"function"},"!category":"class","getDisplayVisualSeparator":{"!description":"Getter for property <code>displayVisualSeparator<\/code>.\n\nWhen set to false, there is no visual indication of separation by a vertical line but by a wider space.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setDisplayVisualSeparator":{"!description":"Setter for property <code>displayVisualSeparator<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bDisplayVisualSeparator: Boolean) -> sap.ui.commons.ToolbarSeparator","!category":"function"},"setDesign":{"!description":"Setter for property <code>design<\/code>.","!type":"fn(sDesign: sap.ui.commons.ToolbarSeparatorDesign) -> sap.ui.commons.ToolbarSeparator","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ToolbarSeparator.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Element"},"sap.ui.commons.RowRepeater_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RowRepeater with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RowRepeater"},"sap.ui.commons.Toolbar":{"insertRightItem":{"!description":"Inserts a rightItem into the aggregation named <code>rightItems<\/code>.","!type":"fn(oRightItem: sap.ui.commons.ToolbarItem, iIndex: Number) -> sap.ui.commons.Toolbar","!category":"function"},"removeItem":{"!description":"Removes a item from the aggregation named <code>items<\/code>.","!type":"fn(vItem: Number | String | sap.ui.commons.ToolbarItem) -> sap.ui.commons.ToolbarItem","!category":"function"},"setStandalone":{"!description":"Setter for property <code>standalone<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bStandalone: Boolean) -> sap.ui.commons.Toolbar","!category":"function"},"getDesign":{"!description":"Getter for property <code>design<\/code>.\n\nDesign settings are theme-dependent.\n\nDefault value is <code>Flat<\/code>.","!type":"fn() -> sap.ui.commons.ToolbarDesign","!category":"function"},"addItem":{"!description":"Adds some item into the aggregation named <code>items<\/code>.","!type":"fn(oItem: sap.ui.commons.ToolbarItem) -> sap.ui.commons.Toolbar","!category":"function"},"removeAllRightItems":{"!description":"Removes all the controls in the aggregation named <code>rightItems<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.ToolbarItem]","!category":"function"},"indexOfRightItem":{"!description":"Checks for the provided <code>sap.ui.commons.ToolbarItem<\/code> in the aggregation named <code>rightItems<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oRightItem: sap.ui.commons.ToolbarItem) -> Number","!category":"function"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.commons.ToolbarItem<\/code> in the aggregation named <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oItem: sap.ui.commons.ToolbarItem) -> Number","!category":"function"},"destroyRightItems":{"!description":"Destroys all the rightItems in the aggregation\nnamed <code>rightItems<\/code>.","!type":"fn() -> sap.ui.commons.Toolbar","!category":"function"},"!description":"A horizontal row of items where in many cases the single toolbar items are buttons containing icons. Note that all controls with the\nsap.ui.commons.ToolbarItem interface can be used as item: Button, ComboBox, TextField.","getItems":{"!description":"Getter for aggregation <code>items<\/code>.\n\nAggregating the tool bar items.","!type":"fn() -> [sap.ui.commons.ToolbarItem]","!category":"function"},"getStandalone":{"!description":"Getter for property <code>standalone<\/code>.\n\nPer default, tool bars have the stand alone status.\nAlternatively, they can be nested in other controls and then inherit the design from their parent control.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"removeRightItem":{"!description":"Removes a rightItem from the aggregation named <code>rightItems<\/code>.","!type":"fn(vRightItem: Number | String | sap.ui.commons.ToolbarItem) -> sap.ui.commons.ToolbarItem","!category":"function"},"getRightItems":{"!description":"Getter for aggregation <code>rightItems<\/code>.\n\nAggregating the right side tool bar items.","!type":"fn() -> [sap.ui.commons.ToolbarItem]","!category":"function"},"!category":"class","destroyItems":{"!description":"Destroys all the items in the aggregation\nnamed <code>items<\/code>.","!type":"fn() -> sap.ui.commons.Toolbar","!category":"function"},"removeAllItems":{"!description":"Removes all the controls in the aggregation named <code>items<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.ToolbarItem]","!category":"function"},"addRightItem":{"!description":"Adds some rightItem into the aggregation named <code>rightItems<\/code>.","!type":"fn(oRightItem: sap.ui.commons.ToolbarItem) -> sap.ui.commons.Toolbar","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nWhen there is not enough space for the toolbar to display all items, the rightmost items are overflowing into a drop-down menu.\n\nDefault value is <code>auto<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.\n\nDefault value is <code>auto<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Toolbar","!category":"function"},"setDesign":{"!description":"Setter for property <code>design<\/code>.\n\nDefault value is <code>Flat<\/code>.","!type":"fn(sDesign: sap.ui.commons.ToolbarDesign) -> sap.ui.commons.Toolbar","!category":"function"},"insertItem":{"!description":"Inserts a item into the aggregation named <code>items<\/code>.","!type":"fn(oItem: sap.ui.commons.ToolbarItem, iIndex: Number) -> sap.ui.commons.Toolbar","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Toolbar.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.Carousel":{"getVisibleItems":{"!description":"Getter for property <code>visibleItems<\/code>.\n\nIf defined, the carousel displays the number of items defined. Items will be resized to fit the area.","!type":"fn() -> Number","!category":"function"},"showPrevious":{"!description":"Shows previous item in carousel. This can be only used after the component is rendered.","!type":"fn()","!category":"function"},"getAnimationDuration":{"!description":"Getter for property <code>animationDuration<\/code>.\n\nDuration for animation when navigating through children\n\nDefault value is <code>500<\/code>.","!type":"fn() -> Number","!category":"function"},"showNext":{"!description":"Shows next item in carousel. This can be only used after the component is rendered.","!type":"fn()","!category":"function"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function"},"bindContent":{"!description":"Binder for aggregation <code>content<\/code>.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.Carousel","!category":"function"},"removeContent":{"!description":"Removes a content from the aggregation named <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"setDefaultItemWidth":{"!description":"Setter for property <code>defaultItemWidth<\/code>.\n\nDefault value is <code>150<\/code>.","!type":"fn(iDefaultItemWidth: Number) -> sap.ui.commons.Carousel","!category":"function"},"getFirstVisibleIndex":{"!description":"Getter for property <code>firstVisibleIndex<\/code>.\n\nThe index of the element in the content aggreation which is displayed first on rendering\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function"},"destroyContent":{"!description":"Destroys all the content in the aggregation\nnamed <code>content<\/code>.","!type":"fn() -> sap.ui.commons.Carousel","!category":"function"},"getHeight":{"!description":"Getter for property <code>height<\/code>.\n\nHeight of carousel","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getDefaultItemHeight":{"!description":"Getter for property <code>defaultItemHeight<\/code>.\n\nDefault height of item in carousel if no height can be determined\n\nDefault value is <code>150<\/code>.","!type":"fn() -> Number","!category":"function"},"setAnimationDuration":{"!description":"Setter for property <code>animationDuration<\/code>.\n\nDefault value is <code>500<\/code>.","!type":"fn(iAnimationDuration: Number) -> sap.ui.commons.Carousel","!category":"function"},"!category":"class","setOrientation":{"!description":"Setter for property <code>orientation<\/code>.\n\nDefault value is <code>horizontal<\/code>.","!type":"fn(sOrientation: sap.ui.commons.enums.Orientation) -> sap.ui.commons.Carousel","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nWidth of carousel","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setFirstVisibleIndex":{"!description":"Setter for property <code>firstVisibleIndex<\/code>.\n\nDefault value is <code>0<\/code>","!type":"fn(iFirstVisibleIndex: Number) -> sap.ui.commons.Carousel","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Carousel","!category":"function"},"setVisibleItems":{"!description":"Setter for property <code>visibleItems<\/code>.","!type":"fn(iVisibleItems: Number) -> sap.ui.commons.Carousel","!category":"function"},"getHandleSize":{"!description":"Getter for property <code>handleSize<\/code>.\n\nSize of the handle in pixels. (Height for vertical carousel, width for horizontal carousel)\n\nDefault value is <code>22<\/code>.","!type":"fn() -> Number","!category":"function"},"addContent":{"!description":"Adds some content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.Carousel","!category":"function"},"getContent":{"!description":"Getter for aggregation <code>content<\/code>.\n\nControls which are displayed inside the carousel","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"removeAllContent":{"!description":"Removes all the controls in the aggregation named <code>content<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setDefaultItemHeight":{"!description":"Setter for property <code>defaultItemHeight<\/code>.\n\nDefault value is <code>150<\/code>.","!type":"fn(iDefaultItemHeight: Number) -> sap.ui.commons.Carousel","!category":"function"},"getOrientation":{"!description":"Getter for property <code>orientation<\/code>.\n\nCan be either \"horizontal\" or \"vertical\"\n\nDefault value is <code>horizontal<\/code>.","!type":"fn() -> sap.ui.commons.enums.Orientation","!category":"function"},"getDefaultItemWidth":{"!description":"Getter for property <code>defaultItemWidth<\/code>.\n\nDefault width of item in carousel if no height can be determined\n\nDefault value is <code>150<\/code>.","!type":"fn() -> Number","!category":"function"},"!description":"Carousel holds multiple controls and displays them vertical or horizontal next to each other. You can define how many content items should be displayed at once or let the carousel determine that for you. Navigation is done through buttons or keys.","insertContent":{"!description":"Inserts a content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.Carousel","!category":"function"},"setHeight":{"!description":"Setter for property <code>height<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Carousel","!category":"function"},"unbindContent":{"!description":"Unbinder for aggregation <code>content<\/code>.","!type":"fn() -> sap.ui.commons.Carousel","!category":"function"},"setHandleSize":{"!description":"Setter for property <code>handleSize<\/code>.\n\nDefault value is <code>22<\/code>.","!type":"fn(iHandleSize: Number) -> sap.ui.commons.Carousel","!category":"function"},"showElementWithId":{"!description":"Shows the element with id specified. This can be only used after the component is rendered.","!type":"fn(sElementId: String)","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Carousel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.Carousel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Carousel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Carousel"},"sap.ui.commons.Tab":{"getVerticalScrolling":{"!description":"Getter for property <code>verticalScrolling<\/code>.\n\nSet the height property.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.ui.core.Scrolling","!category":"function"},"getClosable":{"!description":"Getter for property <code>closable<\/code>.\n\nDefines whether the tab contains a close button.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"!description":"A single page in a TabStrip control.","setVerticalScrolling":{"!description":"Setter for property <code>verticalScrolling<\/code>.\n\nDefault value is <code>None<\/code>.","!type":"fn(sVerticalScrolling: sap.ui.core.Scrolling) -> sap.ui.commons.Tab","!category":"function"},"setClosable":{"!description":"Setter for property <code>closable<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bClosable: Boolean) -> sap.ui.commons.Tab","!category":"function"},"!category":"class","setHorizontalScrolling":{"!description":"Setter for property <code>horizontalScrolling<\/code>.\n\nDefault value is <code>None<\/code>.","!type":"fn(sHorizontalScrolling: sap.ui.core.Scrolling) -> sap.ui.commons.Tab","!category":"function"},"getSelected":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 0.17.0 This property is not used. To indentify the selected tab in a TabStrip selectedIndex is used.<br>Getter for property <code>selected<\/code>.\n\nDefines whether the tab is the active one.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getHorizontalScrolling":{"!description":"Getter for property <code>horizontalScrolling<\/code>.\n\nSet the width property.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.ui.core.Scrolling","!category":"function"},"setSelected":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 0.17.0 This property is not used. To indentify the selected tab in a TabStrip selectedIndex is used.<br>Setter for property <code>selected<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bSelected: Boolean) -> sap.ui.commons.Tab","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Tab.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.commons.Panel"},"sap.ui.commons.Paginator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Paginator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Paginator"},"sap.ui.commons.layout.ResponsiveFlowLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.ResponsiveFlowLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.ResponsiveFlowLayout.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.ResponsiveFlowLayout"},"sap.ui.commons.AccordionSection_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.AccordionSection with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.AccordionSection"},"sap.ui.commons.Accordion_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Accordion with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Accordion"},"sap.ui.commons.SearchField":{"getEnableClear":{"!description":"Getter for property <code>enableClear<\/code>.\n\nDefines whether the clear functionality shall be active\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getShowListExpander":{"!description":"Getter for property <code>showListExpander<\/code>.\n\nDefines whether the list expander shall be displayed in the case of an enabled list for suggestions. This feature is deactivated on mobile devices.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setEnableCache":{"!description":"Setter for property <code>enableCache<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableCache: Boolean) -> sap.ui.commons.SearchField","!category":"function"},"setShowExternalButton":{"!description":"Setter for property <code>showExternalButton<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowExternalButton: Boolean) -> sap.ui.commons.SearchField","!category":"function"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"setEnableListSuggest":{"!description":"Setter for property <code>enableListSuggest<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableListSuggest: Boolean) -> sap.ui.commons.SearchField","!category":"function"},"getShowExternalButton":{"!description":"Getter for property <code>showExternalButton<\/code>.\n\nDefines whether an additional search button shall be displayed\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setEditable":{"!description":"Setter for property <code>editable<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEditable: Boolean) -> sap.ui.commons.SearchField","!category":"function"},"setStartSuggestion":{"!description":"Setter for property <code>startSuggestion<\/code>.\n\nDefault value is <code>3<\/code>.","!type":"fn(iStartSuggestion: Number) -> sap.ui.commons.SearchField","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nControl width in CSS-size","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getAriaLabelledBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaLabelledBy<\/code> association.\n\nAssociation to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"fireSuggest":{"!description":"Fire event suggest to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'value' of type <code>string<\/code>The value for which suggestions are required.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.SearchField","!category":"function"},"clearHistory":{"!description":"Clears the history of the control","!type":"fn()","!category":"function"},"getEditable":{"!description":"Getter for property <code>editable<\/code>.\n\nNon-editable controls have different colors, depending on custom settings\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setShowListExpander":{"!description":"Setter for property <code>showListExpander<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowListExpander: Boolean) -> sap.ui.commons.SearchField","!category":"function"},"setEnableClear":{"!description":"Setter for property <code>enableClear<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bEnableClear: Boolean) -> sap.ui.commons.SearchField","!category":"function"},"suggest":{"!description":"Callback function used to provide the suggest values in the handler of the suggest event (only in list suggestion mode)","!type":"fn(sSSuggestValue: String, aASuggestions: [String])","!category":"function"},"getTextAlign":{"!description":"Getter for property <code>textAlign<\/code>.\n\nSets the horizontal alignment of the text\n\nDefault value is <code>Begin<\/code>.","!type":"fn() -> sap.ui.core.TextAlign","!category":"function"},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.SearchField","!category":"function"},"setVisibleItemCount":{"!description":"Setter for property <code>visibleItemCount<\/code>.\n\nDefault value is <code>20<\/code>.","!type":"fn(iVisibleItemCount: Number) -> sap.ui.commons.SearchField","!category":"function"},"getEnableFilterMode":{"!description":"Getter for property <code>enableFilterMode<\/code>.\n\nDefines whether the search event should also be fired when the SearchField is empty (like a Filter field) and when the clear button (if activated) is pressed.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setEnableFilterMode":{"!description":"Setter for property <code>enableFilterMode<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bEnableFilterMode: Boolean) -> sap.ui.commons.SearchField","!category":"function"},"getEnableListSuggest":{"!description":"Getter for property <code>enableListSuggest<\/code>.\n\nDefines whether a pop up list shall be provided for suggestions\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getMaxHistoryItems":{"!description":"Getter for property <code>maxHistoryItems<\/code>.\n\nMaximum number of history items in the suggestion list.\n0 displays and stores no history. The history is locally stored on the client. Therefore do not activate this feature when this control handles confidential data.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function"},"!proto":"sap.ui.core.Control","getEnableCache":{"!description":"Getter for property <code>enableCache<\/code>.\n\nWhen list suggestion is enabled all suggestions are cached and no suggest event is fired.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getValue":{"!description":"Getter for property <code>value<\/code>.\n\nText that shall be displayed within the search field\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function"},"getEnabled":{"!description":"Getter for property <code>enabled<\/code>.\n\nDisabled fields have different colors, and they can not be focused.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getMaxLength":{"!description":"Getter for property <code>maxLength<\/code>.\n\nMaximum number of characters. Value '0' means the feature is switched off.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function"},"setMaxHistoryItems":{"!description":"Setter for property <code>maxHistoryItems<\/code>.\n\nDefault value is <code>0<\/code>.","!type":"fn(iMaxHistoryItems: Number) -> sap.ui.commons.SearchField","!category":"function"},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"setMaxSuggestionItems":{"!description":"Setter for property <code>maxSuggestionItems<\/code>.\n\nDefault value is <code>10<\/code>.","!type":"fn(iMaxSuggestionItems: Number) -> sap.ui.commons.SearchField","!category":"function"},"getAriaDescribedBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaDescribedBy<\/code> association.\n\nAssociation to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"attachSearch":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'search' event of this <code>sap.ui.commons.SearchField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.SearchField<\/code> itself.\n\nEvent which is fired when the user triggers a search","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.SearchField","!category":"function"},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.SearchField","!category":"function"},"!category":"class","setEnabled":{"!description":"Setter for property <code>enabled<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.SearchField","!category":"function"},"fireSearch":{"!description":"Fire event search to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'query' of type <code>string<\/code>The search query<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.SearchField","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.SearchField","!category":"function"},"attachSuggest":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'suggest' event of this <code>sap.ui.commons.SearchField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.SearchField<\/code> itself.\n\nEvent which is fired when new suggest values are required.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.SearchField","!category":"function"},"detachSearch":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'search' event of this <code>sap.ui.commons.SearchField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.SearchField","!category":"function"},"getMaxSuggestionItems":{"!description":"Getter for property <code>maxSuggestionItems<\/code>.\n\n\nMaximum number of suggestion items in the suggestion list.\n\nDefault value is <code>10<\/code>.","!type":"fn() -> Number","!category":"function"},"detachSuggest":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'suggest' event of this <code>sap.ui.commons.SearchField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.SearchField","!category":"function"},"setTextAlign":{"!description":"Setter for property <code>textAlign<\/code>.\n\nDefault value is <code>Begin<\/code>.","!type":"fn(sTextAlign: sap.ui.core.TextAlign) -> sap.ui.commons.SearchField","!category":"function"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setValue":{"!description":"Setter for property <code>value<\/code>.\n\nDefault value is <code><\/code>.","!type":"fn(sValue: String) -> sap.ui.commons.SearchField","!category":"function"},"destroySearchProvider":{"!description":"Destroys the searchProvider in the aggregation\nnamed <code>searchProvider<\/code>.","!type":"fn() -> sap.ui.commons.SearchField","!category":"function"},"setMaxLength":{"!description":"Setter for property <code>maxLength<\/code>.\n\nDefault value is <code>0<\/code>.","!type":"fn(iMaxLength: Number) -> sap.ui.commons.SearchField","!category":"function"},"getSearchProvider":{"!description":"Getter for aggregation <code>searchProvider<\/code>.\n\nSearch provider instance which handles the suggestions for this SearchField (e.g. Open Search Protocol).","!type":"fn() -> sap.ui.core.search.SearchProvider","!category":"function"},"getStartSuggestion":{"!description":"Getter for property <code>startSuggestion<\/code>.\n\n\nMinimum length of the entered string triggering the suggestion list.\n\nDefault value is <code>3<\/code>.","!type":"fn() -> Number","!category":"function"},"!description":"Allows the user to type search queries and to trigger the search. Optionally, suggestions can be added.","getVisibleItemCount":{"!description":"Getter for property <code>visibleItemCount<\/code>.\n\n\nDefines the number of items in the suggestion list that shall be displayed at once. If the overall number of list items is higher than the setting,\na scroll bar is provided.\n\nDefault value is <code>20<\/code>.","!type":"fn() -> Number","!category":"function"},"setSearchProvider":{"!description":"Setter for the aggregated <code>searchProvider<\/code>.","!type":"fn(oSearchProvider: sap.ui.core.search.SearchProvider) -> sap.ui.commons.SearchField","!category":"function"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.SearchField.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.RadioButtonGroup":{"removeItem":{"!description":"Removes a item from the aggregation named <code>items<\/code>.","!type":"fn(vItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item","!category":"function"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"getEnabled":{"!description":"Getter for property <code>enabled<\/code>.\n\nIf set the RadioButtonGroup is enabled, if not it is disabled. If it is disabled all RadioButtons will be shown as disabled. The enabled property of the item will not be uses in this case. If the RadioButtonGroup is enabled the enabled property of the item will define if a RadioButton is enabled or not.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"bindItems":{"!description":"Binder for aggregation <code>items<\/code>.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.RadioButtonGroup","!category":"function"},"addItem":{"!description":"Adds some item into the aggregation named <code>items<\/code>.","!type":"fn(oItem: sap.ui.core.Item) -> sap.ui.commons.RadioButtonGroup","!category":"function"},"getColumns":{"!description":"Getter for property <code>columns<\/code>.\n\nNumber of RadioButtons displayed in one Line.\n\nDefault value is <code>1<\/code>.","!type":"fn() -> Number","!category":"function"},"getValueState":{"!description":"Getter for property <code>valueState<\/code>.\n\nThe value state to be displayed.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.ui.core.ValueState","!category":"function"},"attachSelect":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'select' event of this <code>sap.ui.commons.RadioButtonGroup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.RadioButtonGroup<\/code> itself.\n\nEvent is fired when selection is changed by user interaction.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RadioButtonGroup","!category":"function"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation named <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oItem: sap.ui.core.Item) -> Number","!category":"function"},"unbindItems":{"!description":"Unbinder for aggregation <code>items<\/code>.","!type":"fn() -> sap.ui.commons.RadioButtonGroup","!category":"function"},"setSelectedItem":{"!description":"Sets the item as selected and removes the selection from the old one.","!type":"fn(oSelectedItem: sap.ui.core.Item)","!category":"function"},"getAriaDescribedBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaDescribedBy<\/code> association.\n\nAssociation to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setEditable":{"!description":"Setter for property <code>editable<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEditable: Boolean) -> sap.ui.commons.RadioButtonGroup","!category":"function"},"setValueState":{"!description":"Setter for property <code>valueState<\/code>.\n\nDefault value is <code>None<\/code>.","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.commons.RadioButtonGroup","!category":"function"},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.RadioButtonGroup","!category":"function"},"!category":"class","setEnabled":{"!description":"Setter for property <code>enabled<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.RadioButtonGroup","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nWidth of the RadioButtonGroup.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getAriaLabelledBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaLabelledBy<\/code> association.\n\nAssociation to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.RadioButtonGroup","!category":"function"},"getEditable":{"!description":"Getter for property <code>editable<\/code>.\n\nSpecifies whether the user can choose a radio button.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setColumns":{"!description":"Setter for property <code>columns<\/code>.\n\nDefault value is <code>1<\/code>.","!type":"fn(iColumns: Number) -> sap.ui.commons.RadioButtonGroup","!category":"function"},"fireSelect":{"!description":"Fire event select to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'selectedIndex' of type <code>int<\/code>Index of the selected RadioButton.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.RadioButtonGroup","!category":"function"},"detachSelect":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'select' event of this <code>sap.ui.commons.RadioButtonGroup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RadioButtonGroup","!category":"function"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getSelectedItem":{"!description":"Returns selected item. When no item is selected, \"null\" is returned.","!type":"fn() -> sap.ui.core.Item","!category":"function"},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.RadioButtonGroup","!category":"function"},"!description":"a group of RadioButtons to hande as one UI element.","getItems":{"!description":"Getter for aggregation <code>items<\/code>.\n\nRadioButtons of this RadioButtonGroup","!type":"fn() -> [sap.ui.core.Item]","!category":"function"},"destroyItems":{"!description":"Destroys all the items in the aggregation\nnamed <code>items<\/code>.","!type":"fn() -> sap.ui.commons.RadioButtonGroup","!category":"function"},"removeAllItems":{"!description":"Removes all the controls in the aggregation named <code>items<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Item]","!category":"function"},"setSelectedIndex":{"!description":"Setter for property <code>selectedIndex<\/code>.\n\nDefault value is <code>0<\/code>.","!type":"fn(iSelectedIndex: Number) -> sap.ui.commons.RadioButtonGroup","!category":"function"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getSelectedIndex":{"!description":"Getter for property <code>selectedIndex<\/code>.\n\nIndex of the selected/checked RadioButton.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function"},"insertItem":{"!description":"Inserts a item into the aggregation named <code>items<\/code>.","!type":"fn(oItem: sap.ui.core.Item, iIndex: Number) -> sap.ui.commons.RadioButtonGroup","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RadioButtonGroup.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.RoadMap_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RoadMap with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RoadMap"},"sap.ui.commons.FormattedTextView":{"setHtmlText":{"!description":"Setter for property <code>htmlText<\/code>.\n\nDefault value is <code><\/code>.","!type":"fn(sHtmlText: String) -> sap.ui.commons.FormattedTextView","!category":"function"},"getControls":{"!description":"Getter for aggregation <code>controls<\/code>.\n\nArray of controls that should be replaced within htmlText","!type":"fn() -> [sap.ui.commons.FormattedTextViewControl]","!category":"function"},"setAccessibleRole":{"!description":"Setter for property <code>accessibleRole<\/code>.\n\nDefault value is <code>Document<\/code>.","!type":"fn(sAccessibleRole: sap.ui.core.AccessibleRole) -> sap.ui.commons.FormattedTextView","!category":"function"},"setContent":{"!description":"Sets text with placeholders and given array of controls","!type":"fn(sHtmlText: String, oControls: sap.ui.commons.FormattedTextViewControl)","!category":"function"},"removeAllControls":{"!description":"Removes all the controls in the aggregation named <code>controls<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.FormattedTextViewControl]","!category":"function"},"removeControl":{"!description":"Removes a control from the aggregation named <code>controls<\/code>.","!type":"fn(vControl: Number | String | sap.ui.commons.FormattedTextViewControl) -> sap.ui.commons.FormattedTextViewControl","!category":"function"},"indexOfControl":{"!description":"Checks for the provided <code>sap.ui.commons.FormattedTextViewControl<\/code> in the aggregation named <code>controls<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oControl: sap.ui.commons.FormattedTextViewControl) -> Number","!category":"function"},"!description":"Allows to use a limited set of HTML tags for display","getAccessibleRole":{"!description":"Getter for property <code>accessibleRole<\/code>.\n\nThe ARIA role for the control.\n\nDefault value is <code>Document<\/code>.","!type":"fn() -> sap.ui.core.AccessibleRole","!category":"function"},"insertControl":{"!description":"Inserts a control into the aggregation named <code>controls<\/code>.","!type":"fn(oControl: sap.ui.commons.FormattedTextViewControl, iIndex: Number) -> sap.ui.commons.FormattedTextView","!category":"function"},"destroyControls":{"!description":"Destroys all the controls in the aggregation\nnamed <code>controls<\/code>.","!type":"fn() -> sap.ui.commons.FormattedTextView","!category":"function"},"!category":"class","addControl":{"!description":"Adds some control into the aggregation named <code>controls<\/code>.","!type":"fn(oControl: sap.ui.commons.FormattedTextViewControl) -> sap.ui.commons.FormattedTextView","!category":"function"},"getHtmlText":{"!description":"Getter for property <code>htmlText<\/code>.\n\nText with placeholders\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.FormattedTextView.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.layout.AbsoluteLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.AbsoluteLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.AbsoluteLayout"},"sap.ui.commons.enums.BorderDesign":{"!description":"Value set for the border design of areas","!category":"static class","None":{"!description":"Suppresses the border","!type":"String","!category":"enum"},"Box":{"!description":"Draws the border as a box around the area","!type":"String","!category":"enum"}},"sap.ui.commons.enums.Orientation":{"vertical":{"!description":"Vertical orientation","!type":"String","!category":"enum"},"!description":"Orientation of a UI element","horizontal":{"!description":"Horizontal orientation","!type":"String","!category":"enum"},"!category":"static class"},"sap.ui.commons.layout.BorderLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.BorderLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.BorderLayout"},"sap.ui.commons.layout.PositionContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.PositionContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.PositionContainer"},"sap.ui.commons.Label":{"getWrapping":{"!description":"Getter for property <code>wrapping<\/code>.\n\nSpecifies whether a line wrapping shall be displayed when the text value is longer than the width\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setTextDirection":{"!description":"Setter for property <code>textDirection<\/code>.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.ui.commons.Label","!category":"function"},"getRequiredAtBegin":{"!description":"Getter for property <code>requiredAtBegin<\/code>.\n\nIf set the required indicator is at the begin of the label, if not set at the end.","!type":"fn() -> Boolean","!category":"function"},"getTextDirection":{"!description":"Getter for property <code>textDirection<\/code>.\n\n\nOptions for the text direction are RTL and LTR. Alternatively, the control can inherit the text direction from its parent container.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn() -> sap.ui.core.TextDirection","!category":"function"},"getLabelFor":{"!description":"Id of the element which is the current target of the <code>labelFor<\/code> association, or null.\n\nAssociation to the labeled control.\nBy default the label set the for attribute to the ID of the labeled control. This can be changed implementing function getIdForLabel on the labelled control.","!type":"fn() -> sap.ui.core.Control","!category":"function"},"getDesign":{"!description":"Getter for property <code>design<\/code>.\n\n\nLabels can have bold format.\n\nDefault value is <code>Standard<\/code>.","!type":"fn() -> sap.ui.commons.LabelDesign","!category":"function"},"getRequired":{"!description":"Getter for property <code>required<\/code>.\n\nAllows to enforce the required indicator even when the associated control doesn't have a getRequired method (a required property) or when the flag is not set.\nIf the associated control has a required property, the values of both required flags are combined with the OR operator, so a Label can't override a required=true value.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setTextAlign":{"!description":"Setter for property <code>textAlign<\/code>.\n\nDefault value is <code>Begin<\/code>.","!type":"fn(sTextAlign: sap.ui.core.TextAlign) -> sap.ui.commons.Label","!category":"function"},"setRequired":{"!description":"Setter for property <code>required<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bRequired: Boolean) -> sap.ui.commons.Label","!category":"function"},"setText":{"!description":"Setter for property <code>text<\/code>.\n\nDefault value is <code><\/code>.","!type":"fn(sText: String) -> sap.ui.commons.Label","!category":"function"},"getIcon":{"!description":"Getter for property <code>icon<\/code>.\n\nIcon to be displayed in the control.\nThis can be an URI to an image or an icon font URI.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"getTextAlign":{"!description":"Getter for property <code>textAlign<\/code>.\n\n\nAvailable alignment settings are \"Begin\", \"Center\", \"End\", \"Left\", and \"Right\".\n\nDefault value is <code>Begin<\/code>.","!type":"fn() -> sap.ui.core.TextAlign","!category":"function"},"setRequiredAtBegin":{"!description":"Setter for property <code>requiredAtBegin<\/code>.","!type":"fn(bRequiredAtBegin: Boolean) -> sap.ui.commons.Label","!category":"function"},"getText":{"!description":"Getter for property <code>text<\/code>.\n\n\nText to be displayed.\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function"},"setWrapping":{"!description":"Setter for property <code>wrapping<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bWrapping: Boolean) -> sap.ui.commons.Label","!category":"function"},"!description":"\nIs used for labeling other controls. The API provides formatting options, for example for bold display or alignment. A label can have an icon.","setLabelFor":{"!description":"Setter for the associated <code>labelFor<\/code>.","!type":"fn(oLabelFor: sap.ui.core.Control) -> sap.ui.commons.Label","!category":"function"},"!category":"class","getWidth":{"!description":"Getter for property <code>width<\/code>.\n\n\nControl width as common CSS-size (px or % as unit, for example).\n\nDefault value is <code><\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setIcon":{"!description":"Setter for property <code>icon<\/code>.","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.commons.Label","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.\n\nDefault value is <code><\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Label","!category":"function"},"setDesign":{"!description":"Setter for property <code>design<\/code>.\n\nDefault value is <code>Standard<\/code>.","!type":"fn(sDesign: sap.ui.commons.LabelDesign) -> sap.ui.commons.Label","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Label.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.Label_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Label with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Label"},"sap.ui.commons.Slider":{"getValue":{"!description":"Getter for property <code>value<\/code>.\n\nCurrent value of the slider. (Position of the grip.)\n\n<b>Note:<\/b> If the value is not in the valid range (between <code>min<\/code> and <code>max<\/code>) it will be changed to be in the valid range.\n\nDefault value is <code>50<\/code>.","!type":"fn() -> Number","!category":"function"},"setSmallStepWidth":{"!description":"Setter for property <code>smallStepWidth<\/code>.","!type":"fn(fSmallStepWidth: Number) -> sap.ui.commons.Slider","!category":"function"},"getMin":{"!description":"Getter for property <code>min<\/code>.\n\nMinimal value of the slider.\n\n<b>Note:<\/b> If <code>min<\/code> is larger than <code>max<\/code> both values will be switched\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"getEnabled":{"!description":"Getter for property <code>enabled<\/code>.\n\nSwitches enabled state of the control. Disabled fields have different colors, and can not be focused.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"detachLiveChange":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'liveChange' event of this <code>sap.ui.commons.Slider<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Slider","!category":"function"},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"setMin":{"!description":"Setter for property <code>min<\/code>.\n\nDefault value is <code>0<\/code>.","!type":"fn(fMin: Number) -> sap.ui.commons.Slider","!category":"function"},"getAriaDescribedBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaDescribedBy<\/code> association.\n\nAssociation to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getHeight":{"!description":"Getter for property <code>height<\/code>.\n\nHeight of the vertical slider.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setEditable":{"!description":"Setter for property <code>editable<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEditable: Boolean) -> sap.ui.commons.Slider","!category":"function"},"getLabels":{"!description":"Getter for property <code>labels<\/code>.\n\nLabels to be displayed instead of numbers. Attribute totalUnits and label count should be the same\n\n<b>Note:<\/b> To show the labels <code>stepLabels<\/code> must be activated.","!type":"fn() -> [String]","!category":"function"},"setMax":{"!description":"Setter for property <code>max<\/code>.\n\nDefault value is <code>100<\/code>.","!type":"fn(fMax: Number) -> sap.ui.commons.Slider","!category":"function"},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.Slider","!category":"function"},"!category":"class","setEnabled":{"!description":"Setter for property <code>enabled<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.Slider","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nWidth of the horizontal slider.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getAriaLabelledBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaLabelledBy<\/code> association.\n\nAssociation to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Slider","!category":"function"},"getSmallStepWidth":{"!description":"Getter for property <code>smallStepWidth<\/code>.\n\nThe grip can only be moved in steps of this width.","!type":"fn() -> Number","!category":"function"},"setVertical":{"!description":"Setter for property <code>vertical<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bVertical: Boolean) -> sap.ui.commons.Slider","!category":"function"},"getTotalUnits":{"!description":"Getter for property <code>totalUnits<\/code>.\n\nNumber of units that are displayed by ticks. The PageUp and PageDown keys navigate according to these units.","!type":"fn() -> Number","!category":"function"},"setTotalUnits":{"!description":"Setter for property <code>totalUnits<\/code>.","!type":"fn(iTotalUnits: Number) -> sap.ui.commons.Slider","!category":"function"},"getEditable":{"!description":"Getter for property <code>editable<\/code>.\n\nUsing the slider interactively requires value \"true\".\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getStepLabels":{"!description":"Getter for property <code>stepLabels<\/code>.\n\nDisplay step numbers for the ticks on the slider.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getMax":{"!description":"Getter for property <code>max<\/code>.\n\nMaximal value of the slider\n\n<b>Note:<\/b> If <code>min<\/code> is larger than <code>max<\/code> both values will be switched\n\nDefault value is <code>100<\/code>.","!type":"fn() -> Number","!category":"function"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setValue":{"!description":"Setter for property <code>value<\/code>.\n\nDefault value is <code>50<\/code>.","!type":"fn(fValue: Number) -> sap.ui.commons.Slider","!category":"function"},"detachChange":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'change' event of this <code>sap.ui.commons.Slider<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Slider","!category":"function"},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.Slider","!category":"function"},"!description":"The interactive control is displayed either as a horizontal or a vertical line with a pointer and units of measurement.\nUsers can move the pointer along the line to change values with graphical support.","fireLiveChange":{"!description":"Fire event liveChange to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'value' of type <code>float<\/code>Current value of the slider after a change.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.Slider","!category":"function"},"setStepLabels":{"!description":"Setter for property <code>stepLabels<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bStepLabels: Boolean) -> sap.ui.commons.Slider","!category":"function"},"setHeight":{"!description":"Setter for property <code>height<\/code>.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Slider","!category":"function"},"fireChange":{"!description":"Fire event change to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'value' of type <code>float<\/code>Current value of the slider after a change.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.Slider","!category":"function"},"attachLiveChange":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'liveChange' event of this <code>sap.ui.commons.Slider<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.Slider<\/code> itself.\n\nValue was changed. This event is fired during the mouse move. The normal change event is only fired by mouseup.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Slider","!category":"function"},"getVertical":{"!description":"Getter for property <code>vertical<\/code>.\n\nOrientation of slider\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"attachChange":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'change' event of this <code>sap.ui.commons.Slider<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.Slider<\/code> itself.\n\nValue was changed. This event is fired if the value has changed by an user action.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Slider","!category":"function"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setLabels":{"!description":"Setter for property <code>labels<\/code>.","!type":"fn(sLabels: [String]) -> sap.ui.commons.Slider","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Slider.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.RatingIndicator":{"getValue":{"!description":"Getter for property <code>value<\/code>.\n\nThe currently selected value. If value is set to sap.ui.commons.RatingIndicator.NoValue, the averageValue is shown.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function"},"getIconSelected":{"!description":"Getter for property <code>iconSelected<\/code>.\n\nThe URI to the image which shall be displayed for all selected rating symbols.\nNote that when this attribute is used, also the other icon attributes need to be set.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"getVisualMode":{"!description":"Getter for property <code>visualMode<\/code>.\n\nDefines how float values are visualized: Full, Half, Continuous (see enumeration RatingIndicatorVisualMode)\n\nDefault value is <code>Half<\/code>.","!type":"fn() -> sap.ui.commons.RatingIndicatorVisualMode","!category":"function"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"setIconHovered":{"!description":"Setter for property <code>iconHovered<\/code>.","!type":"fn(sIconHovered: sap.ui.core.URI) -> sap.ui.commons.RatingIndicator","!category":"function"},"getMaxValue":{"!description":"Getter for property <code>maxValue<\/code>.\n\nThe number of displayed rating symbols\n\nDefault value is <code>5<\/code>.","!type":"fn() -> Number","!category":"function"},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"setAverageValue":{"!description":"Setter for property <code>averageValue<\/code>.\n\nDefault value is <code>0<\/code>.","!type":"fn(fAverageValue: Number) -> sap.ui.commons.RatingIndicator","!category":"function"},"getAriaDescribedBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaDescribedBy<\/code> association.\n\nAssociation to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setEditable":{"!description":"Setter for property <code>editable<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEditable: Boolean) -> sap.ui.commons.RatingIndicator","!category":"function"},"getIconUnselected":{"!description":"Getter for property <code>iconUnselected<\/code>.\n\nThe URI to the image which shall be displayed for all unselected rating symbols. If this attribute is used, a requirement is that all custom icons need to have the same size.\nNote that when this attribute is used also the other icon attributes need to be set.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.RatingIndicator","!category":"function"},"getIconHovered":{"!description":"Getter for property <code>iconHovered<\/code>.\n\nThe URI to the image which is displayed when the mouse hovers onto a rating symbol.\nIf used, a requirement is that all custom icons need to have the same size.\nNote that when this attribute is used also the other icon attributes need to be set.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"!category":"class","setMaxValue":{"!description":"Setter for property <code>maxValue<\/code>.\n\nDefault value is <code>5<\/code>\nMinimum value is <code>1<\/code>","!type":"fn(iMaxValue: Number) -> sap.ui.commons.RatingIndicator","!category":"function"},"getAriaLabelledBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaLabelledBy<\/code> association.\n\nAssociation to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getEditable":{"!description":"Getter for property <code>editable<\/code>.\n\nValue 'true' is required for changes on the rating symbols.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setVisualMode":{"!description":"Setter for property <code>visualMode<\/code>.\n\nDefault value is <code>Half<\/code>.","!type":"fn(sVisualMode: sap.ui.commons.RatingIndicatorVisualMode) -> sap.ui.commons.RatingIndicator","!category":"function"},"setIconSelected":{"!description":"Setter for property <code>iconSelected<\/code>.","!type":"fn(sIconSelected: sap.ui.core.URI) -> sap.ui.commons.RatingIndicator","!category":"function"},"getAverageValue":{"!description":"Getter for property <code>averageValue<\/code>.\n\nThis value is shown if no value is set. This can be used to display an average Value before the user votes.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setValue":{"!description":"Setter for property <code>value<\/code>.\n\nDefault value is <code>0<\/code>.","!type":"fn(fValue: Number) -> sap.ui.commons.RatingIndicator","!category":"function"},"detachChange":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'change' event of this <code>sap.ui.commons.RatingIndicator<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RatingIndicator","!category":"function"},"setIconUnselected":{"!description":"Setter for property <code>iconUnselected<\/code>.","!type":"fn(sIconUnselected: sap.ui.core.URI) -> sap.ui.commons.RatingIndicator","!category":"function"},"bindValue":{"!description":"Binder for property <code>value<\/code>.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.RatingIndicator","!category":"function"},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.RatingIndicator","!category":"function"},"!description":"Is used to let the user do some rating on a certain topic. The amount of rating symbols can be specified, as well as the URIs to the\nimage icons which shall be used as rating symbols. When the user performs a rating, an event is fired.","unbindValue":{"!description":"Unbinder for property <code>value<\/code>.","!type":"fn() -> sap.ui.commons.RatingIndicator","!category":"function"},"fireChange":{"!description":"Fire event change to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'value' of type <code>int<\/code>The rated value<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.RatingIndicator","!category":"function"},"attachChange":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'change' event of this <code>sap.ui.commons.RatingIndicator<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.RatingIndicator<\/code> itself.\n\nThe event is fired when the user has done a rating.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RatingIndicator","!category":"function"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RatingIndicator.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.MenuItemBase":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the control sap.ui.unified.MenuItemBase of the library sap.ui.unified instead.<br>Provides the standard properties for menu items.","!category":"class","!proto":"sap.ui.unified.MenuItemBase"},"sap.ui.commons.Menu":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the control sap.ui.unified.Menu of the library sap.ui.unified instead.<br>A container for menu items. When the space in the browser is not large enough to display all defined items, a scroll bar is provided.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Menu.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.unified.Menu"},"sap.ui.commons.MessageBox.Icon":{"INFORMATION":{"!description":"Shows the information icon in the message box.","!type":"String","!category":"enum"},"SUCCESS":{"!description":"Shows the success icon in the message box.","!type":"String","!category":"enum"},"!description":"Enumeration of the pre-defined icons that can be used in a MessageBox.","QUESTION":{"!description":"Shows the question icon in the message box.","!type":"String","!category":"enum"},"WARNING":{"!description":"Shows the warning icon in the message box.","!type":"String","!category":"enum"},"ERROR":{"!description":"Shows the error icon in the message box.","!type":"String","!category":"enum"},"!category":"static class","CRITICAL":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.9.1 The error icon is used instead<br>Shows the critical error icon in the message box.","!type":"String","!category":"enum"},"NONE":{"!description":"Shows no icon in the message box.","!type":"String","!category":"enum"}},"sap.ui.commons.layout.Padding":{"End":{"!description":"\nTop and bottom padding of 2px.\nPadding of 4px towards the end of a line, in the current locale's\nwriting direction, but none towards its beginning.","!type":"String","!category":"enum"},"Both":{"!description":"\nTop and bottom padding of 2px.\nPadding of 4px towards both the beginning and end of a line.","!type":"String","!category":"enum"},"!description":"Padding, e.g. of a layout cell's content within the cell's borders.\nNote that all options except \"None\" include a padding of 2px at the top and\nbottom, and differ only in the presence of a 4px padding towards the beginning\nor end of a line, in the current locale's writing direction.","!category":"static class","None":{"!description":"\nNo padding at all.","!type":"String","!category":"enum"},"Begin":{"!description":"\nTop and bottom padding of 2px.\nPadding of 4px towards the beginning of a line, in the current locale's\nwriting direction, but none towards its end.","!type":"String","!category":"enum"},"Neither":{"!description":"\nTop and bottom padding of 2px.\nNo padding towards neither the beginning nor end of a line.","!type":"String","!category":"enum"}},"sap.ui.commons.DatePicker_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.DatePicker with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.DatePicker"},"sap.ui.commons.form.ResponsiveLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.ResponsiveLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.ResponsiveLayout.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.ResponsiveLayout"},"sap.ui.commons.enums":{"Orientation":"sap.ui.commons.enums.Orientation","BorderDesign":"sap.ui.commons.enums.BorderDesign","!category":"namespace","AreaDesign":"sap.ui.commons.enums.AreaDesign"},"sap.ui.commons.layout":{"ResponsiveFlowLayout":"sap.ui.commons.layout.ResponsiveFlowLayout_obj","visible":{"!description":"Invisible controls are not rendered","!type":"Boolean","!category":"enum"},"BackgroundDesign":"sap.ui.commons.layout.BackgroundDesign","vAlign":{"!description":"\nDetermines the vertical alignment of the matrix layout cell's content\nwith the cell's borders.","!type":"sap.ui.commons.layout.VAlign","!category":"enum"},"hAlign":{"!description":"\nDetermines the horizontal alignment of the matrix layout cell's content\nwith the cell's borders.","!type":"sap.ui.commons.layout.HAlign","!category":"enum"},"columns":{"!description":"Number of columns. If not specified, the number of columns will be determined from the given cells.","!type":"Number","!category":"enum"},"BorderLayoutAreaTypes":"sap.ui.commons.layout.BorderLayoutAreaTypes","widths":{"!description":"Widths of the columns. Use an array to define the widths of the columns.\nIf a column shall have an automatical sizing enter \"auto\" for this column width.","!type":"[sap.ui.core.CSSSize]","!category":"enum"},"padding":{"!description":"\nDetermines the padding of the matrix layout cell's content within the\ncell's borders. The default value is appropriate for all cells in a\nform-like layout. Consider to remove the padding on the outer layout in\ncase of nesting.","!type":"sap.ui.commons.layout.Padding","!category":"enum"},"centerHorizontally":{"!description":"Indicates whether this container shall be centered horizontally within the AbsoluteLayout area.\nThe values of the attributes left and right are ignored when this feature is activated.","!type":"Boolean","!category":"enum"},"PositionContainer":"sap.ui.commons.layout.PositionContainer_obj","areaId":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.3.3 Redundant to the aggregation by the parent border layout.<br>Defines which area the element represents: top, begin, center, end, bottom","!type":"sap.ui.commons.layout.BorderLayoutAreaTypes","!category":"enum"},"horizontalScrolling":{"!description":"'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.","!type":"sap.ui.core.Scrolling","!category":"enum"},"height":{"!description":"Height of the row.","!type":"sap.ui.core.CSSSize","!category":"enum"},"colSpan":{"!description":"\nDetermines how many columns of the underlying grid structure are occupied\nby this matrix layout cell.","!type":"Number","!category":"enum"},"HAlign":"sap.ui.commons.layout.HAlign","layoutFixed":{"!description":"Sets the table layout. If fixed the width parameter of a column has priority, if not the width of the content of the colums has priority.\nThe default is \"fixed\".\nIf the fixed layout is used a adequate width of the MatrixLayout should be provided. Otherwise the column width displayed could be different than the given ones because of browser dependend optimazations.","!type":"Boolean","!category":"enum"},"rowSpan":{"!description":"Determines how many rows of the underlying grid structure are occupied by this matrix layout cell.\nIn case a row-height is used, all rows affected by the RowSpan must have the same unit.","!type":"Number","!category":"enum"},"!category":"namespace","ResponsiveFlowLayoutData":"sap.ui.commons.layout.ResponsiveFlowLayoutData_obj","overflowX":{"!description":"The overflow mode of the area in horizontal direction as CSS value","!type":"String","!category":"enum"},"overflowY":{"!description":"The overflow mode of the area in vertical direction as CSS value","!type":"String","!category":"enum"},"left":{"!description":"Defines the distance to the left of the layout (as specified in HTML)","!type":"sap.ui.core.CSSSize","!category":"enum"},"MatrixLayoutRow":"sap.ui.commons.layout.MatrixLayoutRow_obj","right":{"!description":"Defines the distance to the right of the layout (as specified in HTML)","!type":"sap.ui.core.CSSSize","!category":"enum"},"VAlign":"sap.ui.commons.layout.VAlign","top":{"!description":"Defines the distance to the top of the layout (as specified in HTML)","!type":"sap.ui.core.CSSSize","!category":"enum"},"MatrixLayout":"sap.ui.commons.layout.MatrixLayout_obj","centerVertically":{"!description":"Indicates whether this container should be centered vertically within the AbsoluteLayout area.\nThe values of the attributes top and bottom are ignored when this feature is activated.","!type":"Boolean","!category":"enum"},"backgroundDesign":{"!description":"\nDetermines the matrix layout cell's background design.","!type":"sap.ui.commons.layout.BackgroundDesign","!category":"enum"},"Separation":"sap.ui.commons.layout.Separation","rtl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.2 RTL should not be configured on control level but is determined by a global configuration.<br>The RTL setting swaps the areas Begin and End. Since version 1.5.2, this property is deprecated and ignored as it conflicts with the central configuration for the page.","!type":"Boolean","!category":"enum"},"verticalScrolling":{"!description":"'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.","!type":"sap.ui.core.Scrolling","!category":"enum"},"contentAlign":{"!description":"The content alignment as CSS value","!type":"String","!category":"enum"},"separation":{"!description":"\nDetermines how a matrix layout cell is separated from its predecessor,\nvia a vertical gutter of variable width, with or without a vertical line.","!type":"sap.ui.commons.layout.Separation","!category":"enum"},"width":{"!description":"CSS width of the matrix layout.\nIf the LayoutFixed = true a adequate width should be provided.","!type":"sap.ui.core.CSSSize","!category":"enum"},"Padding":"sap.ui.commons.layout.Padding","size":{"!description":"Defines the height or the width. Is not used when the area element is in Center.","!type":"sap.ui.core.CSSSize","!category":"enum"},"BorderLayoutArea":"sap.ui.commons.layout.BorderLayoutArea_obj","VerticalLayout":"sap.ui.commons.layout.VerticalLayout_obj","HorizontalLayout":"sap.ui.commons.layout.HorizontalLayout_obj","AbsoluteLayout":"sap.ui.commons.layout.AbsoluteLayout_obj","BorderLayout":"sap.ui.commons.layout.BorderLayout_obj","bottom":{"!description":"Defines the distance to the bottom of the layout (as specified in HTML)","!type":"sap.ui.core.CSSSize","!category":"enum"},"MatrixLayoutCell":"sap.ui.commons.layout.MatrixLayoutCell_obj"},"sap.ui.commons.CheckBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.CheckBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.CheckBox"},"sap.ui.commons":{"valueTextAlign":{"!description":"The text alignment in the primary ListBox column.","!type":"sap.ui.core.TextAlign","!category":"enum"},"columns":{"!description":"Number of RadioButtons displayed in one Line.","!type":"Number","!category":"enum"},"MenuBarDesign":"sap.ui.commons.MenuBarDesign","maxListed":{"!description":"Maximum number of messages being display in the List before a scrollbar appears. Value '0' means no limit.","!type":"String","!category":"enum"},"RowRepeaterFilter":"sap.ui.commons.RowRepeaterFilter_obj","useMap":{"!description":"The name of the image map that defines the clickable areas","!type":"String","!category":"enum"},"firstVisibleIndex":{"!description":"The index of the element in the content aggreation which is displayed first on rendering","!type":"Number","!category":"enum"},"showExternalButton":{"!description":"Defines whether an additional search button shall be displayed","!type":"Boolean","!category":"enum"},"totalUnits":{"!description":"Number of units that are displayed by ticks. The PageUp and PageDown keys navigate according to these units.","!type":"Number","!category":"enum"},"MenuBar":"sap.ui.commons.MenuBar_obj","iconHoverURL":{"!description":"URL of the icon for the value help when hovered. If no parameter is supplied the standard icon image will be shown.\nIf a icon font icon is used, this property is ignored.","!type":"sap.ui.core.URI","!category":"enum"},"styled":{"!description":"Indicates if the button is styled. If not it is rendered as native HTML-button. In this case a custom styling can be added usig addStyleClass.","!type":"Boolean","!category":"enum"},"href":{"!description":"The link target URI. Supports standard hyperlink behavior. If an action should be triggered, this should not be set, but instead an event handler for the \"press\" event should be registered.","!type":"sap.ui.core.URI","!category":"enum"},"iconDisabledURL":{"!description":"URL of the icon for the value help when disabled. If no parameter is supplied the default icon image will be shown.\nIf a icon font icon is used, this property is ignored.","!type":"sap.ui.core.URI","!category":"enum"},"SearchField":"sap.ui.commons.SearchField_obj","enableClear":{"!description":"Defines whether the clear functionality shall be active","!type":"Boolean","!category":"enum"},"expanded":{"!description":"Node is expanded","!type":"Boolean","!category":"enum"},"enums":"sap.ui.commons.enums","Toolbar":"sap.ui.commons.Toolbar_obj","TextView":"sap.ui.commons.TextView_obj","textDirection":{"!description":"Direction of the text. Possible values: \"rtl\", \"ltr\".","!type":"sap.ui.core.TextDirection","!category":"enum"},"minHeight":{"!description":"\nMinimum outer height of the dialog window. When set, neither the user nor some layout settings can make the window smaller.","!type":"sap.ui.core.CSSSize","!category":"enum"},"anchorSnapPoint":{"!description":"Type: sap.ui.core.Popup.Dock\nSnapPoint of MessageBar over anchorId.\nNote: Use \"begin\" or \"end\" for RTL support.\nNote: \"center\" is not indicated, as positioning is only set once, either via the css \"left\" or the \"right\" attribute. Therefore a MessageBar will only be extended in one direction, as Messages come in.","!type":"String","!category":"enum"},"yyyymmdd":{"!description":"Defines the date as a \"yyyymmdd\" string, independent from the format used. The inherited textField \"value\" attribute uses the date format as configured via the locale.\nThe date is interpreted as gregorian date","!type":"String","!category":"enum"},"numberOfPages":{"!description":"Represents the overall number of pages that are embedded into the parent control","!type":"Number","!category":"enum"},"MessageType":"sap.ui.commons.MessageType","groupName":{"!description":"Name of the radio button group the current radio button belongs to. You can define a new name for the group.\nIf no new name is specified, this radio button belongs to the sapUiRbDefaultGroup per default. Default behavior of a radio button\nin a group is that when one of the radio buttons in a group is selected, all others are unselected.","!type":"String","!category":"enum"},"applyContentPadding":{"!description":"Padding is theme-dependent.","!type":"Boolean","!category":"enum"},"Splitter":"sap.ui.commons.Splitter_obj","searchHelpAdditionalText":{"!description":"(optional) The additional Text to use for the search help entry.","!type":"String","!category":"enum"},"LabelDesign":"sap.ui.commons.LabelDesign","minSizeSecondPane":{"!description":"The minimum size (width for vertical splitter or height for horizontal splitter) of the second Pane","!type":"sap.ui.core.Percentage","!category":"enum"},"RichTooltip":"sap.ui.commons.RichTooltip_obj","showValue":{"!description":"Specifies whether the current value shall be rendered inside the bar.","!type":"Boolean","!category":"enum"},"maxLength":{"!description":"Maximum number of characters. Value '0' means the feature is switched off.","!type":"Number","!category":"enum"},"visibleItems":{"!description":"The ListBox height in number of items that are initially displayed without scrolling. This setting overwrites height\nsettings in terms of CSS size that have been made. When the items have different heights, the height of the first item is used for all\nother item height calculations. Note that if there are one or more separators between the visible ListBox items, the displayed items\nmight not relate 1:1 to the initially specified number of items. When the value is retrieved, it equals the previously set value if it was set;\notherwise, it will be the number of items completely fitting into the ListBox without scrolling in the case the control was already rendered.\nNote that if the control was not rendered, the behavior will be undefined, it may return -1 or any other number.","!type":"Number","!category":"enum"},"Tree":"sap.ui.commons.Tree_obj","FileUploader":"sap.ui.commons.FileUploader_obj","TreeNode":"sap.ui.commons.TreeNode_obj","Image":"sap.ui.commons.Image_obj","!category":"namespace","maxValue":{"!description":"The number of displayed rating symbols","!type":"Number","!category":"enum"},"displaySecondaryValues":{"!description":"Specifies whether the text values from the additionalText property (see sap.ui.core.ListItems) shall be displayed.","!type":"Boolean","!category":"enum"},"max":{"!description":"Maximal value of the slider\n\n<b>Note:<\/b> If <code>min<\/code> is larger than <code>max<\/code> both values will be switched","!type":"Number","!category":"enum"},"displayWelcome":{"!description":"By default, set to true and dislpays the welcome text","!type":"Boolean","!category":"enum"},"MenuTextFieldItem":"sap.ui.commons.MenuTextFieldItem_obj","TextViewColor":"sap.ui.commons.TextViewColor","enableListSuggest":{"!description":"Defines whether a pop up list shall be provided for suggestions","!type":"Boolean","!category":"enum"},"Title":"sap.ui.commons.Title_obj","selectionState":{"!description":"Defines the states of the checkbox","!type":"sap.ui.commons.TriStateCheckBoxState","!category":"enum"},"displayLogoff":{"!description":"If set to true, the logoff area will be displayed at the right hand side of the application header.","!type":"Boolean","!category":"enum"},"!description":"Common basic controls, mainly intended for desktop scenarios","Link":"sap.ui.commons.Link_obj","animationDuration":{"!description":"Duration for animation when navigating through children","!type":"Number","!category":"enum"},"scrollLeft":{"!description":"Specifies the scroll position from left to right. Value \"0\" means leftmost position.","!type":"Number","!category":"enum"},"minSizeFirstPane":{"!description":"The minimum size (width for vertical splitter or height for horizontal splitter) of the first Pane","!type":"sap.ui.core.Percentage","!category":"enum"},"Label":"sap.ui.commons.Label_obj","checked":{"!description":"Contains the state of the control whether it is flagged with a check mark, or not","!type":"Boolean","!category":"enum"},"wrapping":{"!description":"Disabled automatic wrapping of the text.","!type":"Boolean","!category":"enum"},"vertical":{"!description":"Orientation of slider","!type":"Boolean","!category":"enum"},"undoEnabled":{"!description":"If undo is enabled after changing the text an undo button appears.","!type":"Boolean","!category":"enum"},"visible":{"!description":"Step is visible","!type":"Boolean","!category":"enum"},"MessageBox":"sap.ui.commons.MessageBox","smallStepWidth":{"!description":"The grip can only be moved in steps of this width.","!type":"Number","!category":"enum"},"Menu":"sap.ui.commons.Menu_obj","MenuButton":"sap.ui.commons.MenuButton_obj","TabStrip":"sap.ui.commons.TabStrip_obj","Button":"sap.ui.commons.Button_obj","height":{"!description":"Tree height","!type":"sap.ui.core.CSSSize","!category":"enum"},"selectionMode":{"!description":"Selection mode of the Tree.","!type":"sap.ui.commons.TreeSelectionMode","!category":"enum"},"sorter":{"!description":"The sorter object.","!type":"Object","!category":"enum"},"ToggleButton":"sap.ui.commons.ToggleButton_obj","maxWidth":{"!description":"The maximum width of the ListBox. If not set, there is no maximum width.","!type":"sap.ui.core.CSSSize","!category":"enum"},"userName":{"!description":"User name that will be displayed beside the welcome text","!type":"String","!category":"enum"},"searchHelpIcon":{"!description":"(optional) The URI of the icon to use for the search help entry.","!type":"sap.ui.core.URI","!category":"enum"},"key":{"!description":"A key which can be used to identify the range (optional).","!type":"String","!category":"enum"},"PaginatorEvent":"sap.ui.commons.PaginatorEvent","enabled":{"!description":"Switches enabled state of the control. Disabled fields have different colors, and can not be focused.","!type":"Boolean","!category":"enum"},"text":{"!description":"Defines the text displayed next to the check box","!type":"String","!category":"enum"},"openedSectionsId":{"!description":"Section IDs that shall be opened by default at application start.","!type":"String","!category":"enum"},"TextViewDesign":"sap.ui.commons.TextViewDesign","RatingIndicator":"sap.ui.commons.RatingIndicator_obj","explanation":{"!description":"text which appears, in case quick-help is switched on","!type":"String","!category":"enum"},"labels":{"!description":"Labels to be displayed instead of numbers. Attribute totalUnits and label count should be the same\n\n<b>Note:<\/b> To show the labels <code>stepLabels<\/code> must be activated.","!type":"[String]","!category":"enum"},"width":{"!description":"Width of text field. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text field length defines the width.","!type":"sap.ui.core.CSSSize","!category":"enum"},"label":{"!description":"Label of the step","!type":"String","!category":"enum"},"DropdownBox":"sap.ui.commons.DropdownBox_obj","showCloseButton":{"!description":"\nDisplays a close button in the title bar.","!type":"Boolean","!category":"enum"},"RowRepeaterDesign":"sap.ui.commons.RowRepeaterDesign","MenuItemBase":"sap.ui.commons.MenuItemBase_obj","visibleItemCount":{"!description":"\nDefines the number of items in the suggestion list that shall be displayed at once. If the overall number of list items is higher than the setting,\na scroll bar is provided.","!type":"Number","!category":"enum"},"logoText":{"!description":"The text that will be displayed beside the logo in the application header. This property is optional.","!type":"String","!category":"enum"},"editable":{"!description":"Switches edit state of the control. Read-only fields have different colors, depending on theme setting.","!type":"Boolean","!category":"enum"},"secondaryValueTextAlign":{"!description":"The text alignment in the secondary ListBox text column (if available).","!type":"sap.ui.core.TextAlign","!category":"enum"},"handleSize":{"!description":"Size of the handle in pixels. (Height for vertical carousel, width for horizontal carousel)","!type":"Number","!category":"enum"},"borderDesign":{"!description":"The Panel can have a box as border. Note that displaying borders is theme-dependent.","!type":"sap.ui.commons.enums.BorderDesign","!category":"enum"},"dockMenu":{"!description":"The position / edge (see sap.ui.core.Popup.Dock) of the menu which is docked to the button. Default is 'begin top'.","!type":"String","!category":"enum"},"isSelected":{"!description":"Node is selected","!type":"Boolean","!category":"enum"},"splitterPosition":{"!description":"Position of splitter bar in percentage.\nThe default value means that the splitter is positioned in the middle of the area that is available for the splitter.","!type":"sap.ui.core.Percentage","!category":"enum"},"searchHelpEnabled":{"!description":"Whether the DropdownBox's search help should be enabled.","!type":"Boolean","!category":"enum"},"visualMode":{"!description":"Defines how float values are visualized: Full, Half, Continuous (see enumeration RatingIndicatorVisualMode)","!type":"sap.ui.commons.RatingIndicatorVisualMode","!category":"enum"},"allowMultiSelect":{"!description":"Specifies whether multiple selection is allowed.","!type":"Boolean","!category":"enum"},"SegmentedButton":"sap.ui.commons.SegmentedButton_obj","areaDesign":{"!description":"Defines the background color. Note that color settings are theme-dependent.","!type":"sap.ui.commons.enums.AreaDesign","!category":"enum"},"ApplicationHeader":"sap.ui.commons.ApplicationHeader_obj","Accordion":"sap.ui.commons.Accordion_obj","maxSuggestionItems":{"!description":"\nMaximum number of suggestion items in the suggestion list.","!type":"Number","!category":"enum"},"TextArea":"sap.ui.commons.TextArea_obj","ToolbarSeparatorDesign":"sap.ui.commons.ToolbarSeparatorDesign","RowRepeater":"sap.ui.commons.RowRepeater_obj","ResponsiveContainerRange":"sap.ui.commons.ResponsiveContainerRange_obj","logoSrc":{"!description":"Path (src) to the logo icon to be displayed in the application header.","!type":"sap.ui.core.URI","!category":"enum"},"style":{"!description":"Style of the button.\n(e.g. emphasized)","!type":"sap.ui.commons.ButtonStyle","!category":"enum"},"alt":{"!description":"The alternative text that is displayed in case the Image is not available, or cannot be displayed.\nIf the image is set to decorative this property is ignored.","!type":"String","!category":"enum"},"name":{"!description":"The <code>name<\/code> property to be used in the HTML code (e.g. for HTML forms that send data to the server via 'submit').","!type":"String","!category":"enum"},"textAlign":{"!description":"Sets the horizontal alignment of the text.","!type":"sap.ui.core.TextAlign","!category":"enum"},"startSuggestion":{"!description":"\nMinimum length of the entered string triggering the suggestion list.","!type":"Number","!category":"enum"},"enableFilterMode":{"!description":"Defines whether the search event should also be fired when the SearchField is empty (like a Filter field) and when the clear button (if activated) is pressed.","!type":"Boolean","!category":"enum"},"icon":{"!description":"Icon to display in front of the node","!type":"sap.ui.core.URI","!category":"enum"},"selectedIndex":{"!description":"Index of the currently selected tab.","!type":"Number","!category":"enum"},"verticalScrolling":{"!description":"Set the height property.","!type":"sap.ui.core.Scrolling","!category":"enum"},"imageSrc":{"!description":"If RichTooltip contains an image, this property is used to define the source path.","!type":"sap.ui.core.URI","!category":"enum"},"RadioButton":"sap.ui.commons.RadioButton_obj","Dialog":"sap.ui.commons.Dialog_obj","RadioButtonGroup":"sap.ui.commons.RadioButtonGroup_obj","TextField":"sap.ui.commons.TextField_obj","threshold":{"!description":"Threshold to fetch the next chunk of data. The minimal threshold can be the numberOfRows of the RR.","!type":"Number","!category":"enum"},"defaultItemHeight":{"!description":"Default height of item in carousel if no height can be determined","!type":"Number","!category":"enum"},"MenuItem":"sap.ui.commons.MenuItem_obj","ResponsiveContainer":"sap.ui.commons.ResponsiveContainer_obj","coords":{"!description":"Coordinates of the area","!type":"String","!category":"enum"},"showHeader":{"!description":"Tree Header is display. If false, the tree will be in a transparent mode","!type":"Boolean","!category":"enum"},"selectedItemId":{"!description":"Id of the selected item. If the value has no corresponding item, the <code>selectedItemId<\/code> is empty.\n\nIf the <code>selectedItemId<\/code> is set to an not existing item, it will not be changed.","!type":"String","!category":"enum"},"FileUploaderParameter":"sap.ui.commons.FileUploaderParameter_obj","Carousel":"sap.ui.commons.Carousel_obj","iconURL":{"!description":"Url of the standard icon for the value help. If no parameter is supplied the default icon image will be shown.\nThis can be an URI to an image or an icon font URI.","!type":"sap.ui.core.URI","!category":"enum"},"stepLabels":{"!description":"Display step numbers for the ticks on the slider.","!type":"Boolean","!category":"enum"},"DatePicker":"sap.ui.commons.DatePicker_obj","RangeSlider":"sap.ui.commons.RangeSlider_obj","SplitterSize":"sap.ui.commons.SplitterSize","showMoreSteps":{"!description":"Step size used to increase the numberOfRows value. This feature is only active if value is greater than 0. This will deactivate the paging feature.","!type":"Number","!category":"enum"},"showScrollBars":{"!description":"Specifies if the browser should display scroll bars or simply cut the content of a splitter pane when the content does not fit into its pane.","!type":"Boolean","!category":"enum"},"RatingIndicatorVisualMode":"sap.ui.commons.RatingIndicatorVisualMode","MessageList":"sap.ui.commons.MessageList_obj","MessageToast":"sap.ui.commons.MessageToast_obj","autoClose":{"!description":"If this property is set to true the Dialog will close if the Dialog loses its focus","!type":"Boolean","!category":"enum"},"accessibleRole":{"!description":"Accessibility role for the text field.","!type":"sap.ui.core.AccessibleRole","!category":"enum"},"keepInWindow":{"!description":"Whether Dialog movement should be restricted to the visible area of the window. This only affects drag&drop movements by the user. This doesn't affect modal dialogs -> modal dialogs always stay in the window.","!type":"Boolean","!category":"enum"},"PasswordField":"sap.ui.commons.PasswordField_obj","htmlText":{"!description":"Text with placeholders","!type":"String","!category":"enum"},"resizable":{"!description":"\nSpecifies whether the dialog window can be resized by the user. The dialog frame contains the visual symbol.","!type":"Boolean","!category":"enum"},"showCollapseIcon":{"!description":"Specifies whether the Panel shall have an icon for collapsing/expanding, or not.","!type":"Boolean","!category":"enum"},"labeledBy":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.2 Please use association AriaLabelledBy instead.<br>ID of label control","!type":"String","!category":"enum"},"showHorizontalScrollbar":{"!description":"Display horizontal scrollbar. If false, the overflow content will be hidden","!type":"Boolean","!category":"enum"},"orientation":{"!description":"Can be either \"horizontal\" or \"vertical\"","!type":"sap.ui.commons.enums.Orientation","!category":"enum"},"form":"sap.ui.commons.form","contentBorderDesign":{"!description":"\nBorder design is theme-dependent.","!type":"sap.ui.commons.enums.BorderDesign","!category":"enum"},"TriStateCheckBox":"sap.ui.commons.TriStateCheckBox_obj","imeMode":{"!description":"State of the Input Method Editor (IME).","!type":"sap.ui.core.ImeMode","!category":"enum"},"iconUnselected":{"!description":"The URI to the image which shall be displayed for all unselected rating symbols. If this attribute is used, a requirement is that all custom icons need to have the same size.\nNote that when this attribute is used also the other icon attributes need to be set.","!type":"sap.ui.core.URI","!category":"enum"},"RowRepeaterSorter":"sap.ui.commons.RowRepeaterSorter_obj","RoadMap":"sap.ui.commons.RoadMap_obj","maxPopupItems":{"!description":"\nDefines the number of items that shall be displayed at once. If the overall number of items is higher than this setting, a scrollbar is provided.","!type":"Number","!category":"enum"},"TriStateCheckBoxState":"sap.ui.commons.TriStateCheckBoxState","dockButton":{"!description":"The position / edge (see sap.ui.core.Popup.Dock) of the button where the menu is docked. Default is 'begin bottom'.","!type":"String","!category":"enum"},"iconSelected":{"!description":"Icon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified). If not specified the base or hovered icon is used.\nIf a icon font icon is used, this property is ignored.","!type":"sap.ui.core.URI","!category":"enum"},"filters":{"!description":"The set of filter objects.","!type":"Object","!category":"enum"},"valueState":{"!description":"Visualizes warnings or errors related to the text field. Possible values: Warning, Error, Success.","!type":"sap.ui.core.ValueState","!category":"enum"},"enableScrolling":{"!description":"Whether scrolling should be enabled when the number of items is higher than maxPopupItems.\nIf set to false only the first n items (n=maxPopupItems) are shown.","!type":"Boolean","!category":"enum"},"pressed":{"!description":"The property is \u201ctrue\u201d when the control is toggled. The default state of this property is \"false\".","!type":"Boolean","!category":"enum"},"averageValue":{"!description":"This value is shown if no value is set. This can be used to display an average Value before the user votes.","!type":"Number","!category":"enum"},"helpId":{"!description":"Unique identifier used for help service.","!type":"String","!category":"enum"},"defaultItemWidth":{"!description":"Default width of item in carousel if no height can be determined","!type":"Number","!category":"enum"},"value2":{"!description":"Current second value of the slider. (Position of the second grip.)\n\n<b>Note:<\/b> If the value is not in the valid range (between <code>min<\/code> and <code>max<\/code>) it will be changed to be in the valid range.\nIf it is smaller than <code>value<\/code> it will be set to the same value.","!type":"Number","!category":"enum"},"horizontalScrolling":{"!description":"Set the width property.","!type":"sap.ui.core.Scrolling","!category":"enum"},"title":{"!description":"Tree title","!type":"String","!category":"enum"},"Panel":"sap.ui.commons.Panel_obj","ComboBox":"sap.ui.commons.ComboBox_obj","HorizontalDividerType":"sap.ui.commons.HorizontalDividerType","associatedElementId":{"!description":"Associated UI element ID. (Optional)\nFor navigation to error field.","!type":"String","!category":"enum"},"src":{"!description":"Relative or absolute path to URL where the image file is stored.","!type":"sap.ui.core.URI","!category":"enum"},"modal":{"!description":"Specify whether the dialog should be modal, or not. In case of <code>true<\/code> the focus is kept inside the dialog.","!type":"Boolean","!category":"enum"},"iconFirst":{"!description":"\nIf set to true (default), the display sequence is 1. icon 2. control text .","!type":"Boolean","!category":"enum"},"min":{"!description":"Minimal value of the slider.\n\n<b>Note:<\/b> If <code>min<\/code> is larger than <code>max<\/code> both values will be switched","!type":"Number","!category":"enum"},"Message":"sap.ui.commons.Message_obj","placeholder":{"!description":"Placeholder for the text field.","!type":"String","!category":"enum"},"imageAltText":{"!description":"This is the alt text for the image","!type":"String","!category":"enum"},"requiredAtBegin":{"!description":"If set the required indicator is at the begin of the label, if not set at the end.","!type":"Boolean","!category":"enum"},"SearchProvider":"sap.ui.commons.SearchProvider_obj","RoadMapStep":"sap.ui.commons.RoadMapStep_obj","selectedStep":{"!description":"Id of the step which is currently selected","!type":"String","!category":"enum"},"displayIcons":{"!description":"Defines whether the icons of the list items shall also be displayed. Enabling icons requires some space to be reserved for them. Displaying icons can also\ninfluence the width and height of a single item, which affects the overall height of the ListBox when defined in number of items.\nNote that the number of icons that can be displayed in the ListBox depends on the size of the icons themselves and of the total ListBox height.","!type":"Boolean","!category":"enum"},"valueStateText":{"!description":"This property is an individual text that will be used instead of the default ValueState text","!type":"String","!category":"enum"},"fixedRowHeight":{"!description":"Row height adapts to rendered content. If a fixed height is specified the cells have a maximum height and the overflow will be hidden.","!type":"sap.ui.core.CSSSize","!category":"enum"},"ColorPicker":"sap.ui.commons.ColorPicker_obj","AutoComplete":"sap.ui.commons.AutoComplete_obj","design":{"!description":"Font type. valid values are Standard and Monospace.","!type":"sap.ui.core.Design","!category":"enum"},"cols":{"!description":"Number of Columns. Cols means number of characters per row. This proprty is only used if Width is not used.","!type":"Number","!category":"enum"},"HorizontalDivider":"sap.ui.commons.HorizontalDivider_obj","CalloutBase":"sap.ui.commons.CalloutBase_obj","minWidth":{"!description":"Minimal width for the Tree. Can be useful when, for example, the width is specified in percentage, to avoid the tree to become too narrow when container is resize","!type":"sap.ui.core.CSSSize","!category":"enum"},"Area":"sap.ui.commons.Area_obj","type":{"!description":"\"Success\", or \"Warning\", or \"Error\" messages. (Mandatory)","!type":"sap.ui.commons.MessageType","!category":"enum"},"FormattedTextViewControl":"sap.ui.commons.FormattedTextViewControl","maxHistoryItems":{"!description":"Maximum number of history items in the suggestion list.\n0 displays and stores no history. The history is locally stored on the client. Therefore do not activate this feature when this control handles confidential data.","!type":"Number","!category":"enum"},"ButtonStyle":"sap.ui.commons.ButtonStyle","MessageBar":"sap.ui.commons.MessageBar_obj","selectedKey":{"!description":"Key of the selected item.\n\nIf the value has no corresponding item the key is empty.\n\nIf duplicate keys exists the first item matching the key is used.\n\nIf the key is set to a not existing value it will not be changed.","!type":"String","!category":"enum"},"ImageMap":"sap.ui.commons.ImageMap_obj","value":{"!description":"Text inside the <code>TextField<\/code>","!type":"String","!category":"enum"},"Tab":"sap.ui.commons.Tab_obj","InPlaceEdit":"sap.ui.commons.InPlaceEdit_obj","required":{"!description":"Depending on theme the <code>TextField<\/code> is shown as required.\nIf a <code>Label<\/code> is assigned to the <code>TextField<\/code> it will visualize the requires state too.","!type":"Boolean","!category":"enum"},"iconHovered":{"!description":"Icon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified). If not specified the base icon is used.\nIf a icon font icon is used, this property is ignored.","!type":"sap.ui.core.URI","!category":"enum"},"showListExpander":{"!description":"Defines whether the list expander shall be displayed in the case of an enabled list for suggestions. This feature is deactivated on mobile devices.","!type":"Boolean","!category":"enum"},"ToolbarSeparator":"sap.ui.commons.ToolbarSeparator_obj","numberOfRows":{"!description":"Number of rows displayed.","!type":"Number","!category":"enum"},"shape":{"!description":"The value is a string and can be 'rect' for rectangle, 'poly' for poligon, 'circle', or default.","!type":"String","!category":"enum"},"displayValue":{"!description":"The text value to be displayed in the bar.","!type":"String","!category":"enum"},"semanticColor":{"!description":"Semantic color of the text View","!type":"sap.ui.commons.TextViewColor","!category":"enum"},"rows":{"!description":"Number of Rows. This proprty is only used if Height is not used.","!type":"Number","!category":"enum"},"collapsed":{"!description":"A collapsed Panel consumes less space than a not collapsed one. When it is initially collapsed, the contents are not rendered.","!type":"Boolean","!category":"enum"},"colorString":{"!description":"This is the import-parameter of the ColorPicker.\nAs input-parameter, it can be a Hexadecimal string (#FFFFFF), a RGB-string rgb(255,255,255), a HSV-string hsv(360,100,100) or a CSS-colorname 'red'.\nAs output-parameter it is a RGB-string containing the current color.","!type":"String","!category":"enum"},"barColor":{"!description":"The color of the bar. Enumeration sap.ui.core.BarColor provides CRITICAL (yellow), NEGATIVE (red), POSITIVE (green), NEUTRAL (blue) (default value).","!type":"sap.ui.core.BarColor","!category":"enum"},"maxHeight":{"!description":"\nMaximum outer height of the dialog window. If set, neither the user nor some layout settings can make the window larger.","!type":"sap.ui.core.CSSSize","!category":"enum"},"ToolbarItem":"sap.ui.commons.ToolbarItem","hasExpander":{"!description":"Should the node has an expander.","!type":"Boolean","!category":"enum"},"maxToasted":{"!description":"Maximum number of simultaneous messages being toasting-up in a row. Value '0' means this dynamic part of the feature is switched off.","!type":"Number","!category":"enum"},"numberOfVisibleSteps":{"!description":"Total number of steps to be displayed at once","!type":"Number","!category":"enum"},"decorative":{"!description":"A decorative image is included for design reasons. Accessibility tools will ignore decorative images.\nNote: If the Image has an image map (useMap is set), this property will be overridden (the image will not be rendered as decorative).\nA decorative image has no ALT attribute, so the Alt property is ignored if the image is decorative.","!type":"Boolean","!category":"enum"},"AccordionSection":"sap.ui.commons.AccordionSection_obj","searchHelpText":{"!description":"(optional) The text to use for the search help entry.","!type":"String","!category":"enum"},"percentValue":{"!description":"The numerical value for the displayed length of the progress bar.","!type":"Number","!category":"enum"},"locale":{"!description":"Defines the locale (language and country), e.g. \"en-US\", whose translations and Date formatters should be used to render the DatePicker.If the value property is bound to a model using a Date type the locale will be ignored, because the locale information of the model are used.","!type":"String","!category":"enum"},"enableCache":{"!description":"When list suggestion is enabled all suggestions are cached and no suggest event is fired.","!type":"Boolean","!category":"enum"},"Paginator":"sap.ui.commons.Paginator_obj","showHeaderIcons":{"!description":"Show Header icons (e.g. Expand/Collapse all). Only consider if showHeader is true","!type":"Boolean","!category":"enum"},"TreeSelectionMode":"sap.ui.commons.TreeSelectionMode","standalone":{"!description":"Per default, tool bars have the stand alone status.\nAlternatively, they can be nested in other controls and then inherit the design from their parent control.","!type":"Boolean","!category":"enum"},"Slider":"sap.ui.commons.Slider_obj","ProgressIndicator":"sap.ui.commons.ProgressIndicator_obj","anchorId":{"!description":"Id of the anchor on top of which the MessageToast is to render.","!type":"String","!category":"enum"},"selected":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 0.17.0 This property is not used. To indentify the selected tab in a TabStrip selectedIndex is used.<br>Defines whether the tab is the active one.","!type":"Boolean","!category":"enum"},"closable":{"!description":"Defines whether the tab contains a close button.","!type":"Boolean","!category":"enum"},"layout":"sap.ui.commons.layout","ValueHelpField":"sap.ui.commons.ValueHelpField_obj","CheckBox":"sap.ui.commons.CheckBox_obj","scrollTop":{"!description":"Specifies the scroll position from top to bottom. Value \"0\" means topmost position.","!type":"Number","!category":"enum"},"lite":{"!description":"The button is rendered as lite button.","!type":"Boolean","!category":"enum"},"splitterBarVisible":{"!description":"set the splitter bar to be visible or not.","!type":"Boolean","!category":"enum"},"displayVisualSeparator":{"!description":"When set to false, there is no visual indication of separation by a vertical line but by a wider space.","!type":"Boolean","!category":"enum"},"cursorPos":{"!description":"Position of cursor, e.g., to let the user re-start typing at the same position as before the server roundtrip","!type":"Number","!category":"enum"},"firstVisibleStep":{"!description":"Id of the first step to be displayed","!type":"String","!category":"enum"},"ListBox":"sap.ui.commons.ListBox_obj","anchorID":{"!description":"Element ID upon which the 'message bar' is to be initially positioned.","!type":"String","!category":"enum"},"selectable":{"!description":"The node is selectable. If true, clicking on the node text triggers \"selected\" event","!type":"Boolean","!category":"enum"},"target":{"!description":"\nOptions are _self, _top, _blank, _parent, _search. Alternatively, a frame name can be entered.","!type":"String","!category":"enum"},"Callout":"sap.ui.commons.Callout_obj","splitterOrientation":{"!description":"The splitter can have horizontal or vertical orientation.","!type":"sap.ui.core.Orientation","!category":"enum"},"ToolbarDesign":"sap.ui.commons.ToolbarDesign","currentPage":{"!description":"The index of the page currently displayed. The index starts at 1.","!type":"Number","!category":"enum"},"FormattedTextView":"sap.ui.commons.FormattedTextView_obj","HorizontalDividerHeight":"sap.ui.commons.HorizontalDividerHeight"},"sap.ui.commons.Button":{"getIconSelected":{"!description":"Getter for property <code>iconSelected<\/code>.\n\nIcon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified). If not specified the base or hovered icon is used.\nIf a icon font icon is used, this property is ignored.\n\nDefault value is <code><\/code>.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"getEnabled":{"!description":"Getter for property <code>enabled<\/code>.\n\n\nBoolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setIconHovered":{"!description":"Setter for property <code>iconHovered<\/code>.\n\nDefault value is <code><\/code>.","!type":"fn(sIconHovered: sap.ui.core.URI) -> sap.ui.commons.Button","!category":"function"},"firePress":{"!description":"Fire event press to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.commons.Button","!category":"function"},"getLite":{"!description":"Getter for property <code>lite<\/code>.\n\nThe button is rendered as lite button.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setText":{"!description":"Setter for property <code>text<\/code>.\n\nDefault value is <code><\/code>.","!type":"fn(sText: String) -> sap.ui.commons.Button","!category":"function"},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"getHelpId":{"!description":"Getter for property <code>helpId<\/code>.\n\n\nUnique identifier used for help service\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function"},"getIcon":{"!description":"Getter for property <code>icon<\/code>.\n\nIcon to be displayed as graphical element within the button.\nThis can be an URI to an image or an icon font URI.\n\nDefault value is <code><\/code>.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"getText":{"!description":"Getter for property <code>text<\/code>.\n\n\nButton text displayed at runtime.\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function"},"getHeight":{"!description":"Getter for property <code>height<\/code>.\n\nSpecifies the button height. If this property is set, the height which is specified by the underlying theme is not used any longer.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getAriaDescribedBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaDescribedBy<\/code> association.\n\nAssociation to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.Button","!category":"function"},"getIconHovered":{"!description":"Getter for property <code>iconHovered<\/code>.\n\nIcon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified). If not specified the base icon is used.\nIf a icon font icon is used, this property is ignored.\n\nDefault value is <code><\/code>.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"!category":"class","setEnabled":{"!description":"Setter for property <code>enabled<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.Button","!category":"function"},"focus":{"!description":"Puts the focus to the button.","!type":"fn()","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\n\nControl width as common CSS-size (px or % as unit, for example)","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getAriaLabelledBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaLabelledBy<\/code> association.\n\nAssociation to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Button","!category":"function"},"setLite":{"!description":"Setter for property <code>lite<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bLite: Boolean) -> sap.ui.commons.Button","!category":"function"},"setIconSelected":{"!description":"Setter for property <code>iconSelected<\/code>.\n\nDefault value is <code><\/code>.","!type":"fn(sIconSelected: sap.ui.core.URI) -> sap.ui.commons.Button","!category":"function"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setIconFirst":{"!description":"Setter for property <code>iconFirst<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bIconFirst: Boolean) -> sap.ui.commons.Button","!category":"function"},"getStyle":{"!description":"Getter for property <code>style<\/code>.\n\nStyle of the button.\n(e.g. emphasized)\n\nDefault value is <code>Default<\/code>.","!type":"fn() -> sap.ui.commons.ButtonStyle","!category":"function"},"setStyled":{"!description":"Setter for property <code>styled<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bStyled: Boolean) -> sap.ui.commons.Button","!category":"function"},"attachPress":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'press' event of this <code>sap.ui.commons.Button<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.Button<\/code> itself.\n\n\nEvent is fired when the user presses the control.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Button","!category":"function"},"setHelpId":{"!description":"Setter for property <code>helpId<\/code>.\n\nDefault value is <code><\/code>.","!type":"fn(sHelpId: String) -> sap.ui.commons.Button","!category":"function"},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.Button","!category":"function"},"!description":"Enables users to trigger actions such as save or print. For the button UI, you can define some text or an icon, or both.","setHeight":{"!description":"Setter for property <code>height<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Button","!category":"function"},"getIconFirst":{"!description":"Getter for property <code>iconFirst<\/code>.\n\n\nIf set to true (default), the display sequence is 1. icon 2. control text .\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setStyle":{"!description":"Setter for property <code>style<\/code>.\n\nDefault value is <code>Default<\/code>.","!type":"fn(sStyle: sap.ui.commons.ButtonStyle) -> sap.ui.commons.Button","!category":"function"},"setIcon":{"!description":"Setter for property <code>icon<\/code>.\n\nDefault value is <code><\/code>.","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.commons.Button","!category":"function"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"detachPress":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'press' event of this <code>sap.ui.commons.Button<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Button","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Button.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"getStyled":{"!description":"Getter for property <code>styled<\/code>.\n\nIndicates if the button is styled. If not it is rendered as native HTML-button. In this case a custom styling can be added usig addStyleClass.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"}},"sap.ui.commons.Splitter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Splitter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Splitter"},"sap.ui.commons.Message_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Message with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Message"},"sap.ui.commons.SearchField_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.SearchField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.SearchField"},"sap.ui.commons.CalloutBase":{"attachBeforeOpen":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'beforeOpen' event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.CalloutBase<\/code> itself.\n\nEvent is fired before a Callout is displayed. Call the preventDefault method of the event object to postpone opening. Application may use this event to start asynchronous Ajax call to load the Callout content","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.CalloutBase","!category":"function"},"fireBeforeOpen":{"!description":"Fire event beforeOpen to attached listeners.\n\nListeners may prevent the default action of this event using the preventDefault-method on the event object.\n\n\nExpects following event parameters:\n<ul>\n<li>'parent' of type <code>sap.ui.core.Control<\/code>Parent control that has this Callout as a tooltip<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> Boolean","!category":"function"},"adjustPosition":{"!description":"Adjust position of the already opened Callout window.\nCall this method each time when the size of the opened\nCallout window may be changed due to new or changed\ncontents.","!type":"fn()","!category":"function"},"fireOpen":{"!description":"Fire event open to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'parent' of type <code>sap.ui.core.Control<\/code>Parent control that has this Callout as a tooltip<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.CalloutBase","!category":"function"},"detachClose":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'close' event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.CalloutBase","!category":"function"},"detachOpen":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'open' event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.CalloutBase","!category":"function"},"detachOpened":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'opened' event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.CalloutBase","!category":"function"},"fireClose":{"!description":"Fire event close to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.commons.CalloutBase","!category":"function"},"attachOpened":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'opened' event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.CalloutBase<\/code> itself.\n\nIs fired when the Callout has been opened","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.CalloutBase","!category":"function"},"setPosition":{"!description":"Set position of the Callout window relative to the parent control.\nThis function automatically calculates and sets the correct offset,\nuse it instead of <code>setMyPosition/setAtPosition<\/code>.","!type":"fn(myPosition: sap.ui.core.Dock, atPosition: sap.ui.core.Dock) -> sap.ui.commons.CalloutBase","!category":"function"},"attachClose":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'close' event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.CalloutBase<\/code> itself.\n\nEvent is fired when the Callout window is closed.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.CalloutBase","!category":"function"},"attachOpen":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'open' event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.CalloutBase<\/code> itself.\n\nThe event is fired when the popup is opened.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.CalloutBase","!category":"function"},"close":{"!description":"Closes Callout","!type":"fn()","!category":"function"},"!description":"CalloutBase is a building block for Callout. Do not use it directly. Use the Callout control instead","!category":"class","fireOpened":{"!description":"Fire event opened to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.commons.CalloutBase","!category":"function"},"detachBeforeOpen":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'beforeOpen' event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.CalloutBase","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.CalloutBase.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.TooltipBase"},"sap.ui.commons.layout.VerticalLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 Moved to sap.ui.layout library. Please use this one.<br>In this layout the elemnts are orderd one below the other","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.VerticalLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.layout.VerticalLayout"},"sap.ui.commons.RatingIndicatorVisualMode":{"!description":"Possible values for the visualization of float values in the RatingIndicator Control.","Continuous":{"!description":"Values are not rounded.","!type":"String","!category":"enum"},"Full":{"!description":"Values are rounded to the nearest integer value (e.g. 1.7 -> 2).","!type":"String","!category":"enum"},"!category":"static class","Half":{"!description":"Values are rounded to the nearest half value (e.g. 1.7 -> 1.5).","!type":"String","!category":"enum"}},"sap.ui.commons.Panel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Panel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Panel"},"sap.ui.commons.form.FormElement":{"getVisible":{"!description":"Getter for property <code>visible<\/code>.\nInvisible FormElements are not rendered.\n\nDefault value is <code>true<\/code>","!type":"fn() -> Boolean","!category":"function"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>A form element is a combination of one label and different controls associated to this label.","setVisible":{"!description":"Setter for property <code>visible<\/code>.\n\nDefault value is <code>true<\/code>","!type":"fn(bVisible: Boolean) -> sap.ui.commons.form.FormElement","!category":"function"},"!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.FormElement.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.layout.form.FormElement"},"sap.ui.commons.MessageBox":{"!description":"Provides methods to create standard alerts, confirmation dialogs, or arbitrary message boxes.\n\nAs <code>MessageBox<\/code> is a static class, a <code>jQuery.sap.require(\"sap.ui.commons.MessageBox\");<\/code> statement\nmust be explicitly executed before the class can be used. Example:\n<pre>\n  jQuery.sap.require(\"sap.ui.commons.MessageBox\");\n  sap.ui.commons.MessageBox.show(\n      \"This message should appear in the message box.\",\n      sap.ui.commons.MessageBox.Icon.INFORMATION,\n      \"My message box title\",\n      [sap.ui.commons.MessageBox.Action.YES, sap.ui.commons.MessageBox.Action.NO],\n      function() { / * do something * / }\n  );\n<\/pre>","Action":"sap.ui.commons.MessageBox.Action","alert":{"!description":"Displays an alert box with the given message and an OK button (no icons).\nIf a callback is given, it is called after the alert box has been closed\nby the user via the OK button or via the Close icon. The callback is called\nwith the following signature:\n\n<pre>\n  function ()\n<\/pre>\n\nThe alert box opened by this method is modal and it is processed asynchronously.\nApplications have to use the <code>fnCallback<\/code> to continue work after the\nuser closed the alert box.","!type":"fn(vMessage: String | sap.ui.core.Control, fnCallback?: fn(), sTitle?: String, sDialogId?: String)","!category":"function"},"!category":"namespace","show":{"!description":"Creates and displays a simple message box with the given text and buttons, and optionally other parts.\nAfter the user has selected a button or closed the message box using the close icon, the <code>callback<\/code>\nfunction is invoked when given.\n\nThe only mandatory parameter is <code>vMessage<\/code>. Either a string with the corresponding text or even\na layout control could be provided.\n\nThe created dialog box is executed asynchronously. When it has been created and registered for rendering,\nthis function returns without waiting for a user reaction.\n\nWhen applications have to react on the users choice, they have to provide a callback function and\npostpone any reaction on the user choice until that callback is triggered.\n\nThe signature of the callback is\n\n  function (oAction);\n\nwhere <code>oAction<\/code> is the button that the user has pressed. When the user has pressed the close button,\na MessageBox.Action.Close is returned.","!type":"fn(vMessage: String | sap.ui.core.Control, oIcon?: sap.ui.commons.MessageBox.Icon, sTitle?: String, vActions?: [sap.ui.commons.MessageBox.Action | sap.ui.commons.MessageBox.Action], fnCallback?: fn(), oDefaultAction?: sap.ui.commons.MessageBox.Action, sDialogId?: String)","!category":"function"},"confirm":{"!description":"Displays a confirmation dialog box with the given message, a question icon,\nan OK button, and a Cancel button. If a callback is given, it is called after the\nalert box has been closed by the user via one of the buttons or via the close icon.\nThe callback is called with the following signature\n\n<pre>\n  function(bConfirmed)\n<\/pre>\n\nwhere bConfirmed is set to true when the user has activated the OK button.\n\nThe confirmation dialog box opened by this method is modal and it is processed asynchronously.\nApplications have to use the <code>fnCallback<\/code> to continue work after the\nuser closed the alert box.","!type":"fn(vMessage: String | sap.ui.core.Control, fnCallback?: fn(), sTitle?: String, sDialogId?: String)","!category":"function"},"Icon":"sap.ui.commons.MessageBox.Icon"},"sap.ui.commons.RangeSlider":{"setValue2":{"!description":"Setter for property <code>value2<\/code>.\n\nDefault value is <code>80<\/code>.","!type":"fn(fValue2: Number) -> sap.ui.commons.RangeSlider","!category":"function"},"!description":"The interactive control is displayed either as a horizontal or a vertical line with two pointers and units of measurement.\nUsers can move the pointers along the line to change a range with graphical support.","getValue2":{"!description":"Getter for property <code>value2<\/code>.\n\nCurrent second value of the slider. (Position of the second grip.)\n\n<b>Note:<\/b> If the value is not in the valid range (between <code>min<\/code> and <code>max<\/code>) it will be changed to be in the valid range.\nIf it is smaller than <code>value<\/code> it will be set to the same value.\n\nDefault value is <code>80<\/code>.","!type":"fn() -> Number","!category":"function"},"!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RangeSlider.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.commons.Slider"},"sap.ui.commons.Tab_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Tab with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.Panel.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Tab"},"sap.ui.commons.Area_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Area with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Area"},"sap.ui.commons.form.GridContainerData_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.GridContainerData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.GridContainerData.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.GridContainerData"},"sap.ui":{"commons":"sap.ui.commons","!category":"namespace"},"sap.ui.commons.ToolbarDesign":{"Standard":{"!description":"The toolbar elements such as buttons for example have their normal visual design, and the toolbar appears solid.\nThe feature might be not supported by all themes.","!type":"String","!category":"enum"},"!description":"Determines the visual design of a Toolbar.","Transparent":{"!description":"The controls included in the toolbar have a normal visual design where the toolbar appears transparent.\nThe feature might be not supported by all themes.","!type":"String","!category":"enum"},"Flat":{"!description":"The included controls have a very light appearance. The feature might be not supported by all themes.","!type":"String","!category":"enum"},"!category":"static class"},"sap.ui.commons.form.GridLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>This Layout implements a guideline 2.0 grid. This can be a 16 column grid or an 8 column grid.\n\nTo adjust the content inside the GridLayout GridContainerData and GridElementData could be used.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.GridLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.layout.form.GridLayout"},"sap.ui.commons.Tree":{"removeAllNodes":{"!description":"Removes all the controls in the aggregation named <code>nodes<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.TreeNode]","!category":"function"},"getShowHeaderIcons":{"!description":"Getter for property <code>showHeaderIcons<\/code>.\n\nShow Header icons (e.g. Expand/Collapse all). Only consider if showHeader is true\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"detachSelectionChange":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'selectionChange' event of this <code>sap.ui.commons.Tree<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Tree","!category":"function"},"destroyNodes":{"!description":"Destroys all the nodes in the aggregation\nnamed <code>nodes<\/code>.","!type":"fn() -> sap.ui.commons.Tree","!category":"function"},"setMinWidth":{"!description":"Setter for property <code>minWidth<\/code>.","!type":"fn(sMinWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Tree","!category":"function"},"setShowHeader":{"!description":"Setter for property <code>showHeader<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowHeader: Boolean) -> sap.ui.commons.Tree","!category":"function"},"expandAll":{"!description":"Expands all nodes in the tree","!type":"fn()","!category":"function"},"attachSelect":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'select' event of this <code>sap.ui.commons.Tree<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.Tree<\/code> itself.\n\nEvent is fired when a tree node is selected.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Tree","!category":"function"},"getNodes":{"!description":"Getter for aggregation <code>nodes<\/code>.\n\nFirst level nodes","!type":"fn() -> [sap.ui.commons.TreeNode]","!category":"function"},"setShowHorizontalScrollbar":{"!description":"Setter for property <code>showHorizontalScrollbar<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowHorizontalScrollbar: Boolean) -> sap.ui.commons.Tree","!category":"function"},"setSelectionMode":{"!description":"Setter for property <code>selectionMode<\/code>.\n\nDefault value is <code>Legacy<\/code>.","!type":"fn(sSelectionMode: sap.ui.commons.TreeSelectionMode) -> sap.ui.commons.Tree","!category":"function"},"collapseAll":{"!description":"Collapses all nodes in the tree","!type":"fn()","!category":"function"},"getHeight":{"!description":"Getter for property <code>height<\/code>.\n\nTree height\n\nDefault value is <code>auto<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getSelectionMode":{"!description":"Getter for property <code>selectionMode<\/code>.\n\nSelection mode of the Tree.\n\nDefault value is <code>Legacy<\/code>.","!type":"fn() -> sap.ui.commons.TreeSelectionMode","!category":"function"},"removeNode":{"!description":"Removes a node from the aggregation named <code>nodes<\/code>.","!type":"fn(vNode: Number | String | sap.ui.commons.TreeNode) -> sap.ui.commons.TreeNode","!category":"function"},"getNodeByContext":{"!description":"Returns the node with the given context, or null if no such node currently exists","!type":"fn(oContext: sap.ui.model.Context)","!category":"function"},"!category":"class","setShowHeaderIcons":{"!description":"Setter for property <code>showHeaderIcons<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowHeaderIcons: Boolean) -> sap.ui.commons.Tree","!category":"function"},"getTitle":{"!description":"Getter for property <code>title<\/code>.\n\nTree title","!type":"fn() -> String","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nTree width\n\nDefault value is <code>auto<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.\n\nDefault value is <code>auto<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Tree","!category":"function"},"fireSelect":{"!description":"Fire event select to attached listeners.\n\nListeners may prevent the default action of this event using the preventDefault-method on the event object.\n\n\nExpects following event parameters:\n<ul>\n<li>'node' of type <code>sap.ui.commons.TreeNode<\/code>The node which has been selected.<\/li>\n<li>'nodeContext' of type <code>object<\/code>The binding context of the selected node.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> Boolean","!category":"function"},"insertNode":{"!description":"Inserts a node into the aggregation named <code>nodes<\/code>.","!type":"fn(oNode: sap.ui.commons.TreeNode, iIndex: Number) -> sap.ui.commons.Tree","!category":"function"},"getMinWidth":{"!description":"Getter for property <code>minWidth<\/code>.\n\nMinimal width for the Tree. Can be useful when, for example, the width is specified in percentage, to avoid the tree to become too narrow when container is resize","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"detachSelect":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'select' event of this <code>sap.ui.commons.Tree<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Tree","!category":"function"},"fireSelectionChange":{"!description":"Fire event selectionChange to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'nodes' of type <code>sap.ui.commons.TreeNode[]<\/code>The nodes which has been selected.<\/li>\n<li>'nodeContexts' of type <code>object[]<\/code>The binding context of the selected nodes.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.Tree","!category":"function"},"unbindNodes":{"!description":"Unbinder for aggregation <code>nodes<\/code>.","!type":"fn() -> sap.ui.commons.Tree","!category":"function"},"getShowHeader":{"!description":"Getter for property <code>showHeader<\/code>.\n\nTree Header is display. If false, the tree will be in a transparent mode\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"bindNodes":{"!description":"Binder for aggregation <code>nodes<\/code>.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.Tree","!category":"function"},"indexOfNode":{"!description":"Checks for the provided <code>sap.ui.commons.TreeNode<\/code> in the aggregation named <code>nodes<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oNode: sap.ui.commons.TreeNode) -> Number","!category":"function"},"!description":"Simple tree to display item in a hierarchical way","getShowHorizontalScrollbar":{"!description":"Getter for property <code>showHorizontalScrollbar<\/code>.\n\nDisplay horizontal scrollbar. If false, the overflow content will be hidden\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setTitle":{"!description":"Setter for property <code>title<\/code>.","!type":"fn(sTitle: String) -> sap.ui.commons.Tree","!category":"function"},"addNode":{"!description":"Adds some node into the aggregation named <code>nodes<\/code>.","!type":"fn(oNode: sap.ui.commons.TreeNode) -> sap.ui.commons.Tree","!category":"function"},"setHeight":{"!description":"Setter for property <code>height<\/code>.\n\nDefault value is <code>auto<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Tree","!category":"function"},"attachSelectionChange":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'selectionChange' event of this <code>sap.ui.commons.Tree<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.Tree<\/code> itself.\n\nfired when the selection of the tree has been changed","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Tree","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Tree.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.layout.BackgroundDesign":{"!description":"Background design (i.e. color), e.g. of a layout cell.","Header":{"!description":"\nA background design suitable for headers.","!type":"String","!category":"enum"},"Transparent":{"!description":"\nA transparent background.","!type":"String","!category":"enum"},"Fill2":{"!description":"\nAn opaque background design that looks medium filled.","!type":"String","!category":"enum"},"Border":{"!description":"\nA background design suitable for borders.","!type":"String","!category":"enum"},"Fill1":{"!description":"\nAn opaque background design that looks dark filled.","!type":"String","!category":"enum"},"Fill3":{"!description":"\nAn opaque background design that looks light filled.","!type":"String","!category":"enum"},"!category":"static class","Plain":{"!description":"\nA plain but opaque background design.","!type":"String","!category":"enum"}},"sap.ui.commons.form.FormLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Base layout for Forms.\nOther Layouts must inherit from this one.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.FormLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.layout.form.FormLayout"},"sap.ui.commons.DatePicker":{"setLocale":{"!description":"Setter for property <code>locale<\/code>.","!type":"fn(sLocale: String) -> sap.ui.commons.DatePicker","!category":"function"},"getLocale":{"!description":"Getter for property <code>locale<\/code>.\n\nDefines the locale (language and country), e.g. \"en-US\", whose translations and Date formatters should be used to render the DatePicker.If the value property is bound to a model using a Date type the locale will be ignored, because the locale information of the model are used.","!type":"fn() -> String","!category":"function"},"!description":"Allows end users to interact with dates.\nEntries can directly be written in, or selected from a calendar pad.\nNote: Dates can always be manually entered in the fix YYYYMMDD format, on top of the flexible \"locale\" format.\nIf the value is provided via data binding, using a Date.type the formatter of the Date.type is used.\nSince version 1.22 the unified.Calendar is used inside the datePicker. So applications using the DatePicker should load the unified library. Otherwise it will be loaded the first time a DatePicker is opened.","fireChange":{"!description":"Fire event change to attached listeners.\n\nProvides the following event parameters:\n<ul>\n<li>'newValue' of type <code>string<\/code> The new / changed value of the DatePicker.<\/li>\n<li>'newYyyymmdd' of type <code>string<\/code> The new / changed Yyyymmdd of the DatePicker. <\/li>\n<li>'invalidValue' of type <code>boolean<\/code> The new / changed value of the DatePicker is not a valid date. <\/li>\n<\/ul>","!type":"fn(bInvalidValue: Boolean) -> sap.ui.commons.DatePicker","!category":"function"},"!category":"class","getYyyymmdd":{"!description":"Getter for property <code>yyyymmdd<\/code>.\n\nDefines the date as a \"yyyymmdd\" string, independent from the format used. The inherited textField \"value\" attribute uses the date format as configured via the locale.\nThe date is interpreted as gregorian date","!type":"fn() -> String","!category":"function"},"setYyyymmdd":{"!description":"Setter for property <code>yyyymmdd<\/code>.","!type":"fn(sYyyymmdd: String) -> sap.ui.commons.DatePicker","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.DatePicker.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.commons.TextField"},"sap.ui.commons.Callout":{"destroyContent":{"!description":"Destroys all the content in the aggregation\nnamed <code>content<\/code>.","!type":"fn() -> sap.ui.commons.Callout","!category":"function"},"addContent":{"!description":"Adds some content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.Callout","!category":"function"},"insertContent":{"!description":"Inserts a content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.Callout","!category":"function"},"!description":"Callout is a small popup with some useful information and links that is shown when a mouse is hovered over a specific view element.","removeAllContent":{"!description":"Removes all the controls in the aggregation named <code>content<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getContent":{"!description":"Getter for aggregation <code>content<\/code>.\n\nContent of the Callout","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function"},"!category":"class","removeContent":{"!description":"Removes a content from the aggregation named <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Callout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.commons.CalloutBase"},"sap.ui.commons.FileUploader_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.FileUploader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.FileUploader.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.FileUploader"},"sap.ui.commons.form.GridElementData_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.GridElementData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.GridElementData.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.GridElementData"},"sap.ui.commons.RatingIndicator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RatingIndicator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RatingIndicator"},"sap.ui.commons.ToggleButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ToggleButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.Button.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ToggleButton"},"sap.ui.commons.SegmentedButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.SegmentedButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.SegmentedButton"},"sap.ui.commons.ImageMap_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ImageMap with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ImageMap"},"sap.ui.commons.ToggleButton":{"!description":"The ToggleButton Control is a Button that can be toggled between pressed and normal state","setPressed":{"!description":"Setter for property <code>pressed<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bPressed: Boolean) -> sap.ui.commons.ToggleButton","!category":"function"},"!category":"class","getPressed":{"!description":"Getter for property <code>pressed<\/code>.\n\nThe property is \u201ctrue\u201d when the control is toggled. The default state of this property is \"false\".\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ToggleButton.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.commons.Button"},"sap.ui.commons.layout.MatrixLayoutCell_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.MatrixLayoutCell with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.MatrixLayoutCell"},"sap.ui.commons.FileUploaderParameter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.FileUploaderParameter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.FileUploaderParameter.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.FileUploaderParameter"},"sap.ui.commons.TriStateCheckBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TriStateCheckBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.TriStateCheckBox"},"sap.ui.commons.FormattedTextViewControl":{"!description":"Marker interface for common controls which are suitable for use within a FormattedTextView.","!category":"static class"},"sap.ui.commons.HorizontalDivider":{"getType":{"!description":"Getter for property <code>type<\/code>.\n\nDefines the type of the divider.\n\nDefault value is <code>Area<\/code>.","!type":"fn() -> sap.ui.commons.HorizontalDividerType","!category":"function"},"getHeight":{"!description":"Getter for property <code>height<\/code>.\n\nDefines the height of the divider.\n\nDefault value is <code>Medium<\/code>.","!type":"fn() -> sap.ui.commons.HorizontalDividerHeight","!category":"function"},"!description":"Divides the screen in visual areas.","setType":{"!description":"Setter for property <code>type<\/code>.\n\nDefault value is <code>Area<\/code>.","!type":"fn(sType: sap.ui.commons.HorizontalDividerType) -> sap.ui.commons.HorizontalDivider","!category":"function"},"setHeight":{"!description":"Setter for property <code>height<\/code>.\n\nDefault value is <code>Medium<\/code>.","!type":"fn(sHeight: sap.ui.commons.HorizontalDividerHeight) -> sap.ui.commons.HorizontalDivider","!category":"function"},"!category":"class","getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nDefines the width of the divider.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.HorizontalDivider","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.HorizontalDivider.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Control"},"sap.ui.commons.ColorPicker":{"getRGB":{"!description":"Deliver current RGB-values.","!type":"fn() -> Object","!category":"function"},"detachLiveChange":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'liveChange' event of this <code>sap.ui.commons.ColorPicker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.ColorPicker","!category":"function"},"getColorString":{"!description":"Getter for property <code>colorString<\/code>.\n\nThis is the import-parameter of the ColorPicker.\nAs input-parameter, it can be a Hexadecimal string (#FFFFFF), a RGB-string rgb(255,255,255), a HSV-string hsv(360,100,100) or a CSS-colorname 'red'.\nAs output-parameter it is a RGB-string containing the current color.","!type":"fn() -> String","!category":"function"},"detachChange":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'change' event of this <code>sap.ui.commons.ColorPicker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.ColorPicker","!category":"function"},"!description":"This control gives the user the opportunity to choose a color. The color can be defined using HEX-, RGB- or HSV-values or a CSS colorname.","fireLiveChange":{"!description":"Fire event liveChange to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'r' of type <code>int<\/code>Parameter containing the RED value (0-255)<\/li>\n<li>'g' of type <code>int<\/code>Parameter containing the GREEN value (0-255)<\/li>\n<li>'b' of type <code>int<\/code>Parameter containing the BLUE value (0-255)<\/li>\n<li>'h' of type <code>int<\/code>Parameter containing the HUE value (0-360)<\/li>\n<li>'s' of type <code>int<\/code>Parameter containing the SATURATION value (0-100)<\/li>\n<li>'v' of type <code>int<\/code>Parameter containing the VALUE value (0-100)<\/li>\n<li>'hex' of type <code>string<\/code>Parameter containing the Hexadecimal string (#FFFFFF)<\/li>\n<li>'alpha' of type <code>string<\/code>Parameter containing the alpha value (transparency)<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.ColorPicker","!category":"function"},"setColorString":{"!description":"Setter for property <code>colorString<\/code>.","!type":"fn(sColorString: String) -> sap.ui.commons.ColorPicker","!category":"function"},"attachLiveChange":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'liveChange' event of this <code>sap.ui.commons.ColorPicker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.ColorPicker<\/code> itself.\n\nValue was changed. This event is fired during the mouse move. The normal change event ist only fired by mouseup.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.ColorPicker","!category":"function"},"fireChange":{"!description":"Fire event change to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'r' of type <code>int<\/code>Parameter containing the RED value (0-255)<\/li>\n<li>'g' of type <code>int<\/code>Parameter containing the GREEN value (0-255)<\/li>\n<li>'b' of type <code>int<\/code>Parameter containing the BLUE value (0-255)<\/li>\n<li>'h' of type <code>int<\/code>Parameter containing the HUE value (0-360)<\/li>\n<li>'s' of type <code>int<\/code>Parameter containing the SATURATION value (0-100)<\/li>\n<li>'v' of type <code>int<\/code>Parameter containing the VALUE value (0-100)<\/li>\n<li>'hex' of type <code>string<\/code>Parameter containing the Hexadecimal string (#FFFFFF)<\/li>\n<li>'alpha' of type <code>string<\/code>Parameter containing the alpha value (transparency)<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.ColorPicker","!category":"function"},"!category":"class","attachChange":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'change' event of this <code>sap.ui.commons.ColorPicker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.ColorPicker<\/code> itself.\n\nValue was changed. This event is fired if the value has changed by an user action.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.ColorPicker","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ColorPicker.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.TriStateCheckBoxState":{"!description":"States for TriStateCheckBox","Unchecked":{"!description":"unchecked, default value for tri-state checkbox","!type":"String","!category":"enum"},"Checked":{"!description":"checked value for tri-state checkbox","!type":"String","!category":"enum"},"!category":"static class","Mixed":{"!description":"mixed state for tri-state checkbox","!type":"String","!category":"enum"}},"sap.ui.commons.TriStateCheckBox":{"setSelectionState":{"!description":"Setter for property <code>selectionState<\/code>.\n\nDefault value is <code>Unchecked<\/code>.","!type":"fn(sSelectionState: sap.ui.commons.TriStateCheckBoxState) -> sap.ui.commons.TriStateCheckBox","!category":"function"},"setTextDirection":{"!description":"Setter for property <code>textDirection<\/code>.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.ui.commons.TriStateCheckBox","!category":"function"},"getEditable":{"!description":"Getter for property <code>editable<\/code>.\n\nSpecifies whether the user shall be allowed to flag the check box\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getTextDirection":{"!description":"Getter for property <code>textDirection<\/code>.\n\nThe value can be set to LTR or RTL. Otherwise, the control inherits the text direction from its parent control.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn() -> sap.ui.core.TextDirection","!category":"function"},"getEnabled":{"!description":"Getter for property <code>enabled<\/code>.\n\nUsing this property, the control could be disabled, if required.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setText":{"!description":"Setter for property <code>text<\/code>.","!type":"fn(sText: String) -> sap.ui.commons.TriStateCheckBox","!category":"function"},"getValueState":{"!description":"Getter for property <code>valueState<\/code>.\n\nAccepts the core enumeration ValueState.type that supports 'None', 'Error', 'Warning' and 'Success'.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.ui.core.ValueState","!category":"function"},"detachChange":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'change' event of this <code>sap.ui.commons.TriStateCheckBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.TriStateCheckBox","!category":"function"},"getText":{"!description":"Getter for property <code>text<\/code>.\n\nDefines the text displayed next to the check box","!type":"fn() -> String","!category":"function"},"toggle":{"!description":"Method called whenever a user clicks on a tri-state checkbox","!type":"fn(destState: sap.ui.commons.TriStateCheckBoxState)","!category":"function"},"setEditable":{"!description":"Setter for property <code>editable<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEditable: Boolean) -> sap.ui.commons.TriStateCheckBox","!category":"function"},"!description":"TriStateCheckBox to reflect mixed state for checkboxes. The control can display three states, namely checked, unchecked and mixed. However, mixed state cannot be directly reached by user interaction on the particular control.\nIt can be only set by the control's public toggle function, to make a behaviour possible which is e.g. required in checkbox trees.","setValueState":{"!description":"Setter for property <code>valueState<\/code>.\n\nDefault value is <code>None<\/code>.","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.commons.TriStateCheckBox","!category":"function"},"fireChange":{"!description":"Fire event change to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'selectionState' of type <code>string<\/code>\nChecks whether the box is flagged or not flagged.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.TriStateCheckBox","!category":"function"},"!category":"class","setEnabled":{"!description":"Setter for property <code>enabled<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.TriStateCheckBox","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nThe width can be set to an absolute value. If no value is set, the control width results from the text length.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"attachChange":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'change' event of this <code>sap.ui.commons.TriStateCheckBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.TriStateCheckBox<\/code> itself.\n\n\nEvent is triggered when the control status is changed by the user by flagging or unflagging the checkbox.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.TriStateCheckBox","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.TriStateCheckBox","!category":"function"},"getSelectionState":{"!description":"Getter for property <code>selectionState<\/code>.\n\nDefines the states of the checkbox\n\nDefault value is <code>Unchecked<\/code>.","!type":"fn() -> sap.ui.commons.TriStateCheckBoxState","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.TriStateCheckBox.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.Paginator":{"!description":"Provides navigation between pages within a list of numbered pages.","attachPage":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'page' event of this <code>sap.ui.commons.Paginator<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.Paginator<\/code> itself.\n\nEvent is fired when the user navigates to another page by selecting it directly, or by jumping forward/backward.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Paginator","!category":"function"},"getNumberOfPages":{"!description":"Getter for property <code>numberOfPages<\/code>.\n\nRepresents the overall number of pages that are embedded into the parent control","!type":"fn() -> Number","!category":"function"},"setNumberOfPages":{"!description":"Setter for property <code>numberOfPages<\/code>.","!type":"fn(iNumberOfPages: Number) -> sap.ui.commons.Paginator","!category":"function"},"firePage":{"!description":"Fire event page to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'srcPage' of type <code>int<\/code>The page which is the current one before the page event is fired (and another page is displayed)<\/li>\n<li>'targetPage' of type <code>int<\/code>The page that shall be displayed next after the page event is fired.\n\nThe page number is 1-based: the first page has index 1, not 0, to match the number visible in the UI.<\/li>\n<li>'type' of type <code>sap.ui.commons.PaginatorEvent<\/code>Provides the values 'First', 'Last', 'Next', 'Previous', 'Goto'. The event parameter informs the application\nhow the user navigated to the new page: Whether the 'Next' button was used, or another button, or whether the page was directly\nselected<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.Paginator","!category":"function"},"!category":"class","getCurrentPage":{"!description":"Getter for property <code>currentPage<\/code>.\n\nRepresents the current page (first page has index 1, not 0, to match the visual number)\n\nDefault value is <code>1<\/code>.","!type":"fn() -> Number","!category":"function"},"setCurrentPage":{"!description":"Setter for property <code>currentPage<\/code>.\n\nDefault value is <code>1<\/code>.","!type":"fn(iCurrentPage: Number) -> sap.ui.commons.Paginator","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Paginator.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"detachPage":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'page' event of this <code>sap.ui.commons.Paginator<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Paginator","!category":"function"},"!proto":"sap.ui.core.Control"},"sap.ui.commons.layout.ResponsiveFlowLayoutData":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>This is a LayoutData Element that can be added to a control if this control is used within a ResponsiveFlowLayout","setMargin":{"!description":"Setter for property <code>margin<\/code>.\n\nDefault value is <code>true<\/code>","!type":"fn(bMargin: Boolean) -> sap.ui.layout.ResponsiveFlowLayoutData","!category":"function"},"getMargin":{"!description":"Getter for property <code>margin<\/code>.\nThis property prevents any margin of the element if set to false\n\nDefault value is <code>true<\/code>","!type":"fn() -> Boolean","!category":"function"},"!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.ResponsiveFlowLayoutData.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.layout.ResponsiveFlowLayoutData"},"sap.ui.commons.MenuBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MenuBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.MenuBar"},"sap.ui.commons.ResponsiveContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ResponsiveContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ResponsiveContainer"},"sap.ui.commons.Splitter":{"insertFirstPaneContent":{"!description":"Inserts a firstPaneContent into the aggregation named <code>firstPaneContent<\/code>.","!type":"fn(oFirstPaneContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.Splitter","!category":"function"},"getFirstPaneContent":{"!description":"Getter for aggregation <code>firstPaneContent<\/code>.\n\nControls inside the first pane. These are the left ones in case of defining a vertical splitter, and the top ones in case of using the horizontal splitter.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getMinSizeSecondPane":{"!description":"Getter for property <code>minSizeSecondPane<\/code>.\n\nThe minimum size (width for vertical splitter or height for horizontal splitter) of the second Pane\n\nDefault value is <code>0%<\/code>.","!type":"fn() -> sap.ui.core.Percentage","!category":"function"},"setSplitterOrientation":{"!description":"Setter for property <code>splitterOrientation<\/code>.\n\nDefault value is <code>Vertical<\/code>.","!type":"fn(sSplitterOrientation: sap.ui.core.Orientation) -> sap.ui.commons.Splitter","!category":"function"},"setMinSizeSecondPane":{"!description":"Setter for property <code>minSizeSecondPane<\/code>.\n\nDefault value is <code>0%<\/code>.","!type":"fn(sMinSizeSecondPane: sap.ui.core.Percentage) -> sap.ui.commons.Splitter","!category":"function"},"getMinSizeFirstPane":{"!description":"Getter for property <code>minSizeFirstPane<\/code>.\n\nThe minimum size (width for vertical splitter or height for horizontal splitter) of the first Pane\n\nDefault value is <code>0%<\/code>.","!type":"fn() -> sap.ui.core.Percentage","!category":"function"},"addSecondPaneContent":{"!description":"Adds some secondPaneContent into the aggregation named <code>secondPaneContent<\/code>.","!type":"fn(oSecondPaneContent: sap.ui.core.Control) -> sap.ui.commons.Splitter","!category":"function"},"insertSecondPaneContent":{"!description":"Inserts a secondPaneContent into the aggregation named <code>secondPaneContent<\/code>.","!type":"fn(oSecondPaneContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.Splitter","!category":"function"},"removeFirstPaneContent":{"!description":"Removes a firstPaneContent from the aggregation named <code>firstPaneContent<\/code>.","!type":"fn(vFirstPaneContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"removeSecondPaneContent":{"!description":"Removes a secondPaneContent from the aggregation named <code>secondPaneContent<\/code>.","!type":"fn(vSecondPaneContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"addFirstPaneContent":{"!description":"Adds some firstPaneContent into the aggregation named <code>firstPaneContent<\/code>.","!type":"fn(oFirstPaneContent: sap.ui.core.Control) -> sap.ui.commons.Splitter","!category":"function"},"getHeight":{"!description":"Getter for property <code>height<\/code>.\n\nThe height of the split area in px or in %\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.commons.SplitterSize","!category":"function"},"getSplitterBarVisible":{"!description":"Getter for property <code>splitterBarVisible<\/code>.\n\nset the splitter bar to be visible or not.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getShowScrollBars":{"!description":"Getter for property <code>showScrollBars<\/code>.\n\nSpecifies if the browser should display scroll bars or simply cut the content of a splitter pane when the content does not fit into its pane.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setSplitterBarVisible":{"!description":"Setter for property <code>splitterBarVisible<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bSplitterBarVisible: Boolean) -> sap.ui.commons.Splitter","!category":"function"},"!category":"class","getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nThe width of the split area in px or in %\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.commons.SplitterSize","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.commons.SplitterSize) -> sap.ui.commons.Splitter","!category":"function"},"destroyFirstPaneContent":{"!description":"Destroys all the firstPaneContent in the aggregation\nnamed <code>firstPaneContent<\/code>.","!type":"fn() -> sap.ui.commons.Splitter","!category":"function"},"getSplitterPosition":{"!description":"Getter for property <code>splitterPosition<\/code>.\n\nPosition of splitter bar in percentage.\nThe default value means that the splitter is positioned in the middle of the area that is available for the splitter.\n\nDefault value is <code>50%<\/code>.","!type":"fn() -> sap.ui.core.Percentage","!category":"function"},"destroySecondPaneContent":{"!description":"Destroys all the secondPaneContent in the aggregation\nnamed <code>secondPaneContent<\/code>.","!type":"fn() -> sap.ui.commons.Splitter","!category":"function"},"setMinSizeFirstPane":{"!description":"Setter for property <code>minSizeFirstPane<\/code>.\n\nDefault value is <code>0%<\/code>.","!type":"fn(sMinSizeFirstPane: sap.ui.core.Percentage) -> sap.ui.commons.Splitter","!category":"function"},"!description":"Allows to split the screen into two areas. Make sure that the container for the splitter has an absolute height or set an absolute height for the splitter using the height property. Otherwise the height of the splitter is calculated by the height of its contents.","removeAllSecondPaneContent":{"!description":"Removes all the controls in the aggregation named <code>secondPaneContent<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"indexOfFirstPaneContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>firstPaneContent<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oFirstPaneContent: sap.ui.core.Control) -> Number","!category":"function"},"removeAllFirstPaneContent":{"!description":"Removes all the controls in the aggregation named <code>firstPaneContent<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setHeight":{"!description":"Setter for property <code>height<\/code>.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sHeight: sap.ui.commons.SplitterSize) -> sap.ui.commons.Splitter","!category":"function"},"getSecondPaneContent":{"!description":"Getter for aggregation <code>secondPaneContent<\/code>.\n\nControls inside the second pane. These are the right ones in case of defining a vertical splitter, and the bottom ones in case of using the horizontal splitter.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setSplitterPosition":{"!description":"Setter for property <code>splitterPosition<\/code>.\n\nDefault value is <code>50%<\/code>.","!type":"fn(sSplitterPosition: sap.ui.core.Percentage) -> sap.ui.commons.Splitter","!category":"function"},"indexOfSecondPaneContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>secondPaneContent<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oSecondPaneContent: sap.ui.core.Control) -> Number","!category":"function"},"setShowScrollBars":{"!description":"Setter for property <code>showScrollBars<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowScrollBars: Boolean) -> sap.ui.commons.Splitter","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Splitter.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Control","getSplitterOrientation":{"!description":"Getter for property <code>splitterOrientation<\/code>.\n\nThe splitter can have horizontal or vertical orientation.\n\nDefault value is <code>Vertical<\/code>.","!type":"fn() -> sap.ui.core.Orientation","!category":"function"}},"sap.ui.commons.ColorPicker_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ColorPicker with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ColorPicker"},"sap.ui.commons.Dialog":{"getAutoClose":{"!description":"Getter for property <code>autoClose<\/code>.\n\nIf this property is set to true the Dialog will close if the Dialog loses its focus\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setMaxHeight":{"!description":"Setter for property <code>maxHeight<\/code>.","!type":"fn(sMaxHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Dialog","!category":"function"},"setModal":{"!description":"Setter for property <code>modal<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bModal: Boolean) -> sap.ui.commons.Dialog","!category":"function"},"removeButton":{"!description":"Removes a button from the aggregation named <code>buttons<\/code>.","!type":"fn(vButton: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"close":{"!description":"Closes the dialog control instance.","!type":"fn()","!category":"function"},"getResizable":{"!description":"Getter for property <code>resizable<\/code>.\n\n\nSpecifies whether the dialog window can be resized by the user. The dialog frame contains the visual symbol.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"open":{"!description":"Opens the dialog control instance.","!type":"fn()","!category":"function"},"getScrollLeft":{"!description":"Getter for property <code>scrollLeft<\/code>.\n\n\nScroll position from left to right. \"0\" means leftmost position.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function"},"setApplyContentPadding":{"!description":"Setter for property <code>applyContentPadding<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bApplyContentPadding: Boolean) -> sap.ui.commons.Dialog","!category":"function"},"getTitle":{"!description":"Getter for property <code>title<\/code>.\n\n\nDialog title displayed in the header.\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\n\nOuter width of dialog window. When not set and not constrained by one of the width parameters (minWidth/maxWidth), the window size is automatically adapted to the content.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getShowCloseButton":{"!description":"Getter for property <code>showCloseButton<\/code>.\n\n\nDisplays a close button in the title bar.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"addContent":{"!description":"Adds some content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.Dialog","!category":"function"},"getApplyContentPadding":{"!description":"Getter for property <code>applyContentPadding<\/code>.\n\n\nPadding is theme-dependent. When set to \"false\", the content extends to the dialog borders.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getContent":{"!description":"Getter for aggregation <code>content<\/code>.\n\nAggregating the content of the dialog (one or more controls).\n\nCaveat: when content is added with width given as a percentage, the Dialog itself should have a width set.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"removeAllContent":{"!description":"Removes all the controls in the aggregation named <code>content<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getMinWidth":{"!description":"Getter for property <code>minWidth<\/code>.\n\n\nMinimum outer width of the dialog window. When set, neither the user nor some layout settings can make the window smaller.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getOpenState":{"!description":"Returns whether the Dialog is currently open, closed, or transitioning between these states.","!type":"fn() -> sap.ui.core.OpenState","!category":"function"},"fireClosed":{"!description":"Fire event closed to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'width' of type <code>int<\/code>the width of the dialog when closed<\/li>\n<li>'height' of type <code>int<\/code>the height of the dialog when closed<\/li>\n<li>'top' of type <code>int<\/code>the top position of the dialog when closed<\/li>\n<li>'left' of type <code>int<\/code>the left position of the dialog when closed<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.Dialog","!category":"function"},"setKeepInWindow":{"!description":"Setter for property <code>keepInWindow<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bKeepInWindow: Boolean) -> sap.ui.commons.Dialog","!category":"function"},"getAccessibleRole":{"!description":"Getter for property <code>accessibleRole<\/code>.\n\nThe ARIA role for the control. E.g. for alert-style Dialogs this can be set to \"AlertDialog\".\n\nDefault value is <code>Dialog<\/code>.","!type":"fn() -> sap.ui.core.AccessibleRole","!category":"function"},"getMaxHeight":{"!description":"Getter for property <code>maxHeight<\/code>.\n\n\nMaximum outer height of the dialog window. If set, neither the user nor some layout settings can make the window larger.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setTitle":{"!description":"Setter for property <code>title<\/code>.\n\nDefault value is <code><\/code>.","!type":"fn(sTitle: String) -> sap.ui.commons.Dialog","!category":"function"},"setHeight":{"!description":"Setter for property <code>height<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Dialog","!category":"function"},"getKeepInWindow":{"!description":"Getter for property <code>keepInWindow<\/code>.\n\nWhether Dialog movement should be restricted to the visible area of the window. This only affects drag&drop movements by the user. This doesn't affect modal dialogs -> modal dialogs always stay in the window.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setAutoClose":{"!description":"Setter for property <code>autoClose<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bAutoClose: Boolean) -> sap.ui.commons.Dialog","!category":"function"},"detachClosed":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'closed' event of this <code>sap.ui.commons.Dialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Dialog","!category":"function"},"!proto":"sap.ui.core.Control","getDefaultButton":{"!description":"Id of the element which is the current target of the <code>defaultButton<\/code> association, or null.\n\n\nDefines one of the buttons that have been provided via button aggregation to be the default button. This default button is initially selected, if no control is set via the initialFocus association explicitly. The default button is activated when Enter is pressed in the context of the dialog and when the currently selected element does not handle the Enter event itself.","!type":"fn() -> sap.ui.commons.Button","!category":"function"},"getEnabled":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn() -> Boolean","!category":"function"},"setAccessibleRole":{"!description":"Setter for property <code>accessibleRole<\/code>.\n\nDefault value is <code>Dialog<\/code>.","!type":"fn(sAccessibleRole: sap.ui.core.AccessibleRole) -> sap.ui.commons.Dialog","!category":"function"},"setScrollLeft":{"!description":"Setter for property <code>scrollLeft<\/code>.\n\nDefault value is <code>0<\/code>.","!type":"fn(iScrollLeft: Number) -> sap.ui.commons.Dialog","!category":"function"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function"},"removeContent":{"!description":"Removes a content from the aggregation named <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"setMinWidth":{"!description":"Setter for property <code>minWidth<\/code>.","!type":"fn(sMinWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Dialog","!category":"function"},"setDefaultButton":{"!description":"Setter for the associated <code>defaultButton<\/code>.","!type":"fn(oDefaultButton: sap.ui.commons.Button) -> sap.ui.commons.Dialog","!category":"function"},"setMinHeight":{"!description":"Setter for property <code>minHeight<\/code>.","!type":"fn(sMinHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Dialog","!category":"function"},"setScrollTop":{"!description":"Setter for property <code>scrollTop<\/code>.\n\nDefault value is <code>0<\/code>.","!type":"fn(iScrollTop: Number) -> sap.ui.commons.Dialog","!category":"function"},"getMaxWidth":{"!description":"Getter for property <code>maxWidth<\/code>.\n\n\nMaximum outer width of the dialog window. If set, neither the user nor some layout settings can make the window larger.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"destroyContent":{"!description":"Destroys all the content in the aggregation\nnamed <code>content<\/code>.","!type":"fn() -> sap.ui.commons.Dialog","!category":"function"},"getHeight":{"!description":"Getter for property <code>height<\/code>.\n\n\nOuter height of dialog window. When not set and not constrained by one of the height parameters (minHeight/maxHeight), the window size is automatically adapted to the content.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"destroyButtons":{"!description":"Destroys all the buttons in the aggregation\nnamed <code>buttons<\/code>.","!type":"fn() -> sap.ui.commons.Dialog","!category":"function"},"getScrollTop":{"!description":"Getter for property <code>scrollTop<\/code>.\n\n\nScroll position from top to bottom. \"0\" means topmost position.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function"},"setInitialFocus":{"!description":"Setter for the associated <code>initialFocus<\/code>.","!type":"fn(oInitialFocus: sap.ui.core.Control) -> sap.ui.commons.Dialog","!category":"function"},"!category":"class","indexOfButton":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>buttons<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oButton: sap.ui.core.Control) -> Number","!category":"function"},"getButtons":{"!description":"Getter for aggregation <code>buttons<\/code>.\n\nAggregating the buttons to display at the bottom of the dialog, for example OK and Cancel. Association defaultButton can be used for one of the defined buttons.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Dialog","!category":"function"},"setMaxWidth":{"!description":"Setter for property <code>maxWidth<\/code>.","!type":"fn(sMaxWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Dialog","!category":"function"},"getInitialFocus":{"!description":"Id of the element which is the current target of the <code>initialFocus<\/code> association, or null.\n\n\nDefines the control that shall get the focus when the dialog is opened.","!type":"fn() -> sap.ui.core.Control","!category":"function"},"getModal":{"!description":"Getter for property <code>modal<\/code>.\n\nSpecify whether the dialog should be modal, or not. In case of <code>true<\/code> the focus is kept inside the dialog.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getContentBorderDesign":{"!description":"Getter for property <code>contentBorderDesign<\/code>.\n\n\nBorder design is theme-dependent.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.ui.commons.enums.BorderDesign","!category":"function"},"attachClosed":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'closed' event of this <code>sap.ui.commons.Dialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.Dialog<\/code> itself.\n\n\nEvent is fired when the dialog has been closed (after closing-animation etc.). Event parameters provide information about last position and last size.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Dialog","!category":"function"},"isOpen":{"!description":"Returns whether the Dialog is open (this includes opening and closing animations). For more detailed information about the current state check Dialog.getOpenState().","!type":"fn() -> Boolean","!category":"function"},"removeAllButtons":{"!description":"Removes all the controls in the aggregation named <code>buttons<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"insertButton":{"!description":"Inserts a button into the aggregation named <code>buttons<\/code>.","!type":"fn(oButton: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.Dialog","!category":"function"},"!description":"An interactive window appearing on request displaying information to the user. The API supports features such as popups with fixed sizes, popups with unlimited width, scrolling bars for large windows, and control nesting (for example, a drop-down list can be included in the window).","insertContent":{"!description":"Inserts a content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.Dialog","!category":"function"},"addButton":{"!description":"Adds some button into the aggregation named <code>buttons<\/code>.","!type":"fn(oButton: sap.ui.core.Control) -> sap.ui.commons.Dialog","!category":"function"},"setShowCloseButton":{"!description":"Setter for property <code>showCloseButton<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowCloseButton: Boolean) -> sap.ui.commons.Dialog","!category":"function"},"setResizable":{"!description":"Setter for property <code>resizable<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bResizable: Boolean) -> sap.ui.commons.Dialog","!category":"function"},"getMinHeight":{"!description":"Getter for property <code>minHeight<\/code>.\n\n\nMinimum outer height of the dialog window. When set, neither the user nor some layout settings can make the window smaller.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setContentBorderDesign":{"!description":"Setter for property <code>contentBorderDesign<\/code>.\n\nDefault value is <code>None<\/code>.","!type":"fn(sContentBorderDesign: sap.ui.commons.enums.BorderDesign) -> sap.ui.commons.Dialog","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Dialog.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.TreeNode":{"removeAllNodes":{"!description":"Removes all the controls in the aggregation named <code>nodes<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.TreeNode]","!category":"function"},"setSelectable":{"!description":"Redefinition of Setter for property <code>selectable<\/code> for validation purpose.\n\nDefault value is <code>true<\/code>","!type":"fn(bSelectable: Boolean) -> sap.ui.commons.TreeNode","!category":"function"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"getExpanded":{"!description":"Getter for property <code>expanded<\/code>.\n\nNode is expanded\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"destroyNodes":{"!description":"Destroys all the nodes in the aggregation\nnamed <code>nodes<\/code>.","!type":"fn() -> sap.ui.commons.TreeNode","!category":"function"},"setText":{"!description":"Setter for property <code>text<\/code>.","!type":"fn(sText: String) -> sap.ui.commons.TreeNode","!category":"function"},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"getNodes":{"!description":"Getter for aggregation <code>nodes<\/code>.\n\nSubnodes for the current node","!type":"fn() -> [sap.ui.commons.TreeNode]","!category":"function"},"setHasExpander":{"!description":"Setter for property <code>hasExpander<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bHasExpander: Boolean) -> sap.ui.commons.TreeNode","!category":"function"},"getIcon":{"!description":"Getter for property <code>icon<\/code>.\n\nIcon to display in front of the node","!type":"fn() -> sap.ui.core.URI","!category":"function"},"attachSelected":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'selected' event of this <code>sap.ui.commons.TreeNode<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.TreeNode<\/code> itself.\n\nNode is selected","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.TreeNode","!category":"function"},"getText":{"!description":"Getter for property <code>text<\/code>.\n\nNode text","!type":"fn() -> String","!category":"function"},"getAriaDescribedBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaDescribedBy<\/code> association.\n\nAssociation to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"detachSelected":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'selected' event of this <code>sap.ui.commons.TreeNode<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.TreeNode","!category":"function"},"fireSelected":{"!description":"Fire event selected to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.commons.TreeNode","!category":"function"},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.TreeNode","!category":"function"},"removeNode":{"!description":"Removes a node from the aggregation named <code>nodes<\/code>.","!type":"fn(vNode: Number | String | sap.ui.commons.TreeNode) -> sap.ui.commons.TreeNode","!category":"function"},"!category":"class","setIsSelected":{"!description":"Redefinition of Setter for property <code>isSelected<\/code> for validation purpose\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(bIsSelected: Boolean) -> sap.ui.commons.TreeNode","!category":"function"},"expand":{"!description":"Expands the node","!type":"fn(bExpandChildren: Boolean)","!category":"function"},"getAriaLabelledBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaLabelledBy<\/code> association.\n\nAssociation to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getIsSelected":{"!description":"Getter for property <code>isSelected<\/code>.\n\nNode is selected\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"collapse":{"!description":"Collapses the node","!type":"fn(bCollapseChildren: Boolean)","!category":"function"},"select":{"!description":"Select the node, and if any, deselects the previously selected node","!type":"fn(bSuppressEvent: Boolean, bDeselectOtherNodes: Boolean)","!category":"function"},"insertNode":{"!description":"Inserts a node into the aggregation named <code>nodes<\/code>.","!type":"fn(oNode: sap.ui.commons.TreeNode, iIndex: Number) -> sap.ui.commons.TreeNode","!category":"function"},"fireToggleOpenState":{"!description":"Fire event toggleOpenState to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'opened' of type <code>boolean<\/code>Node has been opened if true<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.TreeNode","!category":"function"},"getSelectable":{"!description":"Getter for property <code>selectable<\/code>.\n\nThe node is selectable. If true, clicking on the node text triggers \"selected\" event\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getHasExpander":{"!description":"Getter for property <code>hasExpander<\/code>.\n\nShould the node has an expander.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"detachToggleOpenState":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'toggleOpenState' event of this <code>sap.ui.commons.TreeNode<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.TreeNode","!category":"function"},"indexOfNode":{"!description":"Checks for the provided <code>sap.ui.commons.TreeNode<\/code> in the aggregation named <code>nodes<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oNode: sap.ui.commons.TreeNode) -> Number","!category":"function"},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.TreeNode","!category":"function"},"!description":"Tree node element","setExpanded":{"!description":"Setter for property <code>expanded<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bExpanded: Boolean) -> sap.ui.commons.TreeNode","!category":"function"},"addNode":{"!description":"Adds some node into the aggregation named <code>nodes<\/code>.","!type":"fn(oNode: sap.ui.commons.TreeNode) -> sap.ui.commons.TreeNode","!category":"function"},"attachToggleOpenState":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'toggleOpenState' event of this <code>sap.ui.commons.TreeNode<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.TreeNode<\/code> itself.\n\nNode state has changed.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.TreeNode","!category":"function"},"setIcon":{"!description":"Setter for property <code>icon<\/code>.","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.commons.TreeNode","!category":"function"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.TreeNode.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.layout.ResponsiveFlowLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>This is a layout where several controls can be added. These controls are blown up to fit a whole line. If the window resizes the controls are moved between the lines and resized again.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.ResponsiveFlowLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.layout.ResponsiveFlowLayout"},"sap.ui.commons.ListBox":{"getVisibleItems":{"!description":"Getter for property <code>visibleItems<\/code>.\n\nThe ListBox height in number of items that are initially displayed without scrolling. This setting overwrites height\nsettings in terms of CSS size that have been made. When the items have different heights, the height of the first item is used for all\nother item height calculations. Note that if there are one or more separators between the visible ListBox items, the displayed items\nmight not relate 1:1 to the initially specified number of items. When the value is retrieved, it equals the previously set value if it was set;\notherwise, it will be the number of items completely fitting into the ListBox without scrolling in the case the control was already rendered.\nNote that if the control was not rendered, the behavior will be undefined, it may return -1 or any other number.","!type":"fn() -> Number","!category":"function"},"removeItem":{"!description":"Removes a item from the aggregation named <code>items<\/code>.","!type":"fn(vItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item","!category":"function"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation named <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oItem: sap.ui.core.Item) -> Number","!category":"function"},"setEditable":{"!description":"Setter for property <code>editable<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEditable: Boolean) -> sap.ui.commons.ListBox","!category":"function"},"setItems":{"!description":"Allows setting the list items as array for this instance of ListBox.","!type":"fn(aItems: [sap.ui.core.ListItem], bDestroyItems: Boolean) -> sap.ui.commons.ListBox","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nControl width as common CSS-size (px or % as unit, for example).","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getAriaLabelledBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaLabelledBy<\/code> association.\n\nAssociation to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setVisibleItems":{"!description":"Makes the ListBox render with a height that allows it to display exactly the given number of items.","!type":"fn(iItemCount: Number) -> sap.ui.commons.ListBox","!category":"function"},"getEditable":{"!description":"Getter for property <code>editable<\/code>.\n\nValue \"true\" makes the list box interactive.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setDisplayIcons":{"!description":"Setter for property <code>displayIcons<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bDisplayIcons: Boolean) -> sap.ui.commons.ListBox","!category":"function"},"setValueTextAlign":{"!description":"Setter for property <code>valueTextAlign<\/code>.\n\nDefault value is <code>Begin<\/code>.","!type":"fn(sValueTextAlign: sap.ui.core.TextAlign) -> sap.ui.commons.ListBox","!category":"function"},"getMinWidth":{"!description":"Getter for property <code>minWidth<\/code>.\n\nThe minimum width of the ListBox. If not set, there is no minimum width.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getSelectedIndices":{"!description":"Zero-based indices of selected items, wrapped in an array. An empty array means \"no selection\".","!type":"fn() -> [Number]","!category":"function"},"removeSelectedIndex":{"!description":"Removes the given index from this selection. When the index is invalid or not selected, the call is ignored.","!type":"fn(iIndex: Number) -> sap.ui.commons.ListBox","!category":"function"},"scrollToIndex":{"!description":"If the ListBox has a scroll bar because the number of items is larger than the number of visible items, this method scrolls to the item with the given index. If there are enough items, this item will then appear at the topmost visible position in the ListBox. If bLazy is true, it only scrolls as far as required to make the item visible.\nSetting the scrollTop property and calling scrollToIndex are two operations influencing the same \"physical\" property, so the last call \"wins\".","!type":"fn(iIndex: Number, bLazy: Boolean) -> sap.ui.commons.ListBox","!category":"function"},"setDisplaySecondaryValues":{"!description":"Setter for property <code>displaySecondaryValues<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bDisplaySecondaryValues: Boolean) -> sap.ui.commons.ListBox","!category":"function"},"getDisplayIcons":{"!description":"Getter for property <code>displayIcons<\/code>.\n\nDefines whether the icons of the list items shall also be displayed. Enabling icons requires some space to be reserved for them. Displaying icons can also\ninfluence the width and height of a single item, which affects the overall height of the ListBox when defined in number of items.\nNote that the number of icons that can be displayed in the ListBox depends on the size of the icons themselves and of the total ListBox height.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.ListBox","!category":"function"},"isIndexSelected":{"!description":"Returns whether the given index is selected.","!type":"fn(iIndex: Number) -> Boolean","!category":"function"},"setAllowMultiSelect":{"!description":"Setter for property <code>allowMultiSelect<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bAllowMultiSelect: Boolean) -> sap.ui.commons.ListBox","!category":"function"},"setSelectedKeys":{"!description":"Keys of the items to be selected, wrapped in an array. An empty array means no selection. When multiple selection is disabled,\nand multiple keys are given, the selection is set to the item with the first valid key in the given array. Any invalid keys are ignored.\nThe previous selection is replaced in any case.","!type":"fn(aSelectedKeys: [String]) -> sap.ui.commons.ListBox","!category":"function"},"setHeight":{"!description":"Sets the height of this ListBox in CSS units","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.ListBox","!category":"function"},"getSelectedIndex":{"!description":"Zero-based index of selected item. Index value for no selection is -1. When multiple selection is enabled and multiple items are selected, the method returns the first selected item.","!type":"fn() -> Number","!category":"function"},"!proto":"sap.ui.core.Control","getEnabled":{"!description":"Getter for property <code>enabled<\/code>.\n\nDisabled controls have another color display depending on custom settings.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getAllowMultiSelect":{"!description":"Getter for property <code>allowMultiSelect<\/code>.\n\nSpecifies whether multiple selection is allowed.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setMinWidth":{"!description":"Setter for property <code>minWidth<\/code>.","!type":"fn(sMinWidth: sap.ui.core.CSSSize) -> sap.ui.commons.ListBox","!category":"function"},"addItem":{"!description":"Adds some item into the aggregation named <code>items<\/code>.","!type":"fn(oItem: sap.ui.core.Item) -> sap.ui.commons.ListBox","!category":"function"},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"attachSelect":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'select' event of this <code>sap.ui.commons.ListBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.ListBox<\/code> itself.\n\nEvent is fired when selection is changed by user interaction.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.ListBox","!category":"function"},"getDisplaySecondaryValues":{"!description":"Getter for property <code>displaySecondaryValues<\/code>.\n\nSpecifies whether the text values from the additionalText property (see sap.ui.core.ListItems) shall be displayed.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setScrollTop":{"!description":"Positions the ListBox contents that are scrolled-down by the given number of pixels","!type":"fn(iScrollTop: Number) -> sap.ui.commons.ListBox","!category":"function"},"getMaxWidth":{"!description":"Getter for property <code>maxWidth<\/code>.\n\nThe maximum width of the ListBox. If not set, there is no maximum width.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getHeight":{"!description":"Getter for property <code>height<\/code>.\n\nControl height as common CSS-size (px or % as unit, for example).\nThe setting overrides any definitions made for the setVisibleItems() method.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getAriaDescribedBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaDescribedBy<\/code> association.\n\nAssociation to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setSecondaryValueTextAlign":{"!description":"Setter for property <code>secondaryValueTextAlign<\/code>.\n\nDefault value is <code>Begin<\/code>.","!type":"fn(sSecondaryValueTextAlign: sap.ui.core.TextAlign) -> sap.ui.commons.ListBox","!category":"function"},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.ListBox","!category":"function"},"getScrollTop":{"!description":"Returns how many pixels the ListBox contents are currently scrolled down","!type":"fn() -> Number","!category":"function"},"!category":"class","setEnabled":{"!description":"Setter for property <code>enabled<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.ListBox","!category":"function"},"setWidth":{"!description":"Setter for property width.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.ListBox","!category":"function"},"setMaxWidth":{"!description":"Setter for property <code>maxWidth<\/code>.","!type":"fn(sMaxWidth: sap.ui.core.CSSSize) -> sap.ui.commons.ListBox","!category":"function"},"getValueTextAlign":{"!description":"Getter for property <code>valueTextAlign<\/code>.\n\nThe text alignment in the primary ListBox column.\n\nDefault value is <code>Begin<\/code>.","!type":"fn() -> sap.ui.core.TextAlign","!category":"function"},"fireSelect":{"!description":"Fire event select to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'id' of type <code>string<\/code>ID of the ListBox which triggered the event.<\/li>\n<li>'selectedIndex' of type <code>int<\/code>The currently selected index of the ListBox. In the case of multiple selection, this is exactly one of the selected indices - the one whose selection has triggered the selection change; to get all currently selected indices, use selectedIndices.<\/li>\n<li>'selectedItem' of type <code>sap.ui.core.Item<\/code>The currently selected item of the ListBox. In the case of multiple selection, this is exactly one of the selected items - the one whose selection has triggered the selection change.<\/li>\n<li>'selectedIndices' of type <code>int[]<\/code>Array containing the indices which are selected.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.ListBox","!category":"function"},"clearSelection":{"!description":"Removes complete selection.","!type":"fn() -> sap.ui.commons.ListBox","!category":"function"},"detachSelect":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'select' event of this <code>sap.ui.commons.ListBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.ListBox","!category":"function"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getSecondaryValueTextAlign":{"!description":"Getter for property <code>secondaryValueTextAlign<\/code>.\n\nThe text alignment in the secondary ListBox text column (if available).\n\nDefault value is <code>Begin<\/code>.","!type":"fn() -> sap.ui.core.TextAlign","!category":"function"},"getSelectedItem":{"!description":"Returns selected item. When no item is selected, \"null\" is returned. When multi-selection is enabled and multiple items are selected, only the first selected item is returned.","!type":"fn() -> sap.ui.core.Item","!category":"function"},"setSelectedIndices":{"!description":"Zero-based indices of selected items, wrapped in an array. An empty array means \"no selection\".\nWhen multiple selection is disabled and multiple items are given, the selection is set to the index of the first valid index in the given array.\nAny invalid indices are ignored.\nThe previous selection is in any case replaced.","!type":"fn(aSelectedIndices: [Number]) -> sap.ui.commons.ListBox","!category":"function"},"getSelectedItems":{"!description":"Returns an array containing the selected items. In the case of no selection, an empty array is returned.","!type":"fn() -> [sap.ui.core.Item]","!category":"function"},"!description":"Provides a list of items from which users can choose an item. For the design of the list box, features such as defining the list box height,\nfixing the number of visible items, choosing one item to be the item that is marked by default when the list box is shown, or a scroll bar for large list boxes\nare available.","getItems":{"!description":"Getter for aggregation <code>items<\/code>.\n\nAggregation of items to be displayed. Must be either of type sap.ui.core.ListItem or sap.ui.core.SeparatorItem.","!type":"fn() -> [sap.ui.core.Item]","!category":"function"},"addSelectedIndex":{"!description":"Adds the given index to current selection. When multiple selection is disabled, this replaces the current selection. When the given index is invalid, the call is ignored.","!type":"fn(iSelectedIndex: Number) -> sap.ui.commons.ListBox","!category":"function"},"addSelectedIndices":{"!description":"Adds the given indices to selection. Any invalid indices are ignored.","!type":"fn(aSelectedIndices: [Number]) -> sap.ui.commons.ListBox","!category":"function"},"destroyItems":{"!description":"Destroys all the items in the aggregation\nnamed <code>items<\/code>.","!type":"fn() -> sap.ui.commons.ListBox","!category":"function"},"getSelectedKeys":{"!description":"Returns the keys of the selected items in an array. If a selected item does not have a key, the respective array entry will be undefined.","!type":"fn() -> [String]","!category":"function"},"removeAllItems":{"!description":"Removes all the controls in the aggregation named <code>items<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Item]","!category":"function"},"setSelectedIndex":{"!description":"Sets the zero-based index of the currently selected item. This method removes any previous selections. When the given index is invalid, the call is ignored.","!type":"fn(iSelectedIndex: Number) -> sap.ui.commons.ListBox","!category":"function"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"insertItem":{"!description":"Inserts a item into the aggregation named <code>items<\/code>.","!type":"fn(oItem: sap.ui.core.Item, iIndex: Number) -> sap.ui.commons.ListBox","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ListBox.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.RowRepeaterFilter":{"setFilters":{"!description":"Setter for property <code>filters<\/code>.","!type":"fn(oFilters: Object) -> sap.ui.commons.RowRepeaterFilter","!category":"function"},"getText":{"!description":"Getter for property <code>text<\/code>.\n\nThe filter title if needed for display.","!type":"fn() -> String","!category":"function"},"!description":"This element is used by the RowRepeater and allows to define a filter in this context along with the related data such as a text and an icon.","!category":"class","setIcon":{"!description":"Setter for property <code>icon<\/code>.","!type":"fn(sIcon: String) -> sap.ui.commons.RowRepeaterFilter","!category":"function"},"getFilters":{"!description":"Getter for property <code>filters<\/code>.\n\nThe set of filter objects.","!type":"fn() -> Object","!category":"function"},"setText":{"!description":"Setter for property <code>text<\/code>.","!type":"fn(sText: String) -> sap.ui.commons.RowRepeaterFilter","!category":"function"},"getIcon":{"!description":"Getter for property <code>icon<\/code>.\n\nThe filter icon if needed for display.","!type":"fn() -> String","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RowRepeaterFilter.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Element"},"sap.ui.commons.layout.HAlign":{"Right":{"!description":"\nRight aligned, regardless of the current locale's writing direction.","!type":"String","!category":"enum"},"End":{"!description":"\nAligned towards the end of a line, in the current locale's writing direction.","!type":"String","!category":"enum"},"!description":"Horizontal alignment, e.g. of a layout cell's content within the cell's borders.\nNote that some values depend on the current locale's writing direction while\nothers do not.","!category":"static class","Center":{"!description":"\nHorizontally centered.","!type":"String","!category":"enum"},"Begin":{"!description":"\nAligned towards the beginning of a line, in the current locale's writing direction.","!type":"String","!category":"enum"},"Left":{"!description":"\nLeft aligned, regardless of the current locale's writing direction.","!type":"String","!category":"enum"}},"sap.ui.commons.TextArea_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TextArea with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.TextArea"},"sap.ui.commons.HorizontalDividerHeight":{"Medium":{"!description":"Divider gets a medium top and bottom margin.","!type":"String","!category":"enum"},"!description":"Enumeration of possible HorizontalDivider height settings.","Large":{"!description":"Divider gets a large top and bottom margin.","!type":"String","!category":"enum"},"!category":"static class","Ruleheight":{"!description":"Divider gets no top and bottom margin.","!type":"String","!category":"enum"},"Small":{"!description":"Divider gets a small top and bottom margin.","!type":"String","!category":"enum"}},"sap.ui.commons.layout.VerticalLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.VerticalLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.VerticalLayout.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.VerticalLayout"},"sap.ui.commons.ApplicationHeader_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ApplicationHeader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ApplicationHeader"},"sap.ui.commons.ApplicationHeader":{"detachLogoff":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'logoff' event of this <code>sap.ui.commons.ApplicationHeader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.ApplicationHeader","!category":"function"},"getDisplayLogoff":{"!description":"Getter for property <code>displayLogoff<\/code>.\n\nIf set to true, the logoff area will be displayed at the right hand side of the application header.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getLogoText":{"!description":"Getter for property <code>logoText<\/code>.\n\nThe text that will be displayed beside the logo in the application header. This property is optional.","!type":"fn() -> String","!category":"function"},"getLogoSrc":{"!description":"Getter for property <code>logoSrc<\/code>.\n\nPath (src) to the logo icon to be displayed in the application header.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"fireLogoff":{"!description":"Fire event logoff to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.commons.ApplicationHeader","!category":"function"},"attachLogoff":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'logoff' event of this <code>sap.ui.commons.ApplicationHeader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.ApplicationHeader<\/code> itself.\n\nFires an event to log off the user from the application.\nNo parameters.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.ApplicationHeader","!category":"function"},"setDisplayWelcome":{"!description":"Setter for property <code>displayWelcome<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bDisplayWelcome: Boolean) -> sap.ui.commons.ApplicationHeader","!category":"function"},"!description":"The application header control stands on the top of any application page. It consists basically of 4 areas. Logo area/Function area provided by application/Search area/Logout area","getDisplayWelcome":{"!description":"Getter for property <code>displayWelcome<\/code>.\n\nBy default, set to true and dislpays the welcome text\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setUserName":{"!description":"Setter for property <code>userName<\/code>.","!type":"fn(sUserName: String) -> sap.ui.commons.ApplicationHeader","!category":"function"},"!category":"class","setDisplayLogoff":{"!description":"Setter for property <code>displayLogoff<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bDisplayLogoff: Boolean) -> sap.ui.commons.ApplicationHeader","!category":"function"},"setLogoSrc":{"!description":"Setter for property <code>logoSrc<\/code>.","!type":"fn(sLogoSrc: sap.ui.core.URI) -> sap.ui.commons.ApplicationHeader","!category":"function"},"setLogoText":{"!description":"Setter for property <code>logoText<\/code>.","!type":"fn(sLogoText: String) -> sap.ui.commons.ApplicationHeader","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ApplicationHeader.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"getUserName":{"!description":"Getter for property <code>userName<\/code>.\n\nUser name that will be displayed beside the welcome text","!type":"fn() -> String","!category":"function"}},"sap.ui.commons.SegmentedButton":{"fireSelect":{"!description":"Fire event select to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'selectedButtonId' of type <code>string<\/code>Id of selected ToggleButton<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.SegmentedButton","!category":"function"},"getSelectedButton":{"!description":"Id of the element which is the current target of the <code>selectedButton<\/code> association, or null.\n\nSelected Button","!type":"fn() -> sap.ui.commons.Button","!category":"function"},"getEnabled":{"!description":"Getter for property <code>enabled<\/code>.\n\nenabled\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"detachSelect":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'select' event of this <code>sap.ui.commons.SegmentedButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.SegmentedButton","!category":"function"},"removeButton":{"!description":"Removes a button from the aggregation named <code>buttons<\/code>.","!type":"fn(vButton: Number | String | sap.ui.commons.Button) -> sap.ui.commons.Button","!category":"function"},"attachSelect":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'select' event of this <code>sap.ui.commons.SegmentedButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.SegmentedButton<\/code> itself.\n\nEvent fired when button selected","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.SegmentedButton","!category":"function"},"removeAllButtons":{"!description":"Removes all the controls in the aggregation named <code>buttons<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.Button]","!category":"function"},"insertButton":{"!description":"Inserts a button into the aggregation named <code>buttons<\/code>.","!type":"fn(oButton: sap.ui.commons.Button, iIndex: Number) -> sap.ui.commons.SegmentedButton","!category":"function"},"_rerenderButtons":{"!description":"Rerendering of the Buttons","!type":"fn()","!category":"function"},"!description":"The SegmentedButton provides a group of multiple buttons. Only one button can be active. The behaviour is more ore less like a radio button group.","destroyButtons":{"!description":"Destroys all the buttons in the aggregation\nnamed <code>buttons<\/code>.","!type":"fn() -> sap.ui.commons.SegmentedButton","!category":"function"},"addButton":{"!description":"Adds some button into the aggregation named <code>buttons<\/code>.","!type":"fn(oButton: sap.ui.commons.Button) -> sap.ui.commons.SegmentedButton","!category":"function"},"!category":"class","setEnabled":{"!description":"Setter for property <code>enabled<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.SegmentedButton","!category":"function"},"indexOfButton":{"!description":"Checks for the provided <code>sap.ui.commons.Button<\/code> in the aggregation named <code>buttons<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oButton: sap.ui.commons.Button) -> Number","!category":"function"},"setSelectedButton":{"!description":"Setter for the associated <code>selectedButton<\/code>.","!type":"fn(oSelectedButton: sap.ui.commons.Button) -> sap.ui.commons.SegmentedButton","!category":"function"},"getButtons":{"!description":"Getter for aggregation <code>buttons<\/code>.\n\nButtons","!type":"fn() -> [sap.ui.commons.Button]","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.SegmentedButton.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.RichTooltip":{"onAfterRendering":{"!description":"Calculates the height of the RichTooltip to set a proper min-height.\nAdditionally the ARIA attributes are set to the corresponding elements.","!type":"fn()","!category":"function"},"setValueStateText":{"!description":"This sets an individual text for the ValueState of the parent element of the RichTooltip.","!type":"fn(sText: String) -> sap.ui.commons.RichTooltip","!category":"function"},"setImageAltText":{"!description":"Setter for property <code>imageAltText<\/code>.","!type":"fn(sImageAltText: String) -> sap.ui.commons.RichTooltip","!category":"function"},"getImageSrc":{"!description":"Getter for property <code>imageSrc<\/code>.\n\nIf RichTooltip contains an image, this property is used to define the source path.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"!description":"\nIs used to provide tool tips that can have long text, image and title. This tool tip extends the TooltipBase.","setTitle":{"!description":"Setter for property <code>title<\/code>.","!type":"fn(sTitle: String) -> sap.ui.commons.RichTooltip","!category":"function"},"getValueStateText":{"!description":"This returns the previously set text. Since a FormattedTextView is used for\nrendering and stuff the corresponding property of the FormattedTextView is\nbeing read and returned. If no text was set an empty string is being\nreturned.","!type":"fn() -> String","!category":"function"},"setImageSrc":{"!description":"Setter for property <code>imageSrc<\/code>.","!type":"fn(sImageSrc: sap.ui.core.URI) -> sap.ui.commons.RichTooltip","!category":"function"},"!category":"class","getTitle":{"!description":"Getter for property <code>title<\/code>.\n\nTool tip title to be displayed in the header.","!type":"fn() -> String","!category":"function"},"getImageAltText":{"!description":"Getter for property <code>imageAltText<\/code>.\n\nThis is the alt text for the image","!type":"fn() -> String","!category":"function"},"!proto":"sap.ui.core.TooltipBase","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RichTooltip.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.form.Form":{"getVisible":{"!description":"Getter for property <code>visible<\/code>.\nInvisible Forms are not rendered.\n\nDefault value is <code>true<\/code>","!type":"fn() -> Boolean","!category":"function"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Form control.\nHolder for form control to be rendered in a specific form layout.\nA Form supports VariantLayoutData for it's conent to allow a simple switching of Layouts.","setVisible":{"!description":"Setter for property <code>visible<\/code>.\n\nDefault value is <code>true<\/code>","!type":"fn(bVisible: Boolean) -> sap.ui.commons.form.Form","!category":"function"},"!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.Form.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.layout.form.Form"},"sap.ui.commons.FileUploaderParameter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the element sap.ui.unified.FileUploaderParameter of the library sap.ui.unified instead.<br>Represents a parameter for the FileUploader which is rendered as a hidden inputfield.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.FileUploaderParameter.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.unified.FileUploaderParameter"},"sap.ui.commons.ValueHelpField":{"setIconURL":{"!description":"Setter for property <code>iconURL<\/code>.","!type":"fn(sIconURL: sap.ui.core.URI) -> sap.ui.commons.ValueHelpField","!category":"function"},"attachValueHelpRequest":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'valueHelpRequest' event of this <code>sap.ui.commons.ValueHelpField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.ValueHelpField<\/code> itself.\n\nEvent which is fired when the ValueHelp is requested.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.ValueHelpField","!category":"function"},"setIconHoverURL":{"!description":"Setter for property <code>iconHoverURL<\/code>.","!type":"fn(sIconHoverURL: sap.ui.core.URI) -> sap.ui.commons.ValueHelpField","!category":"function"},"setIconDisabledURL":{"!description":"Setter for property <code>iconDisabledURL<\/code>.","!type":"fn(sIconDisabledURL: sap.ui.core.URI) -> sap.ui.commons.ValueHelpField","!category":"function"},"detachValueHelpRequest":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'valueHelpRequest' event of this <code>sap.ui.commons.ValueHelpField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.ValueHelpField","!category":"function"},"!description":"A TextField with an attached icon which triggeres an event.","fireValueHelpRequest":{"!description":"Fire event valueHelpRequest to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.commons.ValueHelpField","!category":"function"},"getIconURL":{"!description":"Getter for property <code>iconURL<\/code>.\n\nUrl of the standard icon for the value help. If no parameter is supplied the default icon image will be shown.\nThis can be an URI to an image or an icon font URI.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"!category":"class","getIconDisabledURL":{"!description":"Getter for property <code>iconDisabledURL<\/code>.\n\nURL of the icon for the value help when disabled. If no parameter is supplied the default icon image will be shown.\nIf a icon font icon is used, this property is ignored.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"getIconHoverURL":{"!description":"Getter for property <code>iconHoverURL<\/code>.\n\nURL of the icon for the value help when hovered. If no parameter is supplied the standard icon image will be shown.\nIf a icon font icon is used, this property is ignored.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"onsapshow":{"!description":"Handle F4 event","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"!proto":"sap.ui.commons.TextField","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ValueHelpField.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.MessageToast":{"setAnchorId":{"!description":"Setter for property <code>anchorId<\/code>.","!type":"fn(sAnchorId: String) -> sap.ui.commons.MessageToast","!category":"function"},"isIdle":{"!description":"Returns true if no message is being toasted.","!type":"fn() -> Boolean","!category":"function"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.4.0 A new messaging concept will be created in future. Therefore this control might be removed in one of the next versions.<br>Responsible for displaying the new incoming messages, one at the time, on top of the MessageBar.","attachNext":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'next' event of this <code>sap.ui.commons.MessageToast<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.MessageToast<\/code> itself.\n\nFired once the \"toast()\" method is over, so that the MessageBar can toast() another message if needed.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.MessageToast","!category":"function"},"getAnchorId":{"!description":"Getter for property <code>anchorId<\/code>.\n\nId of the anchor on top of which the MessageToast is to render.","!type":"fn() -> String","!category":"function"},"!category":"class","detachNext":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'next' event of this <code>sap.ui.commons.MessageToast<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.MessageToast","!category":"function"},"fireNext":{"!description":"Fire event next to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.commons.MessageToast","!category":"function"},"toast":{"!description":"This public API receives the list of Messages to be displayed,\nand re-render this Control if visible.\n\nTriggers the toasting of a message, on top of the MessageBar.\nIf no message is supplied, displays the \"Multiple new messages...\" message.","!type":"fn(oMessage: sap.ui.commons.Message, sAnchorId: String)","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.MessageToast.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Control"},"sap.ui.commons.InPlaceEdit":{"getContent":{"!description":"Getter for aggregation <code>content<\/code>.\n\nContent control of the InPlaceEdit.\nThe following controls are allowed:\nTextField, ComboBox, DropdownBox and Link","!type":"fn() -> sap.ui.core.Control","!category":"function"},"getDesign":{"!description":"Getter for property <code>design<\/code>.\n\nDefines the visual appearance of the control.\nCurrently this is not supported for Labels.\n\nDefault value is <code>Standard<\/code>.","!type":"fn() -> sap.ui.commons.TextViewDesign","!category":"function"},"detachLiveChange":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'liveChange' event of this <code>sap.ui.commons.InPlaceEdit<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.InPlaceEdit","!category":"function"},"setUndoEnabled":{"!description":"Setter for property <code>undoEnabled<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bUndoEnabled: Boolean) -> sap.ui.commons.InPlaceEdit","!category":"function"},"setContent":{"!description":"Setter for the aggregated <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.InPlaceEdit","!category":"function"},"getValueState":{"!description":"Getter for property <code>valueState<\/code>.\n\nVisualizes warnings or errors related to the InPlaceEdit. Possible values: Warning, Error, Success.\nIf the content control has a own valueState property this will be used.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.ui.core.ValueState","!category":"function"},"detachChange":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'change' event of this <code>sap.ui.commons.InPlaceEdit<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.InPlaceEdit","!category":"function"},"getTooltip":{"!description":"Returns the tooltip for this InPlaceEdit if any or an undefined value.\nThe tooltip can either be a simple string or a subclass of\n{@link sap.ui.core.TooltipBase}.\n\nCallers that are only interested in tooltips of type string (e.g. to render\nthem as a <code>title<\/code> attribute), should call the convenience method\n{@link #getTooltip_AsString} instead. If they want to get a tooltip text no\nmatter where it comes from (be it a string tooltip or the text from a TooltipBase\ninstance) then they could call {@link #getTooltip_Text} instead.\n\nIf a content control is assigned to the InPlaceEdit the tooltip of this control\nis used. A directly set tooltip to the InPlaceEdit is ignored in this case.","!type":"fn() -> String | sap.ui.core.TooltipBase","!category":"function"},"getUndoEnabled":{"!description":"Getter for property <code>undoEnabled<\/code>.\n\nIf undo is enabled after changing the text an undo button appears.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"destroyContent":{"!description":"Destroys the content in the aggregation\nnamed <code>content<\/code>.","!type":"fn() -> sap.ui.commons.InPlaceEdit","!category":"function"},"clearOldText":{"!description":"Clear the old text after a change to disable the undo functionality. If undoEnabled is false this has no effect.","!type":"fn()","!category":"function"},"!description":"The InPlaceEdit is a functionality to have text in display mode that can be changed in place.","fireLiveChange":{"!description":"Fire event liveChange to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'liveValue' of type <code>string<\/code>Current value of the Textfield.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.InPlaceEdit","!category":"function"},"setTooltip":{"!description":"Sets a new tooltip for this InPlaceEdit. The tooltip can either be a simple string\n(which in most cases will be rendered as the <code>title<\/code> attribute of this\nElement) or an instance of {@link sap.ui.core.TooltipBase}.\n\nIf a new tooltip is set, any previously set tooltip is deactivated.\n\nIf a content control is assigned to the InPlaceEdit the tooltip of this control\nis used. A directly set tooltip to the InPlaceEdit is ignored in this case.","!type":"fn(oTooltip: String | sap.ui.core.TooltipBase) -> sap.ui.commons.InPlaceEdit","!category":"function"},"setValueState":{"!description":"Setter for property <code>valueState<\/code>.\n\nDefault value is <code>None<\/code>.","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.commons.InPlaceEdit","!category":"function"},"attachLiveChange":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'liveChange' event of this <code>sap.ui.commons.InPlaceEdit<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.InPlaceEdit<\/code> itself.\n\nThis event if fired during typing into the InPlaceEdit and returns the currently entered value. This is not the content of the value property. The value property is only updated by ENTER and by leaving the control.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.InPlaceEdit","!category":"function"},"fireChange":{"!description":"Fire event change to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'newValue' of type <code>string<\/code>The new / changed value of the InPlaceEdit.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.InPlaceEdit","!category":"function"},"!category":"class","attachChange":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'change' event of this <code>sap.ui.commons.InPlaceEdit<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.InPlaceEdit<\/code> itself.\n\nEvent is fired when the text in the field has changed AND the focus leaves the InPlaceEdit or the Enter key is pressed.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.InPlaceEdit","!category":"function"},"setDesign":{"!description":"Setter for property <code>design<\/code>.\n\nDefault value is <code>Standard<\/code>.","!type":"fn(sDesign: sap.ui.commons.TextViewDesign) -> sap.ui.commons.InPlaceEdit","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.InPlaceEdit.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Control"},"sap.ui.commons.MessageList_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MessageList with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.MessageList"},"sap.ui.commons.form.SimpleForm":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Use the SimpleForm to create a form based on title, label and fields that are stacked in the content aggregation. Add Title to start a new FormContainer(Group). Add Label to start a new row in the container. Add Input/Display controls as needed. Use LayoutData to influence the layout for special cases in the Input/Display controls.","!category":"class","setLayout":{"!description":"Setter for property <code>layout<\/code>.\n\nDefault value is <code>ResponsiveLayout<\/code>","!type":"fn(oLayout: sap.ui.commons.form.SimpleFormLayout) -> sap.ui.commons.form.SimpleForm","!category":"function"},"getLayout":{"!description":"Getter for property <code>layout<\/code>.\nThe FormLayout that is used to render the SimpleForm\n\nDefault value is <code>ResponsiveLayout<\/code>","!type":"fn() -> sap.ui.commons.form.SimpleFormLayout","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.SimpleForm.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.layout.form.SimpleForm"},"sap.ui.commons.FileUploader":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the control sap.ui.unified.FileUploader of the library sap.ui.unified instead.<br>The framework generates an input field and a button with text \"Browse ...\". The API supports features such as on change uploads (the upload starts immediately after a file has been selected), file uploads with explicit calls, adjustable control sizes, text display after uploads, or tooltips containing complete file paths.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.FileUploader.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.unified.FileUploader"},"sap.ui.commons.RowRepeaterDesign":{"Standard":{"!description":"The RowRepeater header and footer elements, as well as the row container background, appear solid.","!type":"String","!category":"enum"},"!description":"Determines the visual design of a RowRepeater.","Transparent":{"!description":"The RowRepeater header and footer elements, as well as the row container background, appear transparent.","!type":"String","!category":"enum"},"BareShell":{"!description":"The RowRepeater will be displayed without header, toolbar or footer. Background will be transparent.","!type":"String","!category":"enum"},"!category":"static class"},"sap.ui.commons.ButtonStyle":{"Default":{"!description":"default style (no special styling).","!type":"String","!category":"enum"},"Emph":{"!description":"Button is emphasized.","!type":"String","!category":"enum"},"!description":"different styles for a button.","!category":"static class","Reject":{"!description":"Reject button (normally red).","!type":"String","!category":"enum"},"Accept":{"!description":"Accept button (normally green).","!type":"String","!category":"enum"}},"sap.ui.commons.TabStrip":{"removeTab":{"!description":"Removes a tab from the aggregation named <code>tabs<\/code>.","!type":"fn(vTab: Number | String | sap.ui.commons.Tab) -> sap.ui.commons.Tab","!category":"function"},"detachClose":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'close' event of this <code>sap.ui.commons.TabStrip<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.TabStrip","!category":"function"},"destroyTabs":{"!description":"Destroys all the tabs in the aggregation\nnamed <code>tabs<\/code>.","!type":"fn() -> sap.ui.commons.TabStrip","!category":"function"},"insertTab":{"!description":"Inserts a tab into the aggregation named <code>tabs<\/code>.","!type":"fn(oTab: sap.ui.commons.Tab, iIndex: Number) -> sap.ui.commons.TabStrip","!category":"function"},"getTabs":{"!description":"Getter for aggregation <code>tabs<\/code>.\n\nAggregating tabs contained in the tab strip.","!type":"fn() -> [sap.ui.commons.Tab]","!category":"function"},"attachSelect":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'select' event of this <code>sap.ui.commons.TabStrip<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.TabStrip<\/code> itself.\n\nEvent is fired when the user selects a tab.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.TabStrip","!category":"function"},"getHeight":{"!description":"Getter for property <code>height<\/code>.\n\nHeight includes tab bar and content area.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"!category":"class","getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nWidth includes tab bar and content area.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.TabStrip","!category":"function"},"fireSelect":{"!description":"Fire event select to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'index' of type <code>int<\/code>Index of the selected tab.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.TabStrip","!category":"function"},"indexOfTab":{"!description":"Checks for the provided <code>sap.ui.commons.Tab<\/code> in the aggregation named <code>tabs<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oTab: sap.ui.commons.Tab) -> Number","!category":"function"},"removeAllTabs":{"!description":"Removes all the controls in the aggregation named <code>tabs<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.Tab]","!category":"function"},"fireClose":{"!description":"Fire event close to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'index' of type <code>int<\/code>Index of the closed tab.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.TabStrip","!category":"function"},"detachSelect":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'select' event of this <code>sap.ui.commons.TabStrip<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.TabStrip","!category":"function"},"attachClose":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'close' event of this <code>sap.ui.commons.TabStrip<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.TabStrip<\/code> itself.\n\nEvent is fired when the user closes a tab.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.TabStrip","!category":"function"},"!description":"\nA container for tab controls which contain the content and generally other controls. The user switches between the tabs then to display the content.","setHeight":{"!description":"Setter for property <code>height<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.TabStrip","!category":"function"},"addTab":{"!description":"Adds some tab into the aggregation named <code>tabs<\/code>.","!type":"fn(oTab: sap.ui.commons.Tab) -> sap.ui.commons.TabStrip","!category":"function"},"closeTab":{"!description":"Close a tab. If the tab is selected, the next one will be selected. (If it's the last the previous one will be selected).\n\nThis method should be called if the close event is fired. It can not be called automatically because the consumer might need to run some logic before the tab is closed.","!type":"fn(iIndex: Number)","!category":"function"},"setSelectedIndex":{"!description":"Setter for property <code>selectedIndex<\/code>.\n\nDefault value is <code>0<\/code>.","!type":"fn(iSelectedIndex: Number) -> sap.ui.commons.TabStrip","!category":"function"},"getSelectedIndex":{"!description":"Getter for property <code>selectedIndex<\/code>.\n\nIndex of the currently selected tab.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function"},"createTab":{"!description":"Convenient method to add a tab with a text as title and a root control as content.","!type":"fn(sText: String, oContent: sap.ui.core.Control)","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.TabStrip.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.SplitterSize":{"!description":"A string type that represents subset of CSS size values. For the Splitter only px and % are allowed.","!category":"namespace"},"sap.ui.commons.MessageBar":{"getMaxListed":{"!description":"Getter for property <code>maxListed<\/code>.\n\nMaximum number of messages being display in the List before a scrollbar appears. Value '0' means no limit.\n\nDefault value is <code>7<\/code>.","!type":"fn() -> Number","!category":"function"},"setMaxListed":{"!description":"Setter for property <code>maxListed<\/code>.\n\nDefault value is <code>7<\/code>.","!type":"fn(iMaxListed: Number) -> sap.ui.commons.MessageBar","!category":"function"},"setVisible":{"!description":"Setter for property <code>visible<\/code>.\n\nDefault value is <code>true<\/code>\n\nThe default implementation of function \"setVisible()\" is enhanced \nin order to toggle the \"visibility:hidden;\" attribute over the control.","!type":"fn(bVisible: Boolean) -> sap.ui.commons.MessageBar","!category":"function"},"setAnchorSnapPoint":{"!description":"Setter for property <code>anchorSnapPoint<\/code>.\n\nDefault value is <code>begin top<\/code>.","!type":"fn(sAnchorSnapPoint: String) -> sap.ui.commons.MessageBar","!category":"function"},"getAnchorID":{"!description":"Getter for property <code>anchorID<\/code>.\n\nElement ID upon which the 'message bar' is to be initially positioned.\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function"},"setMaxToasted":{"!description":"Setter for property <code>maxToasted<\/code>.\n\nDefault value is <code>3<\/code>.","!type":"fn(iMaxToasted: Number) -> sap.ui.commons.MessageBar","!category":"function"},"getVisible":{"!description":"Getter for property <code>visible<\/code>.\n\nInvisible controls are not rendered.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.4.0 A new messaging concept will be created in future. Therefore this control might be removed in one of the next versions.<br>Creates an instance of a \"MessageBar\" Control, for displaying \"Message\"s.\nThere is no imposed limit on the number of \"MessageBar\"s that can be created, but using only 1 makes sense, specially if accessing it (via Ctl-m) becomes a necessity.","setAnchorID":{"!description":"Setter for property <code>anchorID<\/code>.\n\nDefault value is <code><\/code>.","!type":"fn(sAnchorID: String) -> sap.ui.commons.MessageBar","!category":"function"},"deleteAllMessages":{"!description":"Deletes all messages.","!type":"fn() -> sap.ui.commons.MessageBar","!category":"function"},"deleteMessages":{"!description":"This public API deletes a supplied list of messages.\nThe messageBar is to disappear should no message remains.","!type":"fn(aIds: [String])","!category":"function"},"getAnchorSnapPoint":{"!description":"Getter for property <code>anchorSnapPoint<\/code>.\n\nType: sap.ui.core.Popup.Dock\nSnapPoint of MessageBar over anchorId.\nNote: Use \"begin\" or \"end\" for RTL support.\nNote: \"center\" is not indicated, as positioning is only set once, either via the css \"left\" or the \"right\" attribute. Therefore a MessageBar will only be extended in one direction, as Messages come in.\n\nDefault value is <code>begin top<\/code>.","!type":"fn() -> String","!category":"function"},"getMaxToasted":{"!description":"Getter for property <code>maxToasted<\/code>.\n\nMaximum number of simultaneous messages being toasting-up in a row. Value '0' means this dynamic part of the feature is switched off.\n\nDefault value is <code>3<\/code>.","!type":"fn() -> Number","!category":"function"},"!category":"class","addMessages":{"!description":"This public API adds/updates a supplied list of messages.\nThe messageBar is to appear should at least one message exists.","!type":"fn(aAMessages: [sap.ui.commons.Message])","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.MessageBar.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.RadioButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RadioButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RadioButton"},"sap.ui.commons.Link":{"getEnabled":{"!description":"Getter for property <code>enabled<\/code>.\n\nWhether the link can be triggered by the user.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"firePress":{"!description":"Fire event press to attached listeners.\n\nListeners may prevent the default action of this event using the preventDefault-method on the event object.","!type":"fn(mArguments?: Map) -> Boolean","!category":"function"},"getTarget":{"!description":"Getter for property <code>target<\/code>.\n\n\nOptions are _self, _top, _blank, _parent, _search. Alternatively, a frame name can be entered.","!type":"fn() -> String","!category":"function"},"setText":{"!description":"Setter for property <code>text<\/code>.\n\nDefault value is <code><\/code>.","!type":"fn(sText: String) -> sap.ui.commons.Link","!category":"function"},"getHelpId":{"!description":"Getter for property <code>helpId<\/code>.\n\n\nUnique identifier used for help service.\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function"},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"setTarget":{"!description":"Setter for property <code>target<\/code>.","!type":"fn(sTarget: String) -> sap.ui.commons.Link","!category":"function"},"getText":{"!description":"Getter for property <code>text<\/code>.\n\n\nLink text to be displayed.\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function"},"getAriaDescribedBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaDescribedBy<\/code> association.\n\nAssociation to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.Link","!category":"function"},"!category":"class","setEnabled":{"!description":"Setter for property <code>enabled<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.Link","!category":"function"},"focus":{"!description":"Puts the focus to the link.","!type":"fn()","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nWidth of text link. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text defines the size.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getAriaLabelledBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaLabelledBy<\/code> association.\n\nAssociation to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Link","!category":"function"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"attachPress":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'press' event of this <code>sap.ui.commons.Link<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.Link<\/code> itself.\n\n\nEvent is fired when the user clicks the control.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Link","!category":"function"},"setHelpId":{"!description":"Setter for property <code>helpId<\/code>.\n\nDefault value is <code><\/code>.","!type":"fn(sHelpId: String) -> sap.ui.commons.Link","!category":"function"},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.Link","!category":"function"},"!description":"\nProvides an absolute or relative reference to an internal or external URL. The classical target parameters are supported.\nAnother usage scenario is triggering an action, for example to open a popup window. In both cases, the link is a hypertext link.","setHref":{"!description":"Setter for property <code>href<\/code>.","!type":"fn(sHref: sap.ui.core.URI) -> sap.ui.commons.Link","!category":"function"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"detachPress":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'press' event of this <code>sap.ui.commons.Link<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Link","!category":"function"},"getHref":{"!description":"Getter for property <code>href<\/code>.\n\nThe link target URI. Supports standard hyperlink behavior. If an action should be triggered, this should not be set, but instead an event handler for the \"press\" event should be registered.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Link.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.form.ResponsiveLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Renders a form with responsive layout. Internally the ResponsiveFlowLayout is used.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.ResponsiveLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.layout.form.ResponsiveLayout"},"sap.ui.commons.TextView":{"getTextDirection":{"!description":"Getter for property <code>textDirection<\/code>.\n\nAvailable options are LTR and RTL. Alternatively, the control can inherit the text direction from its parent control.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn() -> sap.ui.core.TextDirection","!category":"function"},"getSemanticColor":{"!description":"Getter for property <code>semanticColor<\/code>.\n\nSemantic color of the text View\n\nDefault value is <code>Default<\/code>.","!type":"fn() -> sap.ui.commons.TextViewColor","!category":"function"},"getEnabled":{"!description":"Getter for property <code>enabled<\/code>.\n\nWhen the control is disabled, it is greyed out and no longer focusable.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"setAccessibleRole":{"!description":"Setter for property <code>accessibleRole<\/code>.\n\nDefault value is <code>Document<\/code>.","!type":"fn(sAccessibleRole: sap.ui.core.AccessibleRole) -> sap.ui.commons.TextView","!category":"function"},"getDesign":{"!description":"Getter for property <code>design<\/code>.\n\nDefines the visual appearance of the control.\n\nDefault value is <code>Standard<\/code>.","!type":"fn() -> sap.ui.commons.TextViewDesign","!category":"function"},"setText":{"!description":"Setter for property <code>text<\/code>.\n\nDefault value is <code><\/code>.","!type":"fn(sText: String) -> sap.ui.commons.TextView","!category":"function"},"getHelpId":{"!description":"Getter for property <code>helpId<\/code>.\n\nUnique identifier used for help services.\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function"},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"getText":{"!description":"Getter for property <code>text<\/code>.\n\nText to be displayed.\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function"},"getAriaDescribedBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaDescribedBy<\/code> association.\n\nAssociation to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setWrapping":{"!description":"Setter for property <code>wrapping<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bWrapping: Boolean) -> sap.ui.commons.TextView","!category":"function"},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.TextView","!category":"function"},"!category":"class","setEnabled":{"!description":"Setter for property <code>enabled<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.TextView","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nWidth of the TextView","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getAriaLabelledBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaLabelledBy<\/code> association.\n\nAssociation to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.TextView","!category":"function"},"getWrapping":{"!description":"Getter for property <code>wrapping<\/code>.\n\nDisabled automatic wrapping of the text.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setTextDirection":{"!description":"Setter for property <code>textDirection<\/code>.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.ui.commons.TextView","!category":"function"},"setTextAlign":{"!description":"Setter for property <code>textAlign<\/code>.\n\nDefault value is <code>Begin<\/code>.","!type":"fn(sTextAlign: sap.ui.core.TextAlign) -> sap.ui.commons.TextView","!category":"function"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"unbindText":{"!description":"Unbinder for property <code>text<\/code>.","!type":"fn() -> sap.ui.commons.TextView","!category":"function"},"setHelpId":{"!description":"Setter for property <code>helpId<\/code>.\n\nDefault value is <code><\/code>.","!type":"fn(sHelpId: String) -> sap.ui.commons.TextView","!category":"function"},"bindText":{"!description":"Binder for property <code>text<\/code>.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.TextView","!category":"function"},"getTextAlign":{"!description":"Getter for property <code>textAlign<\/code>.\n\nSets the horizontal alignment of the text.\n\nDefault value is <code>Begin<\/code>.","!type":"fn() -> sap.ui.core.TextAlign","!category":"function"},"getAccessibleRole":{"!description":"Getter for property <code>accessibleRole<\/code>.\n\nThe ARIA role for the control.\n\nDefault value is <code>Document<\/code>.","!type":"fn() -> sap.ui.core.AccessibleRole","!category":"function"},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.TextView","!category":"function"},"!description":"Is used to display some continous text. The control can inherit the text direction from its parent control.","setSemanticColor":{"!description":"Setter for property <code>semanticColor<\/code>.\n\nDefault value is <code>Default<\/code>.","!type":"fn(sSemanticColor: sap.ui.commons.TextViewColor) -> sap.ui.commons.TextView","!category":"function"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setDesign":{"!description":"Setter for property <code>design<\/code>.\n\nDefault value is <code>Standard<\/code>.","!type":"fn(sDesign: sap.ui.commons.TextViewDesign) -> sap.ui.commons.TextView","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.TextView.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Control"},"sap.ui.commons.form.FormContainer":{"getVisible":{"!description":"Getter for property <code>visible<\/code>.\nInvisible FormContainers are not rendered.\n\nDefault value is <code>true<\/code>","!type":"fn() -> Boolean","!category":"function"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Used to group form elements.","setVisible":{"!description":"Setter for property <code>visible<\/code>.\n\nDefault value is <code>true<\/code>","!type":"fn(bVisible: Boolean) -> sap.ui.commons.form.FormContainer","!category":"function"},"!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.FormContainer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.layout.form.FormContainer"},"sap.ui.commons.RadioButton":{"getKey":{"!description":"Getter for property <code>key<\/code>.\n\nCan be used for subsequent actions","!type":"fn() -> String","!category":"function"},"getTextDirection":{"!description":"Getter for property <code>textDirection<\/code>.\n\n\nAvailable options are LTR and RTL. Alternatively, the control can inherit the text direction from its parent container.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn() -> sap.ui.core.TextDirection","!category":"function"},"getEnabled":{"!description":"Getter for property <code>enabled<\/code>.\n\n\nDisabled controls are displayed in another color, depending on the customer settings.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"setText":{"!description":"Setter for property <code>text<\/code>.","!type":"fn(sText: String) -> sap.ui.commons.RadioButton","!category":"function"},"getValueState":{"!description":"Getter for property <code>valueState<\/code>.\n\n\nEnumeration sap.ui.core.ValueState provides state values Error, Success, Warning, None\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.ui.core.ValueState","!category":"function"},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"attachSelect":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'select' event of this <code>sap.ui.commons.RadioButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.RadioButton<\/code> itself.\n\nEvent is triggered when the user makes a change on the radio button.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RadioButton","!category":"function"},"setKey":{"!description":"Setter for property <code>key<\/code>.","!type":"fn(sKey: String) -> sap.ui.commons.RadioButton","!category":"function"},"getText":{"!description":"Getter for property <code>text<\/code>.\n\nDefines the text displayed next to the radio button.","!type":"fn() -> String","!category":"function"},"getAriaDescribedBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaDescribedBy<\/code> association.\n\nAssociation to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setEditable":{"!description":"Setter for property <code>editable<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEditable: Boolean) -> sap.ui.commons.RadioButton","!category":"function"},"setValueState":{"!description":"Setter for property <code>valueState<\/code>.\n\nDefault value is <code>None<\/code>.","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.commons.RadioButton","!category":"function"},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.RadioButton","!category":"function"},"!category":"class","setEnabled":{"!description":"Setter for property <code>enabled<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.RadioButton","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nThe control width depends on the text length. Alternatively, CSS-sizes in % or px can be set.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getAriaLabelledBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaLabelledBy<\/code> association.\n\nAssociation to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.RadioButton","!category":"function"},"getGroupName":{"!description":"Getter for property <code>groupName<\/code>.\n\nName of the radio button group the current radio button belongs to. You can define a new name for the group.\nIf no new name is specified, this radio button belongs to the sapUiRbDefaultGroup per default. Default behavior of a radio button\nin a group is that when one of the radio buttons in a group is selected, all others are unselected.\n\nDefault value is <code>sapUiRbDefaultGroup<\/code>.","!type":"fn() -> String","!category":"function"},"setTextDirection":{"!description":"Setter for property <code>textDirection<\/code>.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.ui.commons.RadioButton","!category":"function"},"getEditable":{"!description":"Getter for property <code>editable<\/code>.\n\nSpecifies whether the user can select the radio button\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"fireSelect":{"!description":"Fire event select to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.commons.RadioButton","!category":"function"},"detachSelect":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'select' event of this <code>sap.ui.commons.RadioButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RadioButton","!category":"function"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.RadioButton","!category":"function"},"!description":"Consists of a round element and a descriptive text. Generally, you would create at least two radio button controls;\nby this, you provide a limited choice for the user. Radio buttons can trigger events.\nAvailable value states are \"Error\", \"None\", \"Success\", \"Warning\".","getSelected":{"!description":"Getter for property <code>selected<\/code>.\n\nSpecifies the select state of the radio button\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setSelected":{"!description":"Setter for property <code>selected<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bSelected: Boolean) -> sap.ui.commons.RadioButton","!category":"function"},"setGroupName":{"!description":"Setter for property <code>groupName<\/code>.\n\nDefault value is <code>sapUiRbDefaultGroup<\/code>.","!type":"fn(sGroupName: String) -> sap.ui.commons.RadioButton","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RadioButton.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.form.GridContainerData":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Grid layout specific properties for FormContainers.\nThe width and height properties of the elements are ignored since the witdh and heights are defined by the grid cells.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.GridContainerData.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.layout.form.GridContainerData"},"sap.ui.commons.layout.ResponsiveFlowLayoutData_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.ResponsiveFlowLayoutData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.ResponsiveFlowLayoutData.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.ResponsiveFlowLayoutData"},"sap.ui.commons.Toolbar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Toolbar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Toolbar"},"sap.ui.commons.ListBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ListBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ListBox"},"sap.ui.commons.Menu_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Menu with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.Menu.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Menu"},"sap.ui.commons.Button_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Button with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Button"},"sap.ui.commons.layout.MatrixLayoutCell":{"getPadding":{"!description":"Getter for property <code>padding<\/code>.\n\n\nDetermines the padding of the matrix layout cell's content within the\ncell's borders. The default value is appropriate for all cells in a\nform-like layout. Consider to remove the padding on the outer layout in\ncase of nesting.\n\nDefault value is <code>End<\/code>.","!type":"fn() -> sap.ui.commons.layout.Padding","!category":"function"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function"},"removeContent":{"!description":"Removes a content from the aggregation named <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"hasStyleClass":{"!description":"Returns true if the given style class string is valid and if this Element has this style class set via a previous call to addStyleClass().","!type":"fn(sStyleClass: String) -> Boolean","!category":"function"},"destroyContent":{"!description":"Destroys all the content in the aggregation\nnamed <code>content<\/code>.","!type":"fn() -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function"},"getSeparation":{"!description":"Getter for property <code>separation<\/code>.\n\n\nDetermines how a matrix layout cell is separated from its predecessor,\nvia a vertical gutter of variable width, with or without a vertical line.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.ui.commons.layout.Separation","!category":"function"},"setColSpan":{"!description":"Setter for property <code>colSpan<\/code>.\n\nDefault value is <code>1<\/code>.","!type":"fn(iColSpan: Number) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function"},"!category":"class","setSeparation":{"!description":"Setter for property <code>separation<\/code>.\n\nDefault value is <code>None<\/code>.","!type":"fn(sSeparation: sap.ui.commons.layout.Separation) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function"},"getRowSpan":{"!description":"Getter for property <code>rowSpan<\/code>.\n\nDetermines how many rows of the underlying grid structure are occupied by this matrix layout cell.\nIn case a row-height is used, all rows affected by the RowSpan must have the same unit.\n\nDefault value is <code>1<\/code>.","!type":"fn() -> Number","!category":"function"},"addContent":{"!description":"Adds some content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function"},"getVAlign":{"!description":"Getter for property <code>vAlign<\/code>.\n\n\nDetermines the vertical alignment of the matrix layout cell's content\nwith the cell's borders.\n\nDefault value is <code>Middle<\/code>.","!type":"fn() -> sap.ui.commons.layout.VAlign","!category":"function"},"getContent":{"!description":"Getter for aggregation <code>content<\/code>.\n\nThe matrix layout cell's content (arbitrary controls).\n\nIf the matrix row has a defined height and the matrix has layoutFixed = true, the controls inside of a cell should all use the same unit for its height property.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"removeAllContent":{"!description":"Removes all the controls in the aggregation named <code>content<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"removeStyleClass":{"!description":"Removes the given string from the list of custom style classes that have been set previously.\nRegular style classes like \"sapUiBtn\" cannot be removed.\n\nReturns <code>this<\/code> to allow method chaining","!type":"fn(sStyleClass: String) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function"},"setHAlign":{"!description":"Setter for property <code>hAlign<\/code>.\n\nDefault value is <code>Begin<\/code>.","!type":"fn(sHAlign: sap.ui.commons.layout.HAlign) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function"},"setBackgroundDesign":{"!description":"Setter for property <code>backgroundDesign<\/code>.\n\nDefault value is <code>Transparent<\/code>.","!type":"fn(sBackgroundDesign: sap.ui.commons.layout.BackgroundDesign) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function"},"setRowSpan":{"!description":"Setter for property <code>rowSpan<\/code>.\n\nDefault value is <code>1<\/code>.","!type":"fn(iRowSpan: Number) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function"},"!description":"\nNon-control element used as part of a matrix layout's inner structure.","insertContent":{"!description":"Inserts a content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function"},"setVAlign":{"!description":"Setter for property <code>vAlign<\/code>.\n\nDefault value is <code>Middle<\/code>.","!type":"fn(sVAlign: sap.ui.commons.layout.VAlign) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function"},"setPadding":{"!description":"Setter for property <code>padding<\/code>.\n\nDefault value is <code>End<\/code>.","!type":"fn(sPadding: sap.ui.commons.layout.Padding) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function"},"getColSpan":{"!description":"Getter for property <code>colSpan<\/code>.\n\n\nDetermines how many columns of the underlying grid structure are occupied\nby this matrix layout cell.\n\nDefault value is <code>1<\/code>.","!type":"fn() -> Number","!category":"function"},"addStyleClass":{"!description":"The string given as \"sStyleClass\" will be added to the \"class\" attribute of this element's root HTML element.\n\nThis method is intended to be used to mark controls as being of a special type for which\nspecial styling can be provided using CSS selectors that reference this style class name.\n\n<pre>\nExample:\nmyButton.addStyleClass(\"myRedTextButton\"); // add a CSS class to one button instance\n\n...and in CSS:\n.myRedTextButton {\ncolor: red;\n}\n<\/pre>\n\nThis will add the CSS class \"myRedTextButton\" to the Button HTML and the CSS code above will then\nmake the text in this particular button red.\n\nOnly characters allowed inside HTML attributes are allowed.\nQuotes are not allowed and this method will ignore any strings containing quotes.\nStrings containing spaces are interpreted as ONE custom style class (even though CSS selectors interpret them\nas different classes) and can only removed later by calling removeStyleClass() with exactly the\nsame (space-containing) string as parameter.\nMultiple calls with the same sStyleClass will have no different effect than calling once.\nIf sStyleClass is null, the call is ignored.\n\nReturns <code>this<\/code> to allow method chaining","!type":"fn(sStyleClass: String) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function"},"getBackgroundDesign":{"!description":"Getter for property <code>backgroundDesign<\/code>.\n\n\nDetermines the matrix layout cell's background design.\n\nDefault value is <code>Transparent<\/code>.","!type":"fn() -> sap.ui.commons.layout.BackgroundDesign","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.MatrixLayoutCell.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"getHAlign":{"!description":"Getter for property <code>hAlign<\/code>.\n\n\nDetermines the horizontal alignment of the matrix layout cell's content\nwith the cell's borders.\n\nDefault value is <code>Begin<\/code>.","!type":"fn() -> sap.ui.commons.layout.HAlign","!category":"function"},"!proto":"sap.ui.core.Element"},"sap.ui.commons.ResponsiveContainerRange":{"getHeight":{"!description":"Getter for property <code>height<\/code>.\n\nThe minimal height for this range to be displayed.\n\nDefault value is <code><\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getKey":{"!description":"Getter for property <code>key<\/code>.\n\nA key which can be used to identify the range (optional).\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function"},"!description":"Defines a range for the ResponsiveContainer","getContent":{"!description":"Id of the element which is the current target of the <code>content<\/code> association, or null.\n\nThe content to show for this range (optional).","!type":"fn() -> sap.ui.core.Control","!category":"function"},"setHeight":{"!description":"Setter for property <code>height<\/code>.\n\nDefault value is <code><\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.ResponsiveContainerRange","!category":"function"},"!category":"class","getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nThe minimal width for this range to be displayed.\n\nDefault value is <code><\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.\n\nDefault value is <code><\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.ResponsiveContainerRange","!category":"function"},"setContent":{"!description":"Setter for the associated <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.ResponsiveContainerRange","!category":"function"},"setKey":{"!description":"Setter for property <code>key<\/code>.\n\nDefault value is <code><\/code>.","!type":"fn(sKey: String) -> sap.ui.commons.ResponsiveContainerRange","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ResponsiveContainerRange.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Control"},"sap.ui.commons.form":{"Form":"sap.ui.commons.form.Form_obj","ResponsiveLayout":"sap.ui.commons.form.ResponsiveLayout_obj","!category":"namespace","FormElement":"sap.ui.commons.form.FormElement_obj","GridLayout":"sap.ui.commons.form.GridLayout_obj","SimpleForm":"sap.ui.commons.form.SimpleForm_obj","GridElementData":"sap.ui.commons.form.GridElementData_obj","FormContainer":"sap.ui.commons.form.FormContainer_obj","GridContainerData":"sap.ui.commons.form.GridContainerData_obj","FormLayout":"sap.ui.commons.form.FormLayout_obj"},"sap.ui.commons.MenuButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MenuButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.Button.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.MenuButton"},"sap.ui.commons.RichTooltip_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RichTooltip with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.TooltipBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RichTooltip"},"sap":{"ui":"sap.ui","sap":"sap","!category":"namespace"},"sap.ui.commons.MessageToast_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MessageToast with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.MessageToast"},"sap.ui.commons.form.SimpleForm_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.SimpleForm with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.SimpleForm.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.SimpleForm"},"sap.ui.commons.MenuBar":{"removeItem":{"!description":"Removes a item from the aggregation named <code>items<\/code>.","!type":"fn(vItem: Number | String | sap.ui.unified.MenuItem) -> sap.ui.unified.MenuItem","!category":"function"},"getEnabled":{"!description":"Getter for property <code>enabled<\/code>.\n\nWhen the MenuBar is not enabled, automatically all single menu items are also displayed as 'disabled'.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getDesign":{"!description":"Getter for property <code>design<\/code>.\n\nAvailable design options are Header and Standard. Note that design settings are theme-dependent.\n\nDefault value is <code>Standard<\/code>.","!type":"fn() -> sap.ui.commons.MenuBarDesign","!category":"function"},"addItem":{"!description":"Adds some item into the aggregation named <code>items<\/code>.","!type":"fn(oItem: sap.ui.unified.MenuItem) -> sap.ui.commons.MenuBar","!category":"function"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.unified.MenuItem<\/code> in the aggregation named <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oItem: sap.ui.unified.MenuItem) -> Number","!category":"function"},"!description":"Represents a user interface area which is the entry point for menus with their menu items. MenuBar is useful for applications which shall offer a\nset of actions that shall be provided in a structured way. The MenuBar contains the menu titles from where users navigate to the single items. The control supports\nfor example long menu item texts, automated scrolling for menu items when the browser space is not large enough to display all items, defining images for single\nor all items in a menu, automated layouting of items with or w/o image, and active/non-active items.","getItems":{"!description":"Getter for aggregation <code>items<\/code>.\n\nAggregation of menu items.","!type":"fn() -> [sap.ui.unified.MenuItem]","!category":"function"},"!category":"class","destroyItems":{"!description":"Destroys all the items in the aggregation\nnamed <code>items<\/code>.","!type":"fn() -> sap.ui.commons.MenuBar","!category":"function"},"setEnabled":{"!description":"Setter for property <code>enabled<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.MenuBar","!category":"function"},"removeAllItems":{"!description":"Removes all the controls in the aggregation named <code>items<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.unified.MenuItem]","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nSpecifies the width of the MenuBar\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.MenuBar","!category":"function"},"setDesign":{"!description":"Setter for property <code>design<\/code>.\n\nDefault value is <code>Standard<\/code>.","!type":"fn(sDesign: sap.ui.commons.MenuBarDesign) -> sap.ui.commons.MenuBar","!category":"function"},"insertItem":{"!description":"Inserts a item into the aggregation named <code>items<\/code>.","!type":"fn(oItem: sap.ui.unified.MenuItem, iIndex: Number) -> sap.ui.commons.MenuBar","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.MenuBar.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.layout.AbsoluteLayout":{"setPositionOfChild":{"!description":"Allows to set or change the position information of the given child control","!type":"fn(oControl: sap.ui.core.Control, oPos: Object) -> Boolean","!category":"function"},"setVerticalScrolling":{"!description":"Setter for property <code>verticalScrolling<\/code>.\n\nDefault value is <code>Hidden<\/code>.","!type":"fn(sVerticalScrolling: sap.ui.core.Scrolling) -> sap.ui.commons.layout.AbsoluteLayout","!category":"function"},"destroyPositions":{"!description":"Destroys all the positions in the aggregation\nnamed <code>positions<\/code>.","!type":"fn() -> sap.ui.commons.layout.AbsoluteLayout","!category":"function"},"indexOfContent":{"!description":"Checks for the provided sap.ui.core.Control in the aggregated position containers, and returns the index of the container in the positions aggregation\nif found, or '-1' otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function"},"removeContent":{"!description":"Removes the given control and its corresponding position container from the aggregation named 'positions'.","!type":"fn(oContent: Object) -> sap.ui.core.Control","!category":"function"},"destroyContent":{"!description":"Destroys all aggregated position containers and their child controls. Returns 'this' to allow method chaining.","!type":"fn() -> sap.ui.commons.layout.AbsoluteLayout","!category":"function"},"getHeight":{"!description":"Getter for property <code>height<\/code>.\n\nThe overall height of the control. When not set, 100% is automatically set.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"removePosition":{"!description":"Removes a position from the aggregation named <code>positions<\/code>.","!type":"fn(vPosition: Number | String | sap.ui.commons.layout.PositionContainer) -> sap.ui.commons.layout.PositionContainer","!category":"function"},"!category":"class","getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nThe overall width of the control. When not set, 100% is automatically set.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.layout.AbsoluteLayout","!category":"function"},"addContent":{"!description":"Adds the given control and a corresponding position container into the aggregation named 'positions'. Returns 'this' to allow method chaining.","!type":"fn(oContent: sap.ui.core.Control, oPos: Object) -> sap.ui.commons.layout.AbsoluteLayout","!category":"function"},"indexOfPosition":{"!description":"Checks for the provided <code>sap.ui.commons.layout.PositionContainer<\/code> in the aggregation named <code>positions<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oPosition: sap.ui.commons.layout.PositionContainer) -> Number","!category":"function"},"insertPosition":{"!description":"Inserts a position into the aggregation named <code>positions<\/code>.","!type":"fn(oPosition: sap.ui.commons.layout.PositionContainer, iIndex: Number) -> sap.ui.commons.layout.AbsoluteLayout","!category":"function"},"getContent":{"!description":"Returns an array of the controls contained in the aggregated position containers (might be empty).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"removeAllContent":{"!description":"Removes all aggregated position containers. Returns an array of the controls contained in the removed position containers (might be empty).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"removeAllPositions":{"!description":"Removes all the controls in the aggregation named <code>positions<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.layout.PositionContainer]","!category":"function"},"getVerticalScrolling":{"!description":"Getter for property <code>verticalScrolling<\/code>.\n\n'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.\n\nDefault value is <code>Hidden<\/code>.","!type":"fn() -> sap.ui.core.Scrolling","!category":"function"},"!description":"\nThe Absolute Layout positions its child controls absolutely","insertContent":{"!description":"Inserts the given control and a corresponding position container into the aggregation named 'positions'. Returns 'this' to allow method chaining.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number, oPos: Object) -> sap.ui.commons.layout.AbsoluteLayout","!category":"function"},"setHeight":{"!description":"Setter for property <code>height<\/code>.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.layout.AbsoluteLayout","!category":"function"},"getPositions":{"!description":"Getter for aggregation <code>positions<\/code>.\n\nPositioned child controls within the layout","!type":"fn() -> [sap.ui.commons.layout.PositionContainer]","!category":"function"},"getHorizontalScrolling":{"!description":"Getter for property <code>horizontalScrolling<\/code>.\n\n'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.\n\nDefault value is <code>Hidden<\/code>.","!type":"fn() -> sap.ui.core.Scrolling","!category":"function"},"setHorizontalScrolling":{"!description":"Setter for property <code>horizontalScrolling<\/code>.\n\nDefault value is <code>Hidden<\/code>.","!type":"fn(sHorizontalScrolling: sap.ui.core.Scrolling) -> sap.ui.commons.layout.AbsoluteLayout","!category":"function"},"addPosition":{"!description":"Adds some position into the aggregation named <code>positions<\/code>.","!type":"fn(oPosition: sap.ui.commons.layout.PositionContainer) -> sap.ui.commons.layout.AbsoluteLayout","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.AbsoluteLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Control"},"sap.ui.commons.TextViewDesign":{"Standard":{"!description":"Displays the text in standard letters.","!type":"String","!category":"enum"},"H6":{"!description":"Displays the text in header 6 letters.","!type":"String","!category":"enum"},"H5":{"!description":"Displays the text in header 5 letters.","!type":"String","!category":"enum"},"!description":"Designs for TextView.","H4":{"!description":"Displays the text in header 4 letters.","!type":"String","!category":"enum"},"H3":{"!description":"Displays the text in header 3 letters.","!type":"String","!category":"enum"},"Monospace":{"!description":"Displays the text in monospace letters.","!type":"String","!category":"enum"},"Bold":{"!description":"Displays the text in bold letters","!type":"String","!category":"enum"},"H2":{"!description":"Displays the text in header 2 letters.","!type":"String","!category":"enum"},"H1":{"!description":"Displays the text in header 1 letters.","!type":"String","!category":"enum"},"Underline":{"!description":"underlined Text","!type":"String","!category":"enum"},"!category":"static class","Italic":{"!description":"Displays the text in italic letters","!type":"String","!category":"enum"},"Small":{"!description":"Displays the text in smaller letters.","!type":"String","!category":"enum"}},"sap.ui.commons.RoadMap":{"getNumberOfVisibleSteps":{"!description":"Getter for property <code>numberOfVisibleSteps<\/code>.\n\nTotal number of steps to be displayed at once","!type":"fn() -> Number","!category":"function"},"detachStepSelected":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'stepSelected' event of this <code>sap.ui.commons.RoadMap<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RoadMap","!category":"function"},"setSelectedStep":{"!description":"Setter for property <code>selectedStep<\/code>.","!type":"fn(sSelectedStep: String) -> sap.ui.commons.RoadMap","!category":"function"},"detachStepExpanded":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'stepExpanded' event of this <code>sap.ui.commons.RoadMap<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RoadMap","!category":"function"},"setNumberOfVisibleSteps":{"!description":"Setter for property <code>numberOfVisibleSteps<\/code>.","!type":"fn(iNumberOfVisibleSteps: Number) -> sap.ui.commons.RoadMap","!category":"function"},"attachStepSelected":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'stepSelected' event of this <code>sap.ui.commons.RoadMap<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.RoadMap<\/code> itself.\n\nEvent is fired when the user selects a step; assumption is that this step was not selected with the previously done select action.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RoadMap","!category":"function"},"destroySteps":{"!description":"Destroys all the steps in the aggregation\nnamed <code>steps<\/code>.","!type":"fn() -> sap.ui.commons.RoadMap","!category":"function"},"!category":"class","getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nControl width in CSS size\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.RoadMap","!category":"function"},"removeAllSteps":{"!description":"Removes all the controls in the aggregation named <code>steps<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.RoadMapStep]","!category":"function"},"getFirstVisibleStep":{"!description":"Getter for property <code>firstVisibleStep<\/code>.\n\nId of the first step to be displayed","!type":"fn() -> String","!category":"function"},"insertStep":{"!description":"Inserts a step into the aggregation named <code>steps<\/code>.","!type":"fn(oStep: sap.ui.commons.RoadMapStep, iIndex: Number) -> sap.ui.commons.RoadMap","!category":"function"},"indexOfStep":{"!description":"Checks for the provided <code>sap.ui.commons.RoadMapStep<\/code> in the aggregation named <code>steps<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oStep: sap.ui.commons.RoadMapStep) -> Number","!category":"function"},"removeStep":{"!description":"Removes a step from the aggregation named <code>steps<\/code>.","!type":"fn(vStep: Number | String | sap.ui.commons.RoadMapStep) -> sap.ui.commons.RoadMapStep","!category":"function"},"fireStepSelected":{"!description":"Fire event stepSelected to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'stepId' of type <code>string<\/code>Id of the selected step<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.RoadMap","!category":"function"},"getSelectedStep":{"!description":"Getter for property <code>selectedStep<\/code>.\n\nId of the step which is currently selected","!type":"fn() -> String","!category":"function"},"setFirstVisibleStep":{"!description":"Setter for property <code>firstVisibleStep<\/code>.","!type":"fn(sFirstVisibleStep: String) -> sap.ui.commons.RoadMap","!category":"function"},"!description":"Is used to display step-by-step work flows of a clearly defined work process","attachStepExpanded":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'stepExpanded' event of this <code>sap.ui.commons.RoadMap<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.RoadMap<\/code> itself.\n\nEvent is fired when a given step is expanded or collapsed by user.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RoadMap","!category":"function"},"getSteps":{"!description":"Getter for aggregation <code>steps<\/code>.\n\nSteps that are composing the RoadMap","!type":"fn() -> [sap.ui.commons.RoadMapStep]","!category":"function"},"fireStepExpanded":{"!description":"Fire event stepExpanded to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'stepId' of type <code>string<\/code>Id of the expanded/collapsed step<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.RoadMap","!category":"function"},"addStep":{"!description":"Adds some step into the aggregation named <code>steps<\/code>.","!type":"fn(oStep: sap.ui.commons.RoadMapStep) -> sap.ui.commons.RoadMap","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RoadMap.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Control"},"sap.ui.commons.layout.PositionContainer":{"setTop":{"!description":"Setter for property <code>top<\/code>.","!type":"fn(sTop: sap.ui.core.CSSSize) -> sap.ui.commons.layout.PositionContainer","!category":"function"},"getLeft":{"!description":"Getter for property <code>left<\/code>.\n\nDefines the distance to the left of the layout (as specified in HTML)","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"destroyControl":{"!description":"Destroys the control in the aggregation\nnamed <code>control<\/code>.","!type":"fn() -> sap.ui.commons.layout.PositionContainer","!category":"function"},"getBottom":{"!description":"Getter for property <code>bottom<\/code>.\n\nDefines the distance to the bottom of the layout (as specified in HTML)","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getCenterHorizontally":{"!description":"Getter for property <code>centerHorizontally<\/code>.\n\nIndicates whether this container shall be centered horizontally within the AbsoluteLayout area.\nThe values of the attributes left and right are ignored when this feature is activated.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"updatePosition":{"!description":"Updates the position properties of the container according to the given position in JSON style.","!type":"fn(oPos: Object)","!category":"function"},"setCenterVertically":{"!description":"Setter for property <code>centerVertically<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bCenterVertically: Boolean) -> sap.ui.commons.layout.PositionContainer","!category":"function"},"getCenterVertically":{"!description":"Getter for property <code>centerVertically<\/code>.\n\nIndicates whether this container should be centered vertically within the AbsoluteLayout area.\nThe values of the attributes top and bottom are ignored when this feature is activated.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setCenterHorizontally":{"!description":"Setter for property <code>centerHorizontally<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bCenterHorizontally: Boolean) -> sap.ui.commons.layout.PositionContainer","!category":"function"},"setControl":{"!description":"Setter for the aggregated <code>control<\/code>.","!type":"fn(oControl: sap.ui.core.Control) -> sap.ui.commons.layout.PositionContainer","!category":"function"},"!description":"Is used to specify the position of a control in the AbsoluteLayout","!category":"class","setBottom":{"!description":"Setter for property <code>bottom<\/code>.","!type":"fn(sBottom: sap.ui.core.CSSSize) -> sap.ui.commons.layout.PositionContainer","!category":"function"},"getControl":{"!description":"Getter for aggregation <code>control<\/code>.\n\nChild control of the position container","!type":"fn() -> sap.ui.core.Control","!category":"function"},"setLeft":{"!description":"Setter for property <code>left<\/code>.","!type":"fn(sLeft: sap.ui.core.CSSSize) -> sap.ui.commons.layout.PositionContainer","!category":"function"},"getRight":{"!description":"Getter for property <code>right<\/code>.\n\nDefines the distance to the right of the layout (as specified in HTML)","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setRight":{"!description":"Setter for property <code>right<\/code>.","!type":"fn(sRight: sap.ui.core.CSSSize) -> sap.ui.commons.layout.PositionContainer","!category":"function"},"!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.PositionContainer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"getTop":{"!description":"Getter for property <code>top<\/code>.\n\nDefines the distance to the top of the layout (as specified in HTML)","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"}},"sap.ui.commons.LabelDesign":{"Standard":{"!description":"Displays the label in normal mode.","!type":"String","!category":"enum"},"!description":"Available label display modes.","Bold":{"!description":"Displays the label in bold.","!type":"String","!category":"enum"},"!category":"static class"},"sap.ui.commons.layout.MatrixLayout":{"setColumns":{"!description":"Setter for property <code>columns<\/code>.","!type":"fn(iColumns: Number) -> sap.ui.commons.layout.MatrixLayout","!category":"function"},"destroyRows":{"!description":"Destroys all the rows in the aggregation\nnamed <code>rows<\/code>.","!type":"fn() -> sap.ui.commons.layout.MatrixLayout","!category":"function"},"getLayoutFixed":{"!description":"Getter for property <code>layoutFixed<\/code>.\n\nSets the table layout. If fixed the width parameter of a column has priority, if not the width of the content of the colums has priority.\nThe default is \"fixed\".\nIf the fixed layout is used a adequate width of the MatrixLayout should be provided. Otherwise the column width displayed could be different than the given ones because of browser dependend optimazations.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setLayoutFixed":{"!description":"Setter for property <code>layoutFixed<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bLayoutFixed: Boolean) -> sap.ui.commons.layout.MatrixLayout","!category":"function"},"getColumns":{"!description":"Getter for property <code>columns<\/code>.\n\nNumber of columns. If not specified, the number of columns will be determined from the given cells.","!type":"fn() -> Number","!category":"function"},"indexOfRow":{"!description":"Checks for the provided <code>sap.ui.commons.layout.MatrixLayoutRow<\/code> in the aggregation named <code>rows<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oRow: sap.ui.commons.layout.MatrixLayoutRow) -> Number","!category":"function"},"insertRow":{"!description":"Inserts a row into the aggregation named <code>rows<\/code>.","!type":"fn(oRow: sap.ui.commons.layout.MatrixLayoutRow, iIndex: Number) -> sap.ui.commons.layout.MatrixLayout","!category":"function"},"getHeight":{"!description":"Getter for property <code>height<\/code>.\n\n\nCSS height of the matrix layout.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setWidths":{"!description":"Setter for property <code>widths<\/code>.","!type":"fn(sWidths: [sap.ui.core.CSSSize]) -> sap.ui.commons.layout.MatrixLayout","!category":"function"},"!description":"\n<p>\nA matrix layout arranges controls in a grid structure, using rows which\nneed not have the same number of cells.\n<\/p>\n\n<p>\nIt uses predefined cell classes that guarantee appropriate distances\nbetween cells in the grid. The cell's <code>vGutter<\/code> property lets\nyou specify additional horizontal distances easily. You can set these\nadditional distances (known as gutters) with or without separators.\nThe distance for each cell is specified by assigning a specific\nenumeration value of the class <code>LayoutCellSeparator<\/code> of the\nmatrix data object.\n<\/p>\n\n<p>\nYou should <b>avoid nesting<\/b> matrix layouts. You should only use a\nmatrix layout if you need to align controls horizontally across rows.\n<\/p>","createRow":{"!description":"Creates a new matrix layout row and appends it to this matrix layout.\n\nEach argument must be either a matrix layout cell, which is added to the row\n\"as is\", or an arbitrary content control, which is wrapped with a new\n(default) matrix layout cell first and then added to the row.","!type":"fn(rowContent: sap.ui.core.Control | sap.ui.commons.layout.MatrixLayoutCell | String) -> sap.ui.commons.layout.MatrixLayout","!category":"function"},"setHeight":{"!description":"Setter for property <code>height<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.layout.MatrixLayout","!category":"function"},"!category":"class","getRows":{"!description":"Getter for aggregation <code>rows<\/code>.\n\n\nThe matrix layout's individual rows.","!type":"fn() -> [sap.ui.commons.layout.MatrixLayoutRow]","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nCSS width of the matrix layout.\nIf the LayoutFixed = true a adequate width should be provided.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.layout.MatrixLayout","!category":"function"},"removeRow":{"!description":"Removes a row from the aggregation named <code>rows<\/code>.","!type":"fn(vRow: Number | String | sap.ui.commons.layout.MatrixLayoutRow) -> sap.ui.commons.layout.MatrixLayoutRow","!category":"function"},"addRow":{"!description":"Adds some row into the aggregation named <code>rows<\/code>.","!type":"fn(oRow: sap.ui.commons.layout.MatrixLayoutRow) -> sap.ui.commons.layout.MatrixLayout","!category":"function"},"removeAllRows":{"!description":"Removes all the controls in the aggregation named <code>rows<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.layout.MatrixLayoutRow]","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.MatrixLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"getWidths":{"!description":"Getter for property <code>widths<\/code>.\n\nWidths of the columns. Use an array to define the widths of the columns.\nIf a column shall have an automatical sizing enter \"auto\" for this column width.","!type":"fn() -> [sap.ui.core.CSSSize]","!category":"function"}},"sap.ui.commons.form.FormElement_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.FormElement with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormElement.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.FormElement"},"sap.ui.commons.form.Form_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.Form with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.Form.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.Form"},"sap.ui.commons.RowRepeaterSorter":{"getText":{"!description":"Getter for property <code>text<\/code>.\n\nThe sorter title if needed for display.","!type":"fn() -> String","!category":"function"},"!description":"This element is used by the RowRepeater and allows to define a sorter in this context along with the related data such as a text and an icon.","getSorter":{"!description":"Getter for property <code>sorter<\/code>.\n\nThe sorter object.","!type":"fn() -> Object","!category":"function"},"!category":"class","setIcon":{"!description":"Setter for property <code>icon<\/code>.","!type":"fn(sIcon: String) -> sap.ui.commons.RowRepeaterSorter","!category":"function"},"setText":{"!description":"Setter for property <code>text<\/code>.","!type":"fn(sText: String) -> sap.ui.commons.RowRepeaterSorter","!category":"function"},"getIcon":{"!description":"Getter for property <code>icon<\/code>.\n\nThe sorter icon if needed for display.","!type":"fn() -> String","!category":"function"},"setSorter":{"!description":"Setter for property <code>sorter<\/code>.","!type":"fn(oSorter: Object) -> sap.ui.commons.RowRepeaterSorter","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RowRepeaterSorter.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Element"},"sap.ui.commons.MessageType":{"!description":"[Enter description for MessageType]","!category":"static class","Warning":{"!description":"Warning message","!type":"String","!category":"enum"},"Success":{"!description":"Successful message","!type":"String","!category":"enum"},"Error":{"!description":"Error message","!type":"String","!category":"enum"}},"sap.ui.commons.Title_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Title with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Title.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Title"},"sap.ui.commons.CheckBox":{"getTextDirection":{"!description":"Getter for property <code>textDirection<\/code>.\n\nThe value can be set to LTR or RTL. Otherwise, the control inherits the text direction from its parent control.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn() -> sap.ui.core.TextDirection","!category":"function"},"getEnabled":{"!description":"Getter for property <code>enabled<\/code>.\n\nUsing this property, the control could be disabled, if required.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"setText":{"!description":"Setter for property <code>text<\/code>.","!type":"fn(sText: String) -> sap.ui.commons.CheckBox","!category":"function"},"getValueState":{"!description":"Getter for property <code>valueState<\/code>.\n\nAccepts the core enumeration ValueState.type that supports 'None', 'Error', 'Warning' and 'Success'.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.ui.core.ValueState","!category":"function"},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"setChecked":{"!description":"Setter for property <code>checked<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bChecked: Boolean) -> sap.ui.commons.CheckBox","!category":"function"},"getText":{"!description":"Getter for property <code>text<\/code>.\n\nDefines the text displayed next to the check box","!type":"fn() -> String","!category":"function"},"getAriaDescribedBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaDescribedBy<\/code> association.\n\nAssociation to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"toggle":{"!description":"\nInverts the current value of the control.","!type":"fn() -> sap.ui.commons.CheckBox","!category":"function"},"setEditable":{"!description":"Setter for property <code>editable<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEditable: Boolean) -> sap.ui.commons.CheckBox","!category":"function"},"setValueState":{"!description":"Setter for property <code>valueState<\/code>.\n\nDefault value is <code>None<\/code>.","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.commons.CheckBox","!category":"function"},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.CheckBox","!category":"function"},"!category":"class","setEnabled":{"!description":"Setter for property <code>enabled<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.CheckBox","!category":"function"},"getChecked":{"!description":"Getter for property <code>checked<\/code>.\n\nContains the state of the control whether it is flagged with a check mark, or not\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nThe width can be set to an absolute value. If no value is set, the control width results from the text length.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getAriaLabelledBy":{"!description":"Array of Ids of the elements which are the current targets of the <code>ariaLabelledBy<\/code> association.\n\nAssociation to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.CheckBox","!category":"function"},"setTextDirection":{"!description":"Setter for property <code>textDirection<\/code>.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.ui.commons.CheckBox","!category":"function"},"getEditable":{"!description":"Getter for property <code>editable<\/code>.\n\nSpecifies whether the user shall be allowed to select the check box.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"unbindChecked":{"!description":"Unbinder for property <code>checked<\/code>.","!type":"fn() -> sap.ui.commons.CheckBox","!category":"function"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"detachChange":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'change' event of this <code>sap.ui.commons.CheckBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.CheckBox","!category":"function"},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.CheckBox","!category":"function"},"!description":"\nProvides a box which can be flagged, the box has a label. A check box can either stand alone, or in a group with other check boxes. As an option, the boxes can initially be set to status 'Not Editable'.","fireChange":{"!description":"Fire event change to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'checked' of type <code>boolean<\/code>\nChecks whether the box is flagged or not flagged.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.CheckBox","!category":"function"},"getName":{"!description":"Getter for property <code>name<\/code>.\n\nThe 'name' property to be used in the HTML code, for example for HTML forms that send data to the server via submit.","!type":"fn() -> String","!category":"function"},"attachChange":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'change' event of this <code>sap.ui.commons.CheckBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.CheckBox<\/code> itself.\n\n\nEvent is triggered when the control status is changed by the user by flagging or unflagging the checkbox.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.CheckBox","!category":"function"},"setName":{"!description":"Setter for property <code>name<\/code>.","!type":"fn(sName: String) -> sap.ui.commons.CheckBox","!category":"function"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"bindChecked":{"!description":"Binder for property <code>checked<\/code>.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.CheckBox","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.CheckBox.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.ImageMap":{"destroyAreas":{"!description":"Destroys all the areas in the aggregation\nnamed <code>areas<\/code>.","!type":"fn() -> sap.ui.commons.ImageMap","!category":"function"},"firePress":{"!description":"Fire event press to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'areaId' of type <code>string<\/code>Id of clicked Area.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.ImageMap","!category":"function"},"getAreas":{"!description":"Getter for aggregation <code>areas<\/code>.\n\nArea representing the reference to the target location","!type":"fn() -> [sap.ui.commons.Area]","!category":"function"},"attachPress":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'press' event of this <code>sap.ui.commons.ImageMap<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.ImageMap<\/code> itself.\n\nEvent for the areas that can be clicked in an ImageMap","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.ImageMap","!category":"function"},"indexOfArea":{"!description":"Checks for the provided <code>sap.ui.commons.Area<\/code> in the aggregation named <code>areas<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oArea: sap.ui.commons.Area) -> Number","!category":"function"},"removeArea":{"!description":"Removes a area from the aggregation named <code>areas<\/code>.","!type":"fn(vArea: Number | String | sap.ui.commons.Area) -> sap.ui.commons.Area","!category":"function"},"!description":"Combination of image areas where at runtime these areas are starting points for hyperlinks or actions","insertArea":{"!description":"Inserts a area into the aggregation named <code>areas<\/code>.","!type":"fn(oArea: sap.ui.commons.Area, iIndex: Number) -> sap.ui.commons.ImageMap","!category":"function"},"addArea":{"!description":"Adds some area into the aggregation named <code>areas<\/code>.","!type":"fn(oArea: sap.ui.commons.Area) -> sap.ui.commons.ImageMap","!category":"function"},"getName":{"!description":"Getter for property <code>name<\/code>.\n\nName for the image that serves as reference","!type":"fn() -> String","!category":"function"},"!category":"class","createArea":{"!description":"Adds areas to the Image Map. \n\nEach argument must be either a JSon object or a list of objects or the area element or elements.","!type":"fn(content: Object) -> sap.ui.commons.ImageMap","!category":"function"},"removeAllAreas":{"!description":"Removes all the controls in the aggregation named <code>areas<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.Area]","!category":"function"},"setName":{"!description":"Setter for property <code>name<\/code>.","!type":"fn(sName: String) -> sap.ui.commons.ImageMap","!category":"function"},"detachPress":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'press' event of this <code>sap.ui.commons.ImageMap<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.ImageMap","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ImageMap.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.layout.VAlign":{"Bottom":{"!description":"\nAligned at the bottom.","!type":"String","!category":"enum"},"Top":{"!description":"\nAligned at the top.","!type":"String","!category":"enum"},"!description":"Vertical alignment, e.g. of a layout cell's content within the cell's borders.","Middle":{"!description":"\nVertically centered.","!type":"String","!category":"enum"},"!category":"static class"},"sap.ui.commons.TextView_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TextView with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.TextView"},"sap.ui.commons.layout.HorizontalLayout":{"!description":"A layout that provides support for horizontal alignment of controls","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.HorizontalLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.layout.HorizontalLayout"},"sap.ui.commons.RowRepeaterFilter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RowRepeaterFilter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RowRepeaterFilter"},"sap.ui.commons.PasswordField_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.PasswordField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.PasswordField"},"sap.ui.commons.FormattedTextView_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.FormattedTextView with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.FormattedTextView"},"sap.ui.commons.Link_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Link with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Link"},"sap.ui.commons.Tree_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Tree with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Tree"},"sap.ui.commons.RoadMapStep_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RoadMapStep with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RoadMapStep"},"sap.ui.commons.RowRepeaterSorter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RowRepeaterSorter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RowRepeaterSorter"},"sap.ui.commons.TreeSelectionMode":{"Multi":{"!description":"Select multiple rows at a time.","!type":"String","!category":"enum"},"!description":"Selection mode of the tree","Legacy":{"!description":"Behavior of the former Tree. It is possible to select a plurality of nodes via the API.","!type":"String","!category":"enum"},"!category":"static class","None":{"!description":"No rows can be selected.","!type":"String","!category":"enum"},"Single":{"!description":"Select one row at a time.","!type":"String","!category":"enum"}},"sap.ui.commons.ComboBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ComboBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ComboBox"},"sap.ui.commons.AutoComplete_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.AutoComplete with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.ComboBox.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.AutoComplete"},"sap.ui.commons.ToolbarSeparatorDesign":{"Standard":{"!description":"Standard Separator between controls","!type":"String","!category":"enum"},"!description":"Design of the Toolbar Separator.","!category":"static class","FullHeight":{"!description":"100% height Separator before and after specific controls","!type":"String","!category":"enum"}},"sap.ui.commons.Slider_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Slider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Slider"},"sap.ui.commons.MenuTextFieldItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MenuTextFieldItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.MenuTextFieldItem.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.MenuTextFieldItem"},"sap.ui.commons.RowRepeater":{"detachFilter":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'filter' event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RowRepeater","!category":"function"},"resize":{"!description":"Resizes the row repeater by changing the number of displayed rows. This method will only resize the RowRepeater if the property showMoreSteps is set.","!type":"fn(iNumberOfRows: Number)","!category":"function"},"removeAllSorters":{"!description":"Removes all the controls in the aggregation named <code>sorters<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.RowRepeaterSorter]","!category":"function"},"detachPage":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'page' event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RowRepeater","!category":"function"},"getNumberOfRows":{"!description":"Getter for property <code>numberOfRows<\/code>.\n\nNumber of rows displayed.\n\nDefault value is <code>5<\/code>.","!type":"fn() -> Number","!category":"function"},"indexOfSorter":{"!description":"Checks for the provided <code>sap.ui.commons.RowRepeaterSorter<\/code> in the aggregation named <code>sorters<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oSorter: sap.ui.commons.RowRepeaterSorter) -> Number","!category":"function"},"attachFilter":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'filter' event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.RowRepeater<\/code> itself.\n\nThis event is triggered when a filter is set.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RowRepeater","!category":"function"},"gotoPage":{"!description":"Switch to specified page.","!type":"fn(iPageNumber: Number)","!category":"function"},"getThreshold":{"!description":"Getter for property <code>threshold<\/code>.\n\nThreshold to fetch the next chunk of data. The minimal threshold can be the numberOfRows of the RR.","!type":"fn() -> Number","!category":"function"},"indexOfFilter":{"!description":"Checks for the provided <code>sap.ui.commons.RowRepeaterFilter<\/code> in the aggregation named <code>filters<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oFilter: sap.ui.commons.RowRepeaterFilter) -> Number","!category":"function"},"getTitle":{"!description":"Getter for aggregation <code>title<\/code>.\n\nTitle to be displayed in top left corner. Either text or icon.","!type":"fn() -> sap.ui.core.Title","!category":"function"},"setThreshold":{"!description":"Setter for property <code>threshold<\/code>.","!type":"fn(iThreshold: Number) -> sap.ui.commons.RowRepeater","!category":"function"},"setCurrentPage":{"!description":"Setter for property <code>currentPage<\/code>.","!type":"fn(iCurrentPage: Number) -> sap.ui.commons.RowRepeater","!category":"function"},"removeRow":{"!description":"Removes a row from the aggregation named <code>rows<\/code>.","!type":"fn(vRow: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"addRow":{"!description":"Adds some row into the aggregation named <code>rows<\/code>.","!type":"fn(oRow: sap.ui.core.Control) -> sap.ui.commons.RowRepeater","!category":"function"},"unbindRows":{"!description":"Unbinder for aggregation <code>rows<\/code>.","!type":"fn() -> sap.ui.commons.RowRepeater","!category":"function"},"setFixedRowHeight":{"!description":"Setter for property <code>fixedRowHeight<\/code>.\n\nDefault value is <code><\/code>.","!type":"fn(sFixedRowHeight: sap.ui.core.CSSSize) -> sap.ui.commons.RowRepeater","!category":"function"},"addFilter":{"!description":"Adds some filter into the aggregation named <code>filters<\/code>.","!type":"fn(oFilter: sap.ui.commons.RowRepeaterFilter) -> sap.ui.commons.RowRepeater","!category":"function"},"triggerSort":{"!description":"Sort the data.","!type":"fn(sId: String)","!category":"function"},"setNoData":{"!description":"Setter for the aggregated <code>noData<\/code>.","!type":"fn(oNoData: sap.ui.core.Control) -> sap.ui.commons.RowRepeater","!category":"function"},"destroyTitle":{"!description":"Destroys the title in the aggregation\nnamed <code>title<\/code>.","!type":"fn() -> sap.ui.commons.RowRepeater","!category":"function"},"setTitle":{"!description":"Setter for the aggregated <code>title<\/code>.","!type":"fn(oTitle: sap.ui.core.Title) -> sap.ui.commons.RowRepeater","!category":"function"},"attachSort":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'sort' event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.RowRepeater<\/code> itself.\n\nThis event is triggered when a sorting is applied.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RowRepeater","!category":"function"},"firstPage":{"!description":"Switch to first page.","!type":"fn()","!category":"function"},"detachResize":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'resize' event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RowRepeater","!category":"function"},"setDesign":{"!description":"Setter for property <code>design<\/code>.\n\nDefault value is <code>Standard<\/code>.","!type":"fn(sDesign: sap.ui.commons.RowRepeaterDesign) -> sap.ui.commons.RowRepeater","!category":"function"},"removeFilter":{"!description":"Removes a filter from the aggregation named <code>filters<\/code>.","!type":"fn(vFilter: Number | String | sap.ui.commons.RowRepeaterFilter) -> sap.ui.commons.RowRepeaterFilter","!category":"function"},"!proto":"sap.ui.core.Control","removeSorter":{"!description":"Removes a sorter from the aggregation named <code>sorters<\/code>.","!type":"fn(vSorter: Number | String | sap.ui.commons.RowRepeaterSorter) -> sap.ui.commons.RowRepeaterSorter","!category":"function"},"attachPage":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'page' event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.RowRepeater<\/code> itself.\n\nThis event is triggered when paging was executed.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RowRepeater","!category":"function"},"applyFilter":{"!description":"Applies a filter.","!type":"fn(sId: String)","!category":"function"},"getDesign":{"!description":"Getter for property <code>design<\/code>.\n\nThe visual design of the control.\n\nDefault value is <code>Standard<\/code>.","!type":"fn() -> sap.ui.commons.RowRepeaterDesign","!category":"function"},"firePage":{"!description":"Fire event page to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'currentPage' of type <code>int<\/code>The value of the currentPage property after the change.<\/li>\n<li>'previousPage' of type <code>int<\/code>The value of the currentPage property before the change.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.RowRepeater","!category":"function"},"setNumberOfRows":{"!description":"Setter for property <code>numberOfRows<\/code>.\n\nDefault value is <code>5<\/code>","!type":"fn(iNumberOfRows: Number) -> sap.ui.commons.RowRepeater","!category":"function"},"fireSort":{"!description":"Fire event sort to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'sorterId' of type <code>string<\/code>The ID of the sorter that has just been applied.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.RowRepeater","!category":"function"},"bindRows":{"!description":"Binder for aggregation <code>rows<\/code>.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.RowRepeater","!category":"function"},"insertRow":{"!description":"Inserts a row into the aggregation named <code>rows<\/code>.","!type":"fn(oRow: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.RowRepeater","!category":"function"},"destroySorters":{"!description":"Destroys all the sorters in the aggregation\nnamed <code>sorters<\/code>.","!type":"fn() -> sap.ui.commons.RowRepeater","!category":"function"},"!category":"class","getRows":{"!description":"Getter for aggregation <code>rows<\/code>.\n\nRows to be repeated.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"fireFilter":{"!description":"Fire event filter to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'filterId' of type <code>string<\/code>The ID of the filter that has just been applied.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.RowRepeater","!category":"function"},"triggerShowMore":{"!description":"The <code>triggerShowMore<\/code> function increments the number of rows by the\nvalue of <code>showMoreSteps<\/code>.\n\nThis method will only trigger a showMore if the property showMoreSteps is set.","!type":"fn() -> sap.ui.commons.RowRepeater","!category":"function"},"setShowMoreSteps":{"!description":"Override the default behavior of <code>setShowMoreSteps<\/code> to update the\npaging mode flag. Any change to the paging mode flag will result in the current\npage being set to the first page.","!type":"fn(iShowMoreSteps: Number) -> sap.ui.commons.RowRepeater","!category":"function"},"addSorter":{"!description":"Adds some sorter into the aggregation named <code>sorters<\/code>.","!type":"fn(oSorter: sap.ui.commons.RowRepeaterSorter) -> sap.ui.commons.RowRepeater","!category":"function"},"destroyNoData":{"!description":"Destroys the noData in the aggregation\nnamed <code>noData<\/code>.","!type":"fn() -> sap.ui.commons.RowRepeater","!category":"function"},"previousPage":{"!description":"Switch to previous page.","!type":"fn()","!category":"function"},"removeAllRows":{"!description":"Removes all the controls in the aggregation named <code>rows<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"fireResize":{"!description":"Fire event resize to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'numberOfRows' of type <code>int<\/code>The value of the numberOfRows property after the change.<\/li>\n<li>'previousNumberOfRows' of type <code>int<\/code>The value of the numberOfRows property before the change.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.RowRepeater","!category":"function"},"getShowMoreSteps":{"!description":"Getter for property <code>showMoreSteps<\/code>.\n\nStep size used to increase the numberOfRows value. This feature is only active if value is greater than 0. This will deactivate the paging feature.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function"},"lastPage":{"!description":"Switch to last page.","!type":"fn()","!category":"function"},"nextPage":{"!description":"Switch to next page.","!type":"fn()","!category":"function"},"detachSort":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'sort' event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RowRepeater","!category":"function"},"destroyRows":{"!description":"Destroys all the rows in the aggregation\nnamed <code>rows<\/code>.","!type":"fn() -> sap.ui.commons.RowRepeater","!category":"function"},"getFixedRowHeight":{"!description":"Getter for property <code>fixedRowHeight<\/code>.\n\nRow height adapts to rendered content. If a fixed height is specified the cells have a maximum height and the overflow will be hidden.\n\nDefault value is <code><\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"removeAllFilters":{"!description":"Removes all the controls in the aggregation named <code>filters<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.RowRepeaterFilter]","!category":"function"},"getNoData":{"!description":"Getter for aggregation <code>noData<\/code>.\n\nThis control is shown, in case there is no data available to be displayed in the RowRepeater.","!type":"fn() -> sap.ui.core.Control","!category":"function"},"indexOfRow":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>rows<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oRow: sap.ui.core.Control) -> Number","!category":"function"},"attachResize":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'resize' event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.RowRepeater<\/code> itself.\n\nThis event is triggered when the number of rows was changed.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RowRepeater","!category":"function"},"!description":"This control displays items in a stacked list format, allowing the user to page in order to see more items or to use the offered filtering and sorting capabilities in order to manipulate the displayed data.","insertFilter":{"!description":"Inserts a filter into the aggregation named <code>filters<\/code>.","!type":"fn(oFilter: sap.ui.commons.RowRepeaterFilter, iIndex: Number) -> sap.ui.commons.RowRepeater","!category":"function"},"insertSorter":{"!description":"Inserts a sorter into the aggregation named <code>sorters<\/code>.","!type":"fn(oSorter: sap.ui.commons.RowRepeaterSorter, iIndex: Number) -> sap.ui.commons.RowRepeater","!category":"function"},"getCurrentPage":{"!description":"Getter for property <code>currentPage<\/code>.\n\nThe index of the page currently displayed. The index starts at 1.\n\nDefault value is <code>1<\/code>.","!type":"fn() -> Number","!category":"function"},"getSorters":{"!description":"Getter for aggregation <code>sorters<\/code>.\n\nSorters to be provided in secondary toolbar.","!type":"fn() -> [sap.ui.commons.RowRepeaterSorter]","!category":"function"},"getFilters":{"!description":"Getter for aggregation <code>filters<\/code>.\n\nFilters to be provided in toolbar.","!type":"fn() -> [sap.ui.commons.RowRepeaterFilter]","!category":"function"},"destroyFilters":{"!description":"Destroys all the filters in the aggregation\nnamed <code>filters<\/code>.","!type":"fn() -> sap.ui.commons.RowRepeater","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RowRepeater.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.form.FormContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.FormContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormContainer.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.FormContainer"},"sap.ui.commons.TextField_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TextField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sID?: String, mSettings: Object)","prototype":"sap.ui.commons.TextField"},"sap.ui.commons.ResponsiveContainerRange_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ResponsiveContainerRange with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ResponsiveContainerRange"},"sap.ui.commons.MenuItemBase_obj":{"!type":"fn()","prototype":"sap.ui.commons.MenuItemBase"},"sap.ui.commons.SearchProvider_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.SearchProvider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.search.OpenSearchProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.SearchProvider"},"sap.ui.commons.ToolbarItem":{"!description":"Marker interface for common controls which are suitable for use within a toolbar.\nThe most prominent example of a toolbar item is a button which is mostly used with\nan icon instead of a text caption.\n\nToolbar items must have a fixed height compatible with the toolbar being\na single horizontal row. They can refer to the toolbar's marker class\n\"sapUiTb\" to adjust their own theming when used inside a toolbar.","!category":"static class"},"sap.ui.commons.form.FormLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.FormLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormLayout.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.FormLayout"},"sap.ui.commons.AutoComplete":{"setSelectedKey":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined NOT SUPPORTED<br>undefined","!type":"fn()","!category":"function"},"setEnableScrolling":{"!description":"Setter for property <code>enableScrolling<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableScrolling: Boolean) -> sap.ui.commons.AutoComplete","!category":"function"},"setListBox":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined NOT SUPPORTED<br>undefined","!type":"fn()","!category":"function"},"setFilterFunction":{"!description":"Sets a custom filter function for items. Default is to check whether the item text begins with the typed value.\n\nExample:\n<code>\nfunction(sValue, oItem){\n\t  return jQuery.sap.startsWithIgnoreCase(oItem.getText(), sValue);\n}\n<\/code>","!type":"fn(fFilter?: fn())","!category":"function"},"detachSuggest":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'suggest' event of this <code>sap.ui.commons.AutoComplete<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.AutoComplete","!category":"function"},"getEnableScrolling":{"!description":"Getter for property <code>enableScrolling<\/code>.\n\nWhether scrolling should be enabled when the number of items is higher than maxPopupItems.\nIf set to false only the first n items (n=maxPopupItems) are shown.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getListBox":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined NOT SUPPORTED<br>undefined","!type":"fn()","!category":"function"},"!description":"\nTextfield with list based text completion.","!category":"class","getSelectedItemId":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined NOT SUPPORTED<br>undefined","!type":"fn()","!category":"function"},"fireSuggest":{"!description":"Fire event suggest to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'suggestValue' of type <code>string<\/code>The current value which was typed in.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.AutoComplete","!category":"function"},"getSelectedKey":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined NOT SUPPORTED<br>undefined","!type":"fn()","!category":"function"},"setSelectedItemId":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined NOT SUPPORTED<br>undefined","!type":"fn()","!category":"function"},"!proto":"sap.ui.commons.ComboBox","attachSuggest":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'suggest' event of this <code>sap.ui.commons.AutoComplete<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.AutoComplete<\/code> itself.\n\nFired when the user has changed the value and a suggestion list update should occur.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.AutoComplete","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.AutoComplete.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.enums.AreaDesign":{"!description":"Value set for the background design of areas","Transparent":{"!description":"Shows the background as transparent","!type":"String","!category":"enum"},"!category":"static class","Plain":{"!description":"Shows the area in a plain look","!type":"String","!category":"enum"},"Fill":{"!description":"Shows the label in a filled look","!type":"String","!category":"enum"}},"sap.ui.commons.ComboBox":{"removeItem":{"!description":"Removes a item from the aggregation named <code>items<\/code>.","!type":"fn(vItem: Number | String | sap.ui.core.ListItem) -> sap.ui.core.ListItem","!category":"function"},"setMaxPopupItems":{"!description":"Setter for property <code>maxPopupItems<\/code>.\n\nDefault value is <code>10<\/code>.","!type":"fn(iMaxPopupItems: Number) -> sap.ui.commons.ComboBox","!category":"function"},"_checkChange":{"!description":"Compares the previous value with the current value and fires the \"Change\" event\nif the ComboBox is editable and the value has changed or whether the value has been changed\ne.g. via up/down or auto-complete feature","!type":"fn(oEvent: jQuery.Event, bImmediate?: Boolean)","!category":"function"},"bindItems":{"!description":"Binder for aggregation <code>items<\/code>.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.ComboBox","!category":"function"},"addItem":{"!description":"Adds some item into the aggregation named <code>items<\/code>.","!type":"fn(oItem: sap.ui.core.ListItem) -> sap.ui.commons.ComboBox","!category":"function"},"onsapescape":{"!description":"Handle sapescape pseudo events on the control","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.ListItem<\/code> in the aggregation named <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oItem: sap.ui.core.ListItem) -> Number","!category":"function"},"getDisplaySecondaryValues":{"!description":"Getter for property <code>displaySecondaryValues<\/code>.\n\nIndicates whether the <code>additionalText<\/code> property that is available for <code>sap.ui.core.ListItem<\/code> shall be displayed in the list.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"unbindItems":{"!description":"Unbinder for aggregation <code>items<\/code>.","!type":"fn() -> sap.ui.commons.ComboBox","!category":"function"},"onsapnextmodifiers":{"!description":"Handle sapnextmodifiers pseudo events on the control\nif in toolbar prevent item navigation if popup is opened.","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"!category":"class","setSelectedKey":{"!description":"Setter for property <code>selectedKey<\/code>.","!type":"fn(sSelectedKey: String) -> sap.ui.commons.ComboBox","!category":"function"},"onsaphide":{"!description":"Handle saphide pseudo events on the control","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"getF4ButtonDomRef":{"!description":"Returns the DomRef which represents the icon for value help.\nCould be overwritten in child-classes","!type":"fn() -> Element","!category":"function"},"setListBox":{"!description":"Setter for the associated <code>listBox<\/code>.","!type":"fn(oListBox: sap.ui.commons.ListBox) -> sap.ui.commons.ComboBox","!category":"function"},"onsapenter":{"!description":"Handle sapenter pseudo events on the control","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"setDisplaySecondaryValues":{"!description":"Setter for property <code>displaySecondaryValues<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bDisplaySecondaryValues: Boolean) -> sap.ui.commons.ComboBox","!category":"function"},"getMaxPopupItems":{"!description":"Getter for property <code>maxPopupItems<\/code>.\n\n\nDefines the number of items that shall be displayed at once. If the overall number of items is higher than this setting, a scrollbar is provided.\n\nDefault value is <code>10<\/code>.","!type":"fn() -> Number","!category":"function"},"getListBox":{"!description":"Id of the element which is the current target of the <code>listBox<\/code> association, or null.\n\nUsing this method, you provide a <code>ListBox<\/code> control. This allows reuse of item lists in different controls. Either a control id can be used as new target, or a control instance.\n\n<b>Note:<\/b> The ListBox must not be rendered somewhere in the UI. But if you want to bind the <code>ListBox<\/code> items to a model it must be in the control tree.\nSo we suggest to add it as dependent somewhere (e.g. to the view or the first used <code>ComboBox<\/code>). If it is not set as child or dependant to an other control it will be automatically set as dependent to the first ComboBox where it is assigned.","!type":"fn() -> sap.ui.commons.ListBox","!category":"function"},"!description":"\nThe control provides a field that allows end users to either enter some text, or to choose an entry out of a list of pre-defined items.\nThe choosable items can be provided in the form of a complete <code>ListBox<\/code>, single <code>ListItems<\/code>.","getItems":{"!description":"Getter for aggregation <code>items<\/code>.\n\n<code>ListItems<\/code> (see <code>sap.ui.core.ListBox<\/code>) that shall be displayed in the list.","!type":"fn() -> [sap.ui.core.ListItem]","!category":"function"},"fireChange":{"!description":"Fire event change to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'newValue' of type <code>string<\/code> The new / changed value of the textfield.<\/li>\n<li>'selectedItem' of type <code>sap.ui.core.ListItem<\/code> selected item <\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.ComboBox","!category":"function"},"destroyItems":{"!description":"Destroys all the items in the aggregation\nnamed <code>items<\/code>.","!type":"fn() -> sap.ui.commons.ComboBox","!category":"function"},"getSelectedItemId":{"!description":"Getter for property <code>selectedItemId<\/code>.\n\nId of the selected item. If the value has no corresponding item, the <code>selectedItemId<\/code> is empty.\n\nIf the <code>selectedItemId<\/code> is set to an not existing item, it will not be changed.","!type":"fn() -> String","!category":"function"},"removeAllItems":{"!description":"Removes all the controls in the aggregation named <code>items<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.ListItem]","!category":"function"},"onsapshow":{"!description":"Handle sapshow pseudo events on the control","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"getSelectedKey":{"!description":"Getter for property <code>selectedKey<\/code>.\n\nKey of the selected item.\n\nIf the value has no corresponding item the key is empty.\n\nIf duplicate keys exists the first item matching the key is used.\n\nIf the key is set to a not existing value it will not be changed.","!type":"fn() -> String","!category":"function"},"setSelectedItemId":{"!description":"Setter for property <code>selectedItemId<\/code>.","!type":"fn(sSelectedItemId: String) -> sap.ui.commons.ComboBox","!category":"function"},"insertItem":{"!description":"Inserts a item into the aggregation named <code>items<\/code>.","!type":"fn(oItem: sap.ui.core.ListItem, iIndex: Number) -> sap.ui.commons.ComboBox","!category":"function"},"!proto":"sap.ui.commons.TextField","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ComboBox.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.Image":{"getAlt":{"!description":"Getter for property <code>alt<\/code>.\n\nThe alternative text that is displayed in case the Image is not available, or cannot be displayed.\nIf the image is set to decorative this property is ignored.","!type":"fn() -> String","!category":"function"},"getDecorative":{"!description":"Getter for property <code>decorative<\/code>.\n\nA decorative image is included for design reasons. Accessibility tools will ignore decorative images.\nNote: If the Image has an image map (useMap is set), this property will be overridden (the image will not be rendered as decorative).\nA decorative image has no ALT attribute, so the Alt property is ignored if the image is decorative.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"firePress":{"!description":"Fire event press to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.commons.Image","!category":"function"},"setUseMap":{"!description":"Setter for property <code>useMap<\/code>.","!type":"fn(sUseMap: String) -> sap.ui.commons.Image","!category":"function"},"attachPress":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'press' event of this <code>sap.ui.commons.Image<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.Image<\/code> itself.\n\nEvent is fired when the user clicks on the control.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Image","!category":"function"},"setDecorative":{"!description":"Setter for property <code>decorative<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bDecorative: Boolean) -> sap.ui.commons.Image","!category":"function"},"setAlt":{"!description":"Setter for property <code>alt<\/code>.","!type":"fn(sAlt: String) -> sap.ui.commons.Image","!category":"function"},"getHeight":{"!description":"Getter for property <code>height<\/code>.\n\nWhen the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the overall size is maintained then, considering the aspect ratio.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"!description":"A wrapper around the IMG tag. The image can be loaded from a remote or local server.\nThere are various size setting options available, and the images can be combined with actions.","setSrc":{"!description":"Setter for property <code>src<\/code>.","!type":"fn(sSrc: sap.ui.core.URI) -> sap.ui.commons.Image","!category":"function"},"setHeight":{"!description":"Setter for property <code>height<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Image","!category":"function"},"!category":"class","getUseMap":{"!description":"Getter for property <code>useMap<\/code>.\n\nThe name of the image map that defines the clickable areas","!type":"fn() -> String","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nWhen the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the overall size is maintained then, considering the aspect ratio.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Image","!category":"function"},"detachPress":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'press' event of this <code>sap.ui.commons.Image<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Image","!category":"function"},"getSrc":{"!description":"Getter for property <code>src<\/code>.\n\nRelative or absolute path to URL where the image file is stored.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Image.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.layout.MatrixLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.MatrixLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.MatrixLayout"},"sap.ui.commons.MenuTextFieldItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the control sap.ui.unified.MenuTextFieldItem of the library sap.ui.unified instead.<br>Menu item which contains an text field. This menu item is e.g. helpful for filters.\nThe aggregation 'submenu' (inherited from parent class) is not supported for this type of menu item.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.MenuTextFieldItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.unified.MenuTextFieldItem"},"sap.ui.commons.Dialog_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Dialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Dialog"},"sap.ui.commons.DropdownBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.DropdownBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.ComboBox.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.DropdownBox"},"sap.ui.commons.SearchProvider":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.6.0 Replaced by sap.ui.core.search.OpenSearchProvider<br>A SearchProvider which can be attached to a Search Field.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.SearchProvider.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.search.OpenSearchProvider"},"sap.ui.commons.PasswordField":{"!description":"A text field with masked characters which borrows its properties and methods from TextField.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.PasswordField.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.commons.TextField"},"sap.ui.commons.MenuItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MenuItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.MenuItem.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.MenuItem"},"sap.ui.commons.InPlaceEdit_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.InPlaceEdit with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.InPlaceEdit"},"sap.ui.commons.MessageBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MessageBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.MessageBar"},"sap.ui.commons.form.GridLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.GridLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.GridLayout.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.GridLayout"},"sap.ui.commons.TabStrip_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TabStrip with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.TabStrip"},"sap.ui.commons.ToolbarSeparator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ToolbarSeparator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ToolbarSeparator"},"sap.ui.commons.HorizontalDividerType":{"!description":"Enumeration of possible HorizontalDivider types.","Page":{"!description":"Type Page","!type":"String","!category":"enum"},"Area":{"!description":"Type Area","!type":"String","!category":"enum"},"!category":"static class"},"sap.ui.commons.PaginatorEvent":{"Next":{"!description":"Next page event","!type":"String","!category":"enum"},"Last":{"!description":"Last page event","!type":"String","!category":"enum"},"!description":"Distinct paginator event types","Previous":{"!description":"Previous page event","!type":"String","!category":"enum"},"Goto":{"!description":"Go to page event","!type":"String","!category":"enum"},"!category":"static class","First":{"!description":"First page event","!type":"String","!category":"enum"}},"sap.ui.commons.CalloutBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.CalloutBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.TooltipBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.CalloutBase"},"sap.ui.commons.TreeNode_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TreeNode with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.TreeNode"},"sap.ui.commons.RoadMapStep":{"insertSubStep":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Inserts a subStep into the aggregation named <code>subSteps<\/code>.","!type":"fn(oSubStep: sap.ui.commons.RoadMapStep, iIndex: Number) -> sap.ui.commons.RoadMapStep","!category":"function"},"removeSubStep":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Removes a subStep from the aggregation named <code>subSteps<\/code>.","!type":"fn(vSubStep: Number | String | sap.ui.commons.RoadMapStep) -> sap.ui.commons.RoadMapStep","!category":"function"},"getEnabled":{"!description":"Getter for property <code>enabled<\/code>.\n\nSpecifies whether the user shall be allowed to click a step, or not\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getExpanded":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Note that sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Getter for property <code>expanded<\/code>.\n\nThis property is only relevant when using sub steps.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setVisible":{"!description":"Setter for property <code>visible<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisible: Boolean) -> sap.ui.commons.RoadMapStep","!category":"function"},"indexOfSubStep":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Checks for the provided <code>sap.ui.commons.RoadMapStep<\/code> in the aggregation named <code>subSteps<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oSubStep: sap.ui.commons.RoadMapStep) -> Number","!category":"function"},"setLabel":{"!description":"Setter for property <code>label<\/code>.","!type":"fn(sLabel: String) -> sap.ui.commons.RoadMapStep","!category":"function"},"getLabel":{"!description":"Getter for property <code>label<\/code>.\n\nLabel of the step","!type":"fn() -> String","!category":"function"},"getVisible":{"!description":"Getter for property <code>visible<\/code>.\n\nStep is visible\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"!description":"Step used within a RoadMap Control.","removeAllSubSteps":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Removes all the controls in the aggregation named <code>subSteps<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.RoadMapStep]","!category":"function"},"setExpanded":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Note that sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Setter for property <code>expanded<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bExpanded: Boolean) -> sap.ui.commons.RoadMapStep","!category":"function"},"getSubSteps":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Getter for aggregation <code>subSteps<\/code>.\n\nSub steps for the current step. Will be displayed only in the case that the step is expanded. Otherwise, special arrows show the availability\nof sub steps. One level of sub steps supported.","!type":"fn() -> [sap.ui.commons.RoadMapStep]","!category":"function"},"!category":"class","setEnabled":{"!description":"Setter for property <code>enabled<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.RoadMapStep","!category":"function"},"addSubStep":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Adds some subStep into the aggregation named <code>subSteps<\/code>.","!type":"fn(oSubStep: sap.ui.commons.RoadMapStep) -> sap.ui.commons.RoadMapStep","!category":"function"},"destroySubSteps":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Destroys all the subSteps in the aggregation\nnamed <code>subSteps<\/code>.","!type":"fn() -> sap.ui.commons.RoadMapStep","!category":"function"},"!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RoadMapStep.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.DropdownBox":{"onAfterRendering":{"!description":"Ensure that handed in ListBoxes are taken from the visible UI immediately.","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"onsapdelete":{"!description":"Handle pseudo event onsapdelete.\nIf triggered with open dropdown and current item provided by history feature,\nremoves the selected item from this instance's history.","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"onsapright":{"!description":"Move the cursor one step to the right (and adapt selection)","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"setSearchHelpAdditionalText":{"!description":"Overwrite of Setter for property <code>searchHelpAdditionalText<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(sSearchHelpAdditionalText: String) -> sap.ui.commons.DropdownBox","!category":"function"},"setMaxHistoryItems":{"!description":"Setter for property <code>maxHistoryItems<\/code>.\n\nDefault value is <code>0<\/code>.","!type":"fn(iMaxHistoryItems: Number) -> sap.ui.commons.DropdownBox","!category":"function"},"fireSearchHelp":{"!description":"Fire event searchHelp to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'value' of type <code>string<\/code>The current value of the DropdownBox.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.DropdownBox","!category":"function"},"setSearchHelpIcon":{"!description":"Overwrite of Setter for property <code>searchHelpIcon<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(sSearchHelpIcon: sap.ui.core.URI) -> sap.ui.commons.DropdownBox","!category":"function"},"onsapleft":{"!description":"Move the cursor one step to the left (and adapt selection)","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"getSearchHelpEnabled":{"!description":"Getter for property <code>searchHelpEnabled<\/code>.\n\nWhether the DropdownBox's search help should be enabled.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"!category":"class","clearHistory":{"!description":"Using this method the history of the DropdownBox can be cleared.\nThis might be necessary if the items of the DropdownBox have changed. Otherwise invalid items may appear in the history.","!type":"fn()","!category":"function"},"setSearchHelpEnabled":{"!description":"Overwrite of Setter for property <code>searchHelpEnabled<\/code>.\nThis method accepts additional parameter to be compatiple with the\nprevious functionality\n\nDefault value is <code>false<\/code>","!type":"fn(bEnabled: Boolean, sText: String, sAdditionalText: String, sIcon: String) -> sap.ui.commons.DropdownBox","!category":"function"},"attachSearchHelp":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'searchHelp' event of this <code>sap.ui.commons.DropdownBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.DropdownBox<\/code> itself.\n\nEvent fired whenever the configured searchHelpItem is clicked or the searchHelpItem is configured and F4 key is pressed.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.DropdownBox","!category":"function"},"detachSearchHelp":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'searchHelp' event of this <code>sap.ui.commons.DropdownBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.DropdownBox","!category":"function"},"onkeyup":{"!description":"Handle keyup event\nThis must only be considered if it is from Backspace-key in IE or after paste.\nIn case there is a keyup with a tab this results from being entered via tabbing and can be ignored, too.","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"onkeydown":{"!description":"Handle keydown event","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"onkeypress":{"!description":"Handle keypress event","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"getSearchHelpAdditionalText":{"!description":"Getter for property <code>searchHelpAdditionalText<\/code>.\n\n(optional) The additional Text to use for the search help entry.","!type":"fn() -> String","!category":"function"},"setSearchHelpText":{"!description":"Overwrite of Setter for property <code>searchHelpText<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(sSearchHelpText: String) -> sap.ui.commons.DropdownBox","!category":"function"},"getSearchHelpText":{"!description":"Getter for property <code>searchHelpText<\/code>.\n\n(optional) The text to use for the search help entry.","!type":"fn() -> String","!category":"function"},"getSearchHelpIcon":{"!description":"Getter for property <code>searchHelpIcon<\/code>.\n\n(optional) The URI of the icon to use for the search help entry.","!type":"fn() -> sap.ui.core.URI","!category":"function"},"onsaphome":{"!description":"Handle pseudo event onsaphome","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"!description":"The control provides a field that allows end users to an entry out of a list of pre-defined items.\nThe choosable items can be provided in the form of a complete <code>ListBox<\/code>, single <code>ListItems<\/code>.","onselect":{"!description":"Handle the select event happening in the DropdownBox","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"getTooltip_AsString":{"!description":"Extends the method inherited from sap.ui.core.Element by providing information on Search Help access (if needed)","!type":"fn() -> String","!category":"function"},"onpaste":{"!description":"Handle paste event","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"onclick":{"!description":"Handle the click event happening in the DropdownBox","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"onsapshow":{"!description":"Handle sapshow pseudo events on the control","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"onfocusin":{"!description":"Handle focusin event\nEnsures the text gets selected when focus gets into the field","!type":"fn(oEvent: jQuery.Event)","!category":"function"},"getMaxHistoryItems":{"!description":"Getter for property <code>maxHistoryItems<\/code>.\n\nMaximum number of history items in the list.\n\nIf 0 no history is displayed or stored. The history is locally stored on the client.\nTherefore do not activate this feature when this control handles confidential data.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.DropdownBox.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.commons.ComboBox"},"sap.ui.commons.layout.BorderLayoutAreaTypes":{"center":{"!description":"Value to identify the center area.","!type":"String","!category":"enum"},"!description":"The type (=position) of a BorderLayoutArea","bottom":{"!description":"Value to identify the bottom area.","!type":"String","!category":"enum"},"!category":"static class","end":{"!description":"Value to identify the end area.","!type":"String","!category":"enum"},"top":{"!description":"Value to identify the top area.","!type":"String","!category":"enum"},"begin":{"!description":"Value to identify the begin area.","!type":"String","!category":"enum"}},"sap.ui.commons.Title":{"setLevel":{"!description":"Setter for property <code>level<\/code>.\n\nDefault value is <code>Auto<\/code>","!type":"fn(oLevel: sap.ui.commons.TitleLevel) -> sap.ui.commons.Title","!category":"function"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.core library. Please use this one.<br>Represents a title element that can be used for aggregation with other controls","!category":"class","getLevel":{"!description":"Getter for property <code>level<\/code>.\nDefines the level of the title. If set to auto the level of the title is chosen by the control rendering the title.\n\nCurrently not all controls using the Title.control supporting this property.\n\nDefault value is <code>Auto<\/code>","!type":"fn() -> sap.ui.commons.TitleLevel","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Title.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Title"},"sap.ui.commons.Image_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Image with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Image"},"sap.ui.commons.ProgressIndicator":{"getEnabled":{"!description":"Getter for property <code>enabled<\/code>.\n\nSwitches enabled state of the control. Disabled fields have different colors, and can not be focused.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getPercentValue":{"!description":"Getter for property <code>percentValue<\/code>.\n\nThe numerical value for the displayed length of the progress bar.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function"},"getBarColor":{"!description":"Getter for property <code>barColor<\/code>.\n\nThe color of the bar. Enumeration sap.ui.core.BarColor provides CRITICAL (yellow), NEGATIVE (red), POSITIVE (green), NEUTRAL (blue) (default value).\n\nDefault value is <code>NEUTRAL<\/code>.","!type":"fn() -> sap.ui.core.BarColor","!category":"function"},"setBarColor":{"!description":"Setter for property <code>barColor<\/code>.\n\nDefault value is <code>NEUTRAL<\/code>.","!type":"fn(sBarColor: sap.ui.core.BarColor) -> sap.ui.commons.ProgressIndicator","!category":"function"},"setDisplayValue":{"!description":"Setter for property <code>displayValue<\/code>.\n\nDefault value is <code>0%<\/code>.","!type":"fn(sDisplayValue: String) -> sap.ui.commons.ProgressIndicator","!category":"function"},"setShowValue":{"!description":"Setter for property <code>showValue<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowValue: Boolean) -> sap.ui.commons.ProgressIndicator","!category":"function"},"getShowValue":{"!description":"Getter for property <code>showValue<\/code>.\n\nSpecifies whether the current value shall be rendered inside the bar.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"!description":"Shows the progress of a process in a graphical way. The indicator can be displayed with or without numerical values.\nThe filling can be displayed in color only, or additionally with the percentage rate. The indicator status can be interactive.","setPercentValue":{"!description":"Property setter for the PercentValue\nA new rendering is not necessary, only the bar has to be moved.","!type":"fn(iPercentValue: Number) -> sap.ui.commons.ProgressIndicator","!category":"function"},"!category":"class","setEnabled":{"!description":"Setter for property <code>enabled<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.ProgressIndicator","!category":"function"},"getDisplayValue":{"!description":"Getter for property <code>displayValue<\/code>.\n\nThe text value to be displayed in the bar.\n\nDefault value is <code>0%<\/code>.","!type":"fn() -> String","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nThe width of the control.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.ProgressIndicator","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ProgressIndicator.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.MessageBox.Action":{"YES":{"!description":"Adds a \"Yes\" button to the message box.","!type":"String","!category":"enum"},"OK":{"!description":"Adds an \"Ok\" button to the message box.","!type":"String","!category":"enum"},"!description":"Enumeration of supported actions in a MessageBox.\n\nEach action is represented as a button in the message box. The values of this enumeration are used for both,\nspecifying the set of allowed actions as well as reporting back the user choice.","IGNORE":{"!description":"Adds an \"Ignore\" button to the message box.","!type":"String","!category":"enum"},"CLOSE":{"!description":"Adds a \"Close\" button to the message box.","!type":"String","!category":"enum"},"ABORT":{"!description":"Adds an \"Abort\" button to the message box.","!type":"String","!category":"enum"},"!category":"static class","RETRY":{"!description":"Adds a \"Retry\" button to the message box.","!type":"String","!category":"enum"},"NO":{"!description":"Adds a \"No\" button to the message box.","!type":"String","!category":"enum"},"CANCEL":{"!description":"Adds a \"Cancel\" button to the message box.","!type":"String","!category":"enum"}},"sap.ui.commons.form.GridElementData":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>The grid specific layout data for FormElement fields.\nThe width property of the elements is ignored since the width is defined by grid cells.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.GridElementData.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.layout.form.GridElementData"},"sap.ui.commons.AccordionSection":{"fireScroll":{"!description":"Fire event scroll to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'left' of type <code>int<\/code>Horizontal scroll position.<\/li>\n<li>'top' of type <code>int<\/code>Vertical scroll position.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.AccordionSection","!category":"function"},"addContent":{"!description":"Adds some content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.AccordionSection","!category":"function"},"setMaxHeight":{"!description":"Setter for property <code>maxHeight<\/code>.","!type":"fn(sMaxHeight: sap.ui.core.CSSSize) -> sap.ui.commons.AccordionSection","!category":"function"},"removeAllContent":{"!description":"Removes all the controls in the aggregation named <code>content<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getContent":{"!description":"Getter for aggregation <code>content<\/code>.\n\nAggregates the controls that are contained in the panel. Control layout is browser-dependent. For a stable content layout, use a layout control as direct single child.\nWhen the panel dimensions are set, the child control may have width and height of 100%;\nwhen the panel dimensions are not set, the child defines the panel size.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getEnabled":{"!description":"Getter for property <code>enabled<\/code>.\n\nRequirement is that the used theme supports the control.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function"},"detachScroll":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'scroll' event of this <code>sap.ui.commons.AccordionSection<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.AccordionSection","!category":"function"},"removeContent":{"!description":"Removes a content from the aggregation named <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"destroyContent":{"!description":"Destroys all the content in the aggregation\nnamed <code>content<\/code>.","!type":"fn() -> sap.ui.commons.AccordionSection","!category":"function"},"setCollapsed":{"!description":"Property setter for the \"collapsed\" state","!type":"fn(bCollapsed: Boolean) -> sap.ui.commons.AccordionSection","!category":"function"},"insertContent":{"!description":"Inserts a content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.AccordionSection","!category":"function"},"!description":"Represents a panel which is a container for other controls. The container does not have any layout function.","getCollapsed":{"!description":"Getter for property <code>collapsed<\/code>.\n\nIt is recommended to make some settings for the width when the section is set to 'collapsed'.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getMaxHeight":{"!description":"Getter for property <code>maxHeight<\/code>.\n\nWhen the section content exceeds maxHeight, a vertical scroll bar appears.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setTitle":{"!description":"Setter for property <code>title<\/code>.","!type":"fn(sTitle: String) -> sap.ui.commons.AccordionSection","!category":"function"},"!category":"class","setEnabled":{"!description":"Property setter for the \"enabled\" state","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.AccordionSection","!category":"function"},"attachScroll":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'scroll' event of this <code>sap.ui.commons.AccordionSection<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.AccordionSection<\/code> itself.\n\nEvent is fired when the user scrolls the panel.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.AccordionSection","!category":"function"},"getTitle":{"!description":"Getter for property <code>title<\/code>.\n\nText for the section header","!type":"fn() -> String","!category":"function"},"!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.AccordionSection.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.layout.MatrixLayoutRow_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.MatrixLayoutRow with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.MatrixLayoutRow"},"sap.ui.commons.Callout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Callout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.CalloutBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Callout"},"sap.ui.commons.Accordion":{"fireSectionsReorder":{"!description":"Fire event sectionsReorder to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'movedSectionId' of type <code>string<\/code>ID of the moved section.<\/li>\n<li>'newIndex' of type <code>int<\/code>New index of the moved section.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.Accordion","!category":"function"},"openSection":{"!description":"Opens a section.","!type":"fn(sSectionId: String)","!category":"function"},"insertSection":{"!description":"Inserts a section into the aggregation named <code>sections<\/code>.","!type":"fn(oSection: sap.ui.commons.AccordionSection, iIndex: Number) -> sap.ui.commons.Accordion","!category":"function"},"attachSectionsReorder":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'sectionsReorder' event of this <code>sap.ui.commons.Accordion<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.Accordion<\/code> itself.\n\nTriggered when the user changes the position of a section.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Accordion","!category":"function"},"fireSectionOpen":{"!description":"Fire event sectionOpen to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'openSectionId' of type <code>string<\/code>ID of the opened section<\/li>\n<li>'closeSectionIds' of type <code>string[]<\/code>IDs of the sections that shall be closed. Can be initial in the case of no previously opened section.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.Accordion","!category":"function"},"removeSection":{"!description":"Removes a section from the aggregation named <code>sections<\/code>.","!type":"fn(vSection: Number | String | sap.ui.commons.AccordionSection) -> sap.ui.commons.AccordionSection","!category":"function"},"detachSectionsReorder":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'sectionsReorder' event of this <code>sap.ui.commons.Accordion<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Accordion","!category":"function"},"indexOfSection":{"!description":"Checks for the provided <code>sap.ui.commons.AccordionSection<\/code> in the aggregation named <code>sections<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oSection: sap.ui.commons.AccordionSection) -> Number","!category":"function"},"addSection":{"!description":"Adds some section into the aggregation named <code>sections<\/code>.","!type":"fn(oSection: sap.ui.commons.AccordionSection) -> sap.ui.commons.Accordion","!category":"function"},"!category":"class","getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nWhen the width specified is smaller than a section content, a horizontal scroll bar is provided.\n\nDefault value is <code>200px<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.\n\nDefault value is <code>200px<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Accordion","!category":"function"},"closeSection":{"!description":"Closes a section, and opens the default one","!type":"fn(sSectionId: String)","!category":"function"},"attachSectionClose":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'sectionClose' event of this <code>sap.ui.commons.Accordion<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.Accordion<\/code> itself.\n\nEvent is triggered when the user closes a section.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Accordion","!category":"function"},"attachSectionOpen":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'sectionOpen' event of this <code>sap.ui.commons.Accordion<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.Accordion<\/code> itself.\n\nEvent is triggered when the user opens a section.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Accordion","!category":"function"},"setOpenedSectionsId":{"!description":"Redefinition of the method to add additional handling","!type":"fn(sOpenedSectionsId: String) -> sap.ui.commons.Accordion","!category":"function"},"destroySections":{"!description":"Destroys all the sections in the aggregation\nnamed <code>sections<\/code>.","!type":"fn() -> sap.ui.commons.Accordion","!category":"function"},"detachSectionOpen":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'sectionOpen' event of this <code>sap.ui.commons.Accordion<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Accordion","!category":"function"},"getOpenedSectionsId":{"!description":"Getter for property <code>openedSectionsId<\/code>.\n\nSection IDs that shall be opened by default at application start.","!type":"fn() -> String","!category":"function"},"!description":"Contains N sections which act as containers for any library controls","getSections":{"!description":"Getter for aggregation <code>sections<\/code>.\n\nEmpty container used to display any library controls.","!type":"fn() -> [sap.ui.commons.AccordionSection]","!category":"function"},"detachSectionClose":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'sectionClose' event of this <code>sap.ui.commons.Accordion<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Accordion","!category":"function"},"removeAllSections":{"!description":"Removes all the controls in the aggregation named <code>sections<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.AccordionSection]","!category":"function"},"fireSectionClose":{"!description":"Fire event sectionClose to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'closeSectionId' of type <code>string<\/code>ID of the closed section<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.Accordion","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Accordion.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.commons.MenuButton":{"setDockMenu":{"!description":"Setter for property <code>dockMenu<\/code>.","!type":"fn(sDockMenu: String) -> sap.ui.commons.MenuButton","!category":"function"},"setDockButton":{"!description":"Setter for property <code>dockButton<\/code>.","!type":"fn(sDockButton: String) -> sap.ui.commons.MenuButton","!category":"function"},"fireItemSelected":{"!description":"Fire event itemSelected to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'itemId' of type <code>string<\/code>The ID of the selected item<\/li>\n<li>'item' of type <code>sap.ui.unified.MenuItemBase<\/code>The selected item<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.MenuButton","!category":"function"},"firePress":{"!description":"Fire event press to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.commons.MenuButton","!category":"function"},"setMenu":{"!description":"Setter for the aggregated <code>menu<\/code>.","!type":"fn(oMenu: sap.ui.unified.Menu) -> sap.ui.commons.MenuButton","!category":"function"},"attachPress":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'press' event of this <code>sap.ui.commons.MenuButton<\/code>.<br/>\n\nEvent is fired when an item from the menu was selected.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.MenuButton","!category":"function"},"attachItemSelected":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'itemSelected' event of this <code>sap.ui.commons.MenuButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.commons.MenuButton<\/code> itself.\n\nEvent that is fired when a menu item is selected by the user","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.MenuButton","!category":"function"},"!description":"Common button control that opens a menu when clicked by the user. The control provides an API for configuring the docking position\nof the menu.","destroyMenu":{"!description":"Destroys the menu in the aggregation\nnamed <code>menu<\/code>.","!type":"fn() -> sap.ui.commons.MenuButton","!category":"function"},"getDockButton":{"!description":"Getter for property <code>dockButton<\/code>.\n\nThe position / edge (see sap.ui.core.Popup.Dock) of the button where the menu is docked. Default is 'begin bottom'.","!type":"fn() -> String","!category":"function"},"!category":"class","getMenu":{"!description":"Getter for aggregation <code>menu<\/code>.\n\nMenu that shall be opened when the button is clicked","!type":"fn() -> sap.ui.unified.Menu","!category":"function"},"detachItemSelected":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'itemSelected' event of this <code>sap.ui.commons.MenuButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.MenuButton","!category":"function"},"detachPress":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'press' event of this <code>sap.ui.commons.MenuButton<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.MenuButton","!category":"function"},"getDockMenu":{"!description":"Getter for property <code>dockMenu<\/code>.\n\nThe position / edge (see sap.ui.core.Popup.Dock) of the menu which is docked to the button. Default is 'begin top'.","!type":"fn() -> String","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.MenuButton.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.commons.Button"},"sap.ui.commons.HorizontalDivider_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.HorizontalDivider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.HorizontalDivider"}},"!name":"sap.ui.commons"}