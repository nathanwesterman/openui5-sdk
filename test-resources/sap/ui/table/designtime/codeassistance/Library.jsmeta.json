{"!define":{"sap.ui.table.DataTable_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.table.DataTable with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.table.TreeTable.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.table.DataTable"},"sap.ui.table.AnalyticalTable_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.table.AnalyticalTable with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.table.Table.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.table.AnalyticalTable"},"sap.ui.table.TablePersoController_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.table.TablePersoController with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.table.TablePersoController"},"sap.ui.table.TreeAutoExpandMode":{"Bundled":{"!description":"If supported by a backend provider with analytical capabilities, the requests needed for an automatic node expansion are bundled.","!type":"String","!category":"enum"},"!description":"Different modes for setting the auto expand mode on different tables (Analytical-, TreeTable, ...)","!category":"namespace","Sequential":{"!description":"Tree nodes will be expanded in sequence, level by level (Single requests are sent)","!type":"String","!category":"enum"}},"sap.ui.table.GroupEventType":{"ungroupAll":{"!description":"Ungroup All Columns","!type":"String","!category":"enum"},"showGroupedColumn":{"!description":"Show grouped column also as a column, not just as group header","!type":"String","!category":"enum"},"!description":"Details about the group event to distinguish between different actions associated with grouping","moveDown":{"!description":"Change the group order of the columns. Move column one position down in the group sequence","!type":"String","!category":"enum"},"!category":"static class","ungroup":{"!description":"Ungroup Column","!type":"String","!category":"enum"},"moveUp":{"!description":"Change the group order of the columns. Move column one position up in the group sequence","!type":"String","!category":"enum"},"hideGroupedColumn":{"!description":"Show grouped column only as group header","!type":"String","!category":"enum"},"group":{"!description":"Group Column","!type":"String","!category":"enum"}},"sap.ui.table.Column":{"setDefaultFilterOperator":{"!description":"Setter for property <code>defaultFilterOperator<\/code>.","!type":"fn(sDefaultFilterOperator: String) -> sap.ui.table.Column","!category":"function"},"toggleSort":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.1 Please use the function \"sap.ui.Table.prototype.sort\".<br>toggles the sort order of the column","!type":"fn() -> sap.ui.table.Column","!category":"function"},"getFilterType":{"!description":"Getter for property <code>filterType<\/code>.\n\nType of Filter. This is used to transform the search term to the specified type, to make sure that the right columns are displayed. This should be the same as defined in binding for this column. As alternative you can pass a function which does the conversion. The function receives the entered filter value as parameter and returns the proper value for the filter expression. Another option is to pass the classname of the type, e.g.: sap.ui.model.type.Date or an expression similar to the binding syntax, e.g.: \"\\{type: 'sap.ui.model.type.Date', formatOptions: \\{UTC: true\\}, constraints: {} \\}\". Here the escaping is mandatory to avoid handling by the binding parser. By default the filter type is sap.ui.model.type.String.","!type":"fn() -> Object","!category":"function"},"removeMultiLabel":{"!description":"Removes a multiLabel from the aggregation named <code>multiLabels<\/code>.","!type":"fn(vMultiLabel: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"destroyMultiLabels":{"!description":"Destroys all the multiLabels in the aggregation\nnamed <code>multiLabels<\/code>.","!type":"fn() -> sap.ui.table.Column","!category":"function"},"getShowSortMenuEntry":{"!description":"Getter for property <code>showSortMenuEntry<\/code>.\n\nDefine if the sort menu entries are displayed\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getResizable":{"!description":"Getter for property <code>resizable<\/code>.\n\nIs the column resizable or not?\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setShowSortMenuEntry":{"!description":"Setter for property <code>showSortMenuEntry<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowSortMenuEntry: Boolean) -> sap.ui.table.Column","!category":"function"},"getGrouped":{"!description":"Getter for property <code>grouped<\/code>.\n\nflag, if the column is grouped or not (hides the column!)\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getSortOrder":{"!description":"Getter for property <code>sortOrder<\/code>.\n\nSort order for this column.\n\nDefault value is <code>Ascending<\/code>.","!type":"fn() -> sap.ui.table.SortOrder","!category":"function"},"setFiltered":{"!description":"Setter for property <code>filtered<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bFiltered: Boolean) -> sap.ui.table.Column","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nWidth of the column.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getFlexible":{"!description":"Getter for property <code>flexible<\/code>.\n\nIs the width of the column flexible (grows on resize)?\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setFilterType":{"!description":"Setter for property <code>filterType<\/code>.","!type":"fn(oFilterType: Object) -> sap.ui.table.Column","!category":"function"},"setHAlign":{"!description":"Setter for property <code>hAlign<\/code>.\n\nDefault value is <code>Begin<\/code>.","!type":"fn(sHAlign: sap.ui.core.HorizontalAlign) -> sap.ui.table.Column","!category":"function"},"shouldRender":{"!description":"Returns whether the column should be rendered or not.","!type":"fn() -> Boolean","!category":"function"},"getFiltered":{"!description":"Getter for property <code>filtered<\/code>.\n\nflag, if the column is filtered or not (displays the filter indicator, does not trigger the filter method!)\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"indexOfMultiLabel":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>multiLabels<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oMultiLabel: sap.ui.core.Control) -> Number","!category":"function"},"getHeaderSpan":{"!description":"Getter for property <code>headerSpan<\/code>.\n\nIf this property is set a span is applied for the header. When moving columns all columns which are part of the header will be moved. This can be either an integer or an array of integers (if you use the multi header feature of the table). If you only specify an integer this span is applied for all header rows, with multiple integers you can specify a seperate span for each header row.\n\nDefault value is <code>1<\/code>.","!type":"fn() -> Object","!category":"function"},"setShowFilterMenuEntry":{"!description":"Setter for property <code>showFilterMenuEntry<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowFilterMenuEntry: Boolean) -> sap.ui.table.Column","!category":"function"},"getVisible":{"!description":"Getter for property <code>visible<\/code>.\n\nInvisible controls are not rendered.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setFilterValue":{"!description":"Setter for property <code>filterValue<\/code>.","!type":"fn(sFilterValue: String) -> sap.ui.table.Column","!category":"function"},"setSortOrder":{"!description":"Setter for property <code>sortOrder<\/code>.\n\nDefault value is <code>Ascending<\/code>.","!type":"fn(sSortOrder: sap.ui.table.SortOrder) -> sap.ui.table.Column","!category":"function"},"setTemplate":{"!description":"Setter for the aggregated <code>template<\/code>.","!type":"fn(oTemplate: sap.ui.core.Control) -> sap.ui.table.Column","!category":"function"},"setName":{"!description":"Setter for property <code>name<\/code>.","!type":"fn(sName: String) -> sap.ui.table.Column","!category":"function"},"getHAlign":{"!description":"Getter for property <code>hAlign<\/code>.\n\nHorizontal alignment of the column content. Controls with a text align do not inherit the horizontal alignment. You have to set the text align directly on the template.\n\nDefault value is <code>Begin<\/code>.","!type":"fn() -> sap.ui.core.HorizontalAlign","!category":"function"},"!proto":"sap.ui.core.Element","setHeaderSpan":{"!description":"Setter for property <code>headerSpan<\/code>.\n\nDefault value is <code>1<\/code>.","!type":"fn(oHeaderSpan: Object) -> sap.ui.table.Column","!category":"function"},"getSortProperty":{"!description":"Getter for property <code>sortProperty<\/code>.\n\nSpecifies the binding property on which the column will sort.","!type":"fn() -> String","!category":"function"},"sort":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.1 Please use the function \"sap.ui.Table.prototype.sort\".<br>sorts the current column ascending or descending","!type":"function sort() { [native code for Array.sort, arity=1] }\n, bDescending: Boolean) -> sap.ui.table.Column","!category":"function"},"setSorted":{"!description":"Setter for property <code>sorted<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bSorted: Boolean) -> sap.ui.table.Column","!category":"function"},"setLabel":{"!description":"Setter for the aggregated <code>label<\/code>.","!type":"fn(oLabel: sap.ui.core.Control) -> sap.ui.table.Column","!category":"function"},"insertMultiLabel":{"!description":"Inserts a multiLabel into the aggregation named <code>multiLabels<\/code>.","!type":"fn(oMultiLabel: sap.ui.core.Control, iIndex: Number) -> sap.ui.table.Column","!category":"function"},"destroyLabel":{"!description":"Destroys the label in the aggregation\nnamed <code>label<\/code>.","!type":"fn() -> sap.ui.table.Column","!category":"function"},"getFilterValue":{"!description":"Getter for property <code>filterValue<\/code>.\n\nSpecifies the value of the filter as string (will be converted into the propert data type).","!type":"fn() -> String","!category":"function"},"destroyMenu":{"!description":"Destroys the menu in the aggregation\nnamed <code>menu<\/code>.","!type":"fn() -> sap.ui.table.Column","!category":"function"},"getDefaultFilterOperator":{"!description":"Getter for property <code>defaultFilterOperator<\/code>.\n\nIf this property is set the default filter operator of the column is overwritten.\nBy default \"Contains\" is used for string and \"EQ\" for other types. A valid sap.ui.model.FilterOperator needs to be passed.","!type":"fn() -> String","!category":"function"},"getFilterProperty":{"!description":"Getter for property <code>filterProperty<\/code>.\n\nSpecifies the binding property on which the column will filter.","!type":"fn() -> String","!category":"function"},"!category":"class","setWidth":{"!description":"Setter for property <code>width<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.table.Column","!category":"function"},"getMultiLabels":{"!description":"Getter for aggregation <code>multiLabels<\/code>.\n\nLabels (header renderer) of the column which are displayed in the column header. Define a control for each header row in the table. Use this aggregation, if you want to use multiple headers per column.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getSorted":{"!description":"Getter for property <code>sorted<\/code>.\n\nflag, if the column is sorted or not (displays the sorting indicator, does not trigger the sort method!)\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getTemplate":{"!description":"Getter for aggregation <code>template<\/code>.\n\nTemplate (cell renderer) of this column. A template is decoupled from the column which means after changing the templates' properties or aggregations an explicit invalidation of the column or table is required. The default is: sap.ui.commons.TextView.","!type":"fn() -> sap.ui.core.Control","!category":"function"},"destroyTemplate":{"!description":"Destroys the template in the aggregation\nnamed <code>template<\/code>.","!type":"fn() -> sap.ui.table.Column","!category":"function"},"getFilterOperator":{"!description":"Getter for property <code>filterOperator<\/code>.\n\nFilter operator to use when filtering this column.","!type":"fn() -> String","!category":"function"},"setGrouped":{"!description":"Setter for property <code>grouped<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bGrouped: Boolean) -> sap.ui.table.Column","!category":"function"},"setVisible":{"!description":"Setter for property <code>visible<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisible: Boolean) -> sap.ui.table.Column","!category":"function"},"setMenu":{"!description":"Setter for the aggregated <code>menu<\/code>.","!type":"fn(oMenu: sap.ui.unified.Menu) -> sap.ui.table.Column","!category":"function"},"removeAllMultiLabels":{"!description":"Removes all the controls in the aggregation named <code>multiLabels<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getLabel":{"!description":"Getter for aggregation <code>label<\/code>.\n\nLabel (header renderer) of the column which is displayed in the column header. Define a control for each header row in the table. This aggregation is for the standard behaviour, if you only want to display one single row header.","!type":"fn() -> sap.ui.core.Control","!category":"function"},"setAutoResizable":{"!description":"Setter for property <code>autoResizable<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bAutoResizable: Boolean) -> sap.ui.table.Column","!category":"function"},"setFlexible":{"!description":"Setter for property <code>flexible<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bFlexible: Boolean) -> sap.ui.table.Column","!category":"function"},"addMultiLabel":{"!description":"Adds some multiLabel into the aggregation named <code>multiLabels<\/code>.","!type":"fn(oMultiLabel: sap.ui.core.Control) -> sap.ui.table.Column","!category":"function"},"!description":"The column allows to define column specific properties that will be applied when rendering the table.","setSortProperty":{"!description":"Setter for property <code>sortProperty<\/code>.","!type":"fn(sSortProperty: String) -> sap.ui.table.Column","!category":"function"},"getName":{"!description":"Getter for property <code>name<\/code>.\n\nThe name of the column which is used in the column visibility menu item as text. If not set as fallback the column menu tries to get the text from the nested Label.","!type":"fn() -> String","!category":"function"},"getAutoResizable":{"!description":"Getter for property <code>autoResizable<\/code>.\n\nEnables auto-resizing of the column on doubleclicking the resizer. Currently only implemented to work with the following controls: sap.m.Text, sap.m.Label, sap.m.Link , sap.m.Input, sap.ui.commons.TextView, sap.ui.commons.Label, sap.ui.commons.Link and sap.ui.commons.TextField, sap.ui.commons.Checkbox, sap.m.Checkbox\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setResizable":{"!description":"Setter for property <code>resizable<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bResizable: Boolean) -> sap.ui.table.Column","!category":"function"},"getMenu":{"!description":"Getter for aggregation <code>menu<\/code>.\n\nThe menu used by the column. By default the {@link sap.ui.table.ColumnMenu} is used.","!type":"fn() -> sap.ui.unified.Menu","!category":"function"},"setFilterOperator":{"!description":"Setter for property <code>filterOperator<\/code>.","!type":"fn(sFilterOperator: String) -> sap.ui.table.Column","!category":"function"},"setFilterProperty":{"!description":"Setter for property <code>filterProperty<\/code>.","!type":"fn(sFilterProperty: String) -> sap.ui.table.Column","!category":"function"},"getShowFilterMenuEntry":{"!description":"Getter for property <code>showFilterMenuEntry<\/code>.\n\nDefine if the filter menu entry is displayed\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.table.Column.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.table.DataTable":{"attachRowSelect":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'rowSelect' event of this <code>sap.ui.table.DataTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.table.DataTable<\/code> itself.\n\nfired when the row selection of the table has been changed","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.table.DataTable","!category":"function"},"detachRowSelect":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'rowSelect' event of this <code>sap.ui.table.DataTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.table.DataTable","!category":"function"},"getHierarchical":{"!description":"Getter for property <code>hierarchical<\/code>.\n\nFlag, whether the table displays its content hierarchical or not (**experimental**!!)\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setHierarchical":{"!description":"Setter for property <code>hierarchical<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bHierarchical: Boolean) -> sap.ui.table.DataTable","!category":"function"},"getExpanded":{"!description":"Getter for property <code>expanded<\/code>.\n\nFlag whether the Table is expanded or not\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getExpandedVisibleRowCount":{"!description":"Getter for property <code>expandedVisibleRowCount<\/code>.\n\nCount of visible rows when expanded","!type":"fn() -> Number","!category":"function"},"setExpandedVisibleRowCount":{"!description":"Setter for property <code>expandedVisibleRowCount<\/code>.","!type":"fn(iExpandedVisibleRowCount: Number) -> sap.ui.table.DataTable","!category":"function"},"fireRowSelect":{"!description":"Fire event rowSelect to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'rowIndex' of type <code>int<\/code>row index which row has been selected or deselected<\/li>\n<li>'rowContext' of type <code>object<\/code>binding context of the row index which row has been selected or deselected<\/li>\n<li>'rowIndices' of type <code>int[]<\/code>array of row indices which selection has been changed (either selected or deselected)<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.table.DataTable","!category":"function"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.1 The DataTable has been replaced via the Table/TreeTable control.<br>The DataTable control provides a set of sophisticated and comfort functions for table design. For example, you can make settings for the number of visible rows and a number for the displayed rows in the case the user expands the table. The first visible row can be explicitly set. For the selection of columns and rows, a Multi, a Single, a None, and an All mode are available. Setting the Editable property to true lets the user make changes on the table cell entries.","setExpanded":{"!description":"Setter for property <code>expanded<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bExpanded: Boolean) -> sap.ui.table.DataTable","!category":"function"},"!category":"class","!proto":"sap.ui.table.TreeTable","getMetadata":{"!description":"Returns a metadata object for class sap.ui.table.DataTable.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.table.AnalyticalTable":{"getNumberOfExpandedLevels":{"!description":"Getter for property <code>numberOfExpandedLevels<\/code>.\n\nNumber of levels, which should be opened initially (on first load of data).\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function"},"setSelectionInterval":{"!description":"Sets the selection of the TreeTable to the given range (including boundaries).\nBeware: The previous selection will be lost/overriden. If this is not wanted, please use \"addSelectionInterval\" and\n\"removeSelectionIntervall\".","!type":"fn(iFromIndex: Number, iToIndex: Number) -> sap.ui.table.TreeTable","!category":"function"},"setDirty":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.2 Please use setShowOverlay instead.<br>Setter for property <code>dirty<\/code>.","!type":"fn(bDirty: Boolean) -> sap.ui.table.AnalyticalTable","!category":"function"},"getDirty":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.2 Please use setShowOverlay instead.<br>Getter for property <code>dirty<\/code>.\n\nIf dirty the content of the Table will be overlayed.","!type":"fn() -> Boolean","!category":"function"},"getCollapseRecursive":{"!description":"Getter for property <code>collapseRecursive<\/code>.\n\nSetting collapseRecursive to true means, that when collapsing a node all subsequent child nodes will also be collapsed.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getTotalSize":{"!description":"Returns the total size of the data entries.","!type":"fn() -> Number","!category":"function"},"setSelectionMode":{"!description":"Sets the selection mode. The current selection is lost.","!type":"fn(sSelectionMode: String)","!category":"function"},"collapseAll":{"!description":"Collapses all nodes (and lower if collapseRecursive is activated)","!type":"fn() -> sap.ui.table.TreeTable","!category":"function"},"getContextByIndex":{"!description":"Returns the context of a row by its index.","!type":"fn(iIndex: Number) -> Object","!category":"function"},"!category":"class","setNumberOfExpandedLevels":{"!description":"Setter for property <code>numberOfExpandedLevels<\/code>.\n\nDefault value is <code>0<\/code>.","!type":"fn(iNumberOfExpandedLevels: Number) -> sap.ui.table.AnalyticalTable","!category":"function"},"removeSelectionInterval":{"!description":"All rows/tree nodes inside the range (including boundaries) will be deselected.\nTree nodes are referenced with theit absolute row index inside the tree- \nPlease be aware, that the absolute row index only applies to the the tree which is visualized by the TreeTable.\nInvisible nodes (collapsed child nodes) will not be regarded.","!type":"fn(iFromIndex: Number, iToIndex: Number) -> sap.ui.table.TreeTable","!category":"function"},"setColumnVisibilityMenuSorter":{"!description":"Setter for property <code>columnVisibilityMenuSorter<\/code>.","!type":"fn(oColumnVisibilityMenuSorter: Object) -> sap.ui.table.AnalyticalTable","!category":"function"},"getColumnVisibilityMenuSorter":{"!description":"Getter for property <code>columnVisibilityMenuSorter<\/code>.\n\nFunctions which is used to sort the column visibility menu entries e.g.: function(ColumnA, ColumnB) { return 0 = equals, <0 lower, >0 greater }; Other values than functions will be ignored.","!type":"fn() -> Object","!category":"function"},"clearSelection":{"!description":"Clears the complete selection (all tree table rows/nodes will lose their selection)","!type":"fn() -> sap.ui.table.TreeTable","!category":"function"},"getSelectedIndices":{"!description":"Returns an array containing the row indices of all selected tree nodes (ordered ascending).\n\nPlease be aware of the following:\nDue to performance/network traffic reasons, the getSelectedIndices function returns only all indices\nof actually selected rows/tree nodes. Unknown rows/nodes (as in \"not yet loaded\" to the client), will not be\nreturned.","!type":"fn() -> [Number]","!category":"function"},"getSumOnTop":{"!description":"Getter for property <code>sumOnTop<\/code>.\n\nSpecifies if the total values should be displayed in the group headers or on bottom of the row. Does not affact the total sum.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"selectAll":{"!description":"Selects all available nodes/rows.\n\nExplanation of the SelectAll function and what to expect from its behavior:\nAll rows/tree nodes locally stored on the client are selected.\nIn addition all subsequent rows/tree nodes, which will be paged into view are also immediatly selected.\nHowever, due to obvious performance/network traffic reasons, the SelectAll function will NOT retrieve any data from the backend.","!type":"fn() -> sap.ui.table.TreeTable","!category":"function"},"setSumOnTop":{"!description":"Setter for property <code>sumOnTop<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bSumOnTop: Boolean) -> sap.ui.table.AnalyticalTable","!category":"function"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getAutoExpandMode":{"!description":"Getter for property <code>autoExpandMode<\/code>.\n\nThe kind of auto expansion algorithm, e.g. optimised filter conditions, per level requests, ...\nsap.ui.table.TreeAutoExpandMode\n\nDefault value is <code>Bundled<\/code>.","!type":"fn() -> String","!category":"function"},"isIndexSelected":{"!description":"Checks if the row at the given index is selected.","!type":"fn(iRowIndex: Number) -> Boolean","!category":"function"},"setSelectedIndex":{"!description":"Overriden from Table.js base class.\nIn a TreeTable you can only select indices, which correspond to the currently visualized tree.\nInvisible tree nodes (e.g. collapsed child nodes) can not be selected via Index, because they do not\ncorrespond to a TreeTable row.","!type":"fn(iRowIndex: Number) -> sap.ui.table.TreeTable","!category":"function"},"addSelectionInterval":{"!description":"Marks a range of tree nodes as selected, starting with iFromIndex going to iToIndex.\nThe TreeNodes are referenced via their absolute row index.\nPlease be aware, that the absolute row index only applies to the the tree which is visualized by the TreeTable.\nInvisible nodes (collapsed child nodes) will not be regarded.\n\nPlease also take notice of the fact, that \"addSelectionInterval\" does not change any other selection.\nTo override the current selection, please use \"setSelctionInterval\" or for a single entry use \"setSelectedIndex\".","!type":"fn(iFromIndex: Number, iToIndex: Number) -> sap.ui.table.TreeTable","!category":"function"},"getSelectedIndex":{"!description":"Retrieves the lead selection index. The lead selection index is, among other things, used to determine the\nstart/end of a selection range, when using Shift-Click to select multiple entries at once.","!type":"fn() -> [Number]","!category":"function"},"setAutoExpandMode":{"!description":"Setter for property <code>autoExpandMode<\/code>.\n\nDefault value is <code>Bundled<\/code>.","!type":"fn(sAutoExpandMode: String) -> sap.ui.table.AnalyticalTable","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.table.AnalyticalTable.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.table.Table"},"sap.ui.table":{"visibleRowCountMode":{"!description":"This defines how the table handles the visible rows in the table. The default behavior is, that a fixed row count is defined. If you change it to auto the visibleRowCount property is changed by the table automatically. It will then adjust its maximum row count to the space it is allowed to cover (limited by the surrounding container) and its minimum row count to the value of the property minAutoRowCount (default value : 5) In manual mode the user can change the visibleRowCount interactively.","!type":"sap.ui.table.VisibleRowCountMode","!category":"enum"},"expandFirstLevel":{"!description":"Flag to enable or disable expanding of first level.","!type":"Boolean","!category":"enum"},"autoExpandMode":{"!description":"The kind of auto expansion algorithm, e.g. optimised filter conditions, per level requests, ...\nsap.ui.table.TreeAutoExpandMode","!type":"String","!category":"enum"},"sumOnTop":{"!description":"Specifies if the total values should be displayed in the group headers or on bottom of the row. Does not affact the total sum.","!type":"Boolean","!category":"enum"},"selectionBehavior":{"!description":"Selection behavior of the Table.","!type":"sap.ui.table.SelectionBehavior","!category":"enum"},"filtered":{"!description":"flag, if the column is filtered or not (displays the filter indicator, does not trigger the filter method!)","!type":"Boolean","!category":"enum"},"enableBusyIndicator":{"!description":"Set this parameter to true to make the table handle the busy indicator by its own. The table will switch to busy as soon as it scrolls into an unpaged area.","!type":"Boolean","!category":"enum"},"visible":{"!description":"Invisible controls are not rendered.","!type":"Boolean","!category":"enum"},"GroupEventType":"sap.ui.table.GroupEventType","showOverlay":{"!description":"Setting this property to true will show an overlay on top of the Table content and users cannot click anymore on the Table content.","!type":"Boolean","!category":"enum"},"SortOrder":"sap.ui.table.SortOrder","enableSelectAll":{"!description":"Specifies if a select all button should be displayed in the top left corner.","!type":"Boolean","!category":"enum"},"columnHeaderVisible":{"!description":"Flag whether the column header is visible or not.","!type":"Boolean","!category":"enum"},"groupHeaderFormatter":{"!description":"If the column is grouped, this formatter is used to format the value in the group header","!type":"Object","!category":"enum"},"Column":"sap.ui.table.Column_obj","enableCellFilter":{"!description":"Flag whether to enable or disable the context menu on cells to trigger a filtering with the cell value.","!type":"Boolean","!category":"enum"},"DataTable":"sap.ui.table.DataTable_obj","hierarchical":{"!description":"Flag, whether the table displays its content hierarchical or not (**experimental**!!)","!type":"Boolean","!category":"enum"},"selectionMode":{"!description":"Selection mode of the Table.","!type":"sap.ui.table.SelectionMode","!category":"enum"},"grouped":{"!description":"flag, if the column is grouped or not (hides the column!)","!type":"Boolean","!category":"enum"},"showIfGrouped":{"!description":"Specifies whether the column is displayed within the table even if it is grouped or not. A grouped column has the same value for every rows within the group.","!type":"Boolean","!category":"enum"},"columnHeaderHeight":{"!description":"Height of the column header of the Table in pixel.","!type":"Number","!category":"enum"},"resizable":{"!description":"Is the column resizable or not?","!type":"Boolean","!category":"enum"},"AnalyticalTable":"sap.ui.table.AnalyticalTable_obj","AnalyticalColumn":"sap.ui.table.AnalyticalColumn_obj","noDataText":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22.1 The aggregation noData also supports string values now. Use noData instead.<br>This text is shown, in case there is no data available to be displayed in the Table and no custom noData control is set.","!type":"String","!category":"enum"},"inResult":{"!description":"Specifies that the dimension referred to by the column shall be included in the granularity of the data result. It allows a finer distinction between a visible/grouped/(included)inResult column.","!type":"Boolean","!category":"enum"},"minAutoRowCount":{"!description":"This property is used to set the minimum count of visible rows when the property visibleRowCountMode is set to Auto. For any other visibleRowCountMode, it is ignored.","!type":"Number","!category":"enum"},"sortOrder":{"!description":"Sort order for this column.","!type":"sap.ui.table.SortOrder","!category":"enum"},"width":{"!description":"Width of the Table.","!type":"sap.ui.core.CSSSize","!category":"enum"},"AnalyticalColumnMenu":"sap.ui.table.AnalyticalColumnMenu_obj","visibleRowCount":{"!description":"Count of visible rows (will overwrite the height property).","!type":"Number","!category":"enum"},"navigationMode":{"!description":"Flag whether to use the scroll mode or paging mode. If the Paginator mode is used it will require the sap.ui.commons library!","!type":"sap.ui.table.NavigationMode","!category":"enum"},"allowColumnReordering":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.2 Use the property enableColumnReordering instead.<br>Flag to enable or disable column reordering","!type":"Boolean","!category":"enum"},"expanded":{"!description":"Flag whether the Table is expanded or not","!type":"Boolean","!category":"enum"},"flexible":{"!description":"Is the width of the column flexible (grows on resize)?","!type":"Boolean","!category":"enum"},"rowHeight":{"!description":"Height of a row of the Table in pixel.","!type":"Number","!category":"enum"},"editable":{"!description":"Flag whether the controls of the Table are editable or not (currently this only controls the background color!)","!type":"Boolean","!category":"enum"},"TablePersoController":"sap.ui.table.TablePersoController_obj","enableColumnReordering":{"!description":"Flag to enable or disable column reordering","!type":"Boolean","!category":"enum"},"TreeAutoExpandMode":"sap.ui.table.TreeAutoExpandMode","expandedVisibleRowCount":{"!description":"Count of visible rows when expanded","!type":"Number","!category":"enum"},"NavigationMode":"sap.ui.table.NavigationMode","Row":"sap.ui.table.Row_obj","rootLevel":{"!description":"The root level is the level of the topmost tree nodes, which will be used as an entry point for OData services.\nThis property is only supported when the TreeTable uses an underlying odata services with hierarchy annotations.\nThis property is only supported with sap.ui.model.odata.v2.ODataModel\nThe hierarchy annotations may also be provided locally as a parameter for the ODataTreeBinding.","!type":"Number","!category":"enum"},"TreeTable":"sap.ui.table.TreeTable_obj","showSortMenuEntry":{"!description":"Define if the sort menu entries are displayed","!type":"Boolean","!category":"enum"},"fixedColumnCount":{"!description":"Number of columns that are fix on the left. When you use a horizontal scroll bar, only the columns which are not fixed, will scroll. Fixed columns need a defined width for the feature to work.","!type":"Number","!category":"enum"},"filterType":{"!description":"Type of Filter. This is used to transform the search term to the specified type, to make sure that the right columns are displayed. This should be the same as defined in binding for this column. As alternative you can pass a function which does the conversion. The function receives the entered filter value as parameter and returns the proper value for the filter expression. Another option is to pass the classname of the type, e.g.: sap.ui.model.type.Date or an expression similar to the binding syntax, e.g.: \"\\{type: 'sap.ui.model.type.Date', formatOptions: \\{UTC: true\\}, constraints: {} \\}\". Here the escaping is mandatory to avoid handling by the binding parser. By default the filter type is sap.ui.model.type.String.","!type":"Object","!category":"enum"},"filterProperty":{"!description":"Specifies the binding property on which the column will filter.","!type":"String","!category":"enum"},"customDataKey":{"!description":"By defining a custom data key the <code>TablePersoController<\/code>\nwill try to get the key for saving the perso data from the custom\ndata of the Table and Column instead of creating it by concatenating \nthe ID of the Table and the Column. Basically this will be more stable \nthan using the auto IDs.","!type":"String","!category":"enum"},"enableGrouping":{"!description":"Flag to enable or disable column grouping. (experimental!)","!type":"Boolean","!category":"enum"},"persoService":{"!description":"Personalization Service object. Needs to have the following methods:\n<ul>\n<li>getPersData() : <code>jQuery Promise<\/code> (http://api.jquery.com/promise/)<\/li>\n<li>setPersData(oBundle) : <code>jQuery Promise<\/code> (http://api.jquery.com/promise/)<\/li>\n<li>delPersData() : <code>jQuery Promise<\/code> (http://api.jquery.com/promise/)<\/li>\n<\/ul>","!type":"Object","!category":"enum"},"autoSave":{"!description":"Auto save state","!type":"Boolean","!category":"enum"},"groupHeaderProperty":{"!description":"The property name of the rows data which will be displayed as a group header if the group mode is enabled","!type":"String","!category":"enum"},"columnVisibilityMenuSorter":{"!description":"Functions which is used to sort the column visibility menu entries e.g.: function(ColumnA, ColumnB) { return 0 = equals, <0 lower, >0 greater }; Other values than functions will be ignored.","!type":"Object","!category":"enum"},"hAlign":{"!description":"Horizontal alignment of the column content. Controls with a text align do not inherit the horizontal alignment. You have to set the text align directly on the template.","!type":"sap.ui.core.HorizontalAlign","!category":"enum"},"Table":"sap.ui.table.Table_obj","showFilterMenuEntry":{"!description":"Define if the filter menu entry is displayed","!type":"Boolean","!category":"enum"},"filterValue":{"!description":"Specifies the value of the filter as string (will be converted into the propert data type).","!type":"String","!category":"enum"},"filterOperator":{"!description":"Filter operator to use when filtering this column.","!type":"String","!category":"enum"},"name":{"!description":"The name of the column which is used in the column visibility menu item as text. If not set as fallback the column menu tries to get the text from the nested Label.","!type":"String","!category":"enum"},"dirty":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.2 Please use setShowOverlay instead.<br>If dirty the content of the Table will be overlayed.","!type":"Boolean","!category":"enum"},"!category":"namespace","enableColumnFreeze":{"!description":"Flag whether to show or hide the column menu item to freeze or unfreeze a column.","!type":"Boolean","!category":"enum"},"headerSpan":{"!description":"If this property is set a span is applied for the header. When moving columns all columns which are part of the header will be moved. This can be either an integer or an array of integers (if you use the multi header feature of the table). If you only specify an integer this span is applied for all header rows, with multiple integers you can specify a seperate span for each header row.","!type":"Object","!category":"enum"},"selectedIndex":{"!description":"Zero-based index of selected item. Index value for no selection is -1. When multi-selection is enabled and multiple items are selected, the method returns the lead selected item. Sets the zero-based index of the currently selected item. This method removes any previous selections. When the given index is invalid, the call is ignored.","!type":"Number","!category":"enum"},"VisibleRowCountMode":"sap.ui.table.VisibleRowCountMode","autoResizable":{"!description":"Enables auto-resizing of the column on doubleclicking the resizer. Currently only implemented to work with the following controls: sap.m.Text, sap.m.Label, sap.m.Link , sap.m.Input, sap.ui.commons.TextView, sap.ui.commons.Label, sap.ui.commons.Link and sap.ui.commons.TextField, sap.ui.commons.Checkbox, sap.m.Checkbox","!type":"Boolean","!category":"enum"},"sortProperty":{"!description":"Specifies the binding property on which the column will sort.","!type":"String","!category":"enum"},"defaultFilterOperator":{"!description":"If this property is set the default filter operator of the column is overwritten.\nBy default \"Contains\" is used for string and \"EQ\" for other types. A valid sap.ui.model.FilterOperator needs to be passed.","!type":"String","!category":"enum"},"firstVisibleRow":{"!description":"First visible row.","!type":"Number","!category":"enum"},"sorted":{"!description":"flag, if the column is sorted or not (displays the sorting indicator, does not trigger the sort method!)","!type":"Boolean","!category":"enum"},"showNoData":{"!description":"Flag whether to show the no data overlay or not once the table is empty.","!type":"Boolean","!category":"enum"},"collapseRecursive":{"!description":"Setting collapseRecursive to true means, that when collapsing a node all subsequent child nodes will also be collapsed.\nThis property is only supported with sap.ui.model.odata.v2.ODataModel","!type":"Boolean","!category":"enum"},"fixedBottomRowCount":{"!description":"Number of rows that are fix on the bottom. When you use a vertical scroll bar, only the rows which are not fixed, will scroll. (experimental!)","!type":"Number","!category":"enum"},"showColumnVisibilityMenu":{"!description":"Flag to show or hide the column visibility menu.","!type":"Boolean","!category":"enum"},"threshold":{"!description":"Threshold to fetch the next chunk of data. The minimal threshold can be the visible row count of the Table. If the value is 0 then the thresholding is disabled.","!type":"Number","!category":"enum"},"SelectionBehavior":"sap.ui.table.SelectionBehavior","!description":"Table-like controls, mainly for desktop scenarios.","numberOfExpandedLevels":{"!description":"Number of levels, which should be opened initially (on first load of data).","!type":"Number","!category":"enum"},"summed":{"!description":"If defined a sum for this column is calculated","!type":"Boolean","!category":"enum"},"enableCustomFilter":{"!description":"Set this parameter to true to implement your own filter behaviour. Instead of the filter input box a button will be rendered for which' press event (customFilter) you can register an event handler.","!type":"Boolean","!category":"enum"},"useGroupMode":{"!description":"If group mode is enable nodes with subitems are rendered as if they were group headers.\nThis can be used to do the grouping for an OData service on the backend and visualize this in a table.\nThis mode only makes sense if the tree has a depth of exacly 1 (group headers and entries)","!type":"Boolean","!category":"enum"},"fixedRowCount":{"!description":"Number of rows that are fix on the top. When you use a vertical scroll bar, only the rows which are not fixed, will scroll.","!type":"Number","!category":"enum"},"ColumnMenu":"sap.ui.table.ColumnMenu_obj","SelectionMode":"sap.ui.table.SelectionMode","leadingProperty":{"!description":"Defines the primary model property which is used inside the Column. In case of the analytical extension this means the property which is grouped by for dimensions or the property which is summed for measures.","!type":"String","!category":"enum"}},"sap.ui.table.AnalyticalColumn":{"setSummed":{"!description":"Setter for property <code>summed<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bSummed: Boolean) -> sap.ui.table.AnalyticalColumn","!category":"function"},"setLeadingProperty":{"!description":"Setter for property <code>leadingProperty<\/code>.","!type":"fn(sLeadingProperty: String) -> sap.ui.table.AnalyticalColumn","!category":"function"},"getShowIfGrouped":{"!description":"Getter for property <code>showIfGrouped<\/code>.\n\nSpecifies whether the column is displayed within the table even if it is grouped or not. A grouped column has the same value for every rows within the group.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setInResult":{"!description":"Setter for property <code>inResult<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bInResult: Boolean) -> sap.ui.table.AnalyticalColumn","!category":"function"},"getGroupHeaderFormatter":{"!description":"Getter for property <code>groupHeaderFormatter<\/code>.\n\nIf the column is grouped, this formatter is used to format the value in the group header","!type":"fn() -> Object","!category":"function"},"getLeadingProperty":{"!description":"Getter for property <code>leadingProperty<\/code>.\n\nDefines the primary model property which is used inside the Column. In case of the analytical extension this means the property which is grouped by for dimensions or the property which is summed for measures.","!type":"fn() -> String","!category":"function"},"getSummed":{"!description":"Getter for property <code>summed<\/code>.\n\nIf defined a sum for this column is calculated\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setGroupHeaderFormatter":{"!description":"Setter for property <code>groupHeaderFormatter<\/code>.","!type":"fn(oGroupHeaderFormatter: Object) -> sap.ui.table.AnalyticalColumn","!category":"function"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getInResult":{"!description":"Getter for property <code>inResult<\/code>.\n\nSpecifies that the dimension referred to by the column shall be included in the granularity of the data result. It allows a finer distinction between a visible/grouped/(included)inResult column.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"!category":"class","!proto":"sap.ui.table.Column","getMetadata":{"!description":"Returns a metadata object for class sap.ui.table.AnalyticalColumn.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"setShowIfGrouped":{"!description":"Setter for property <code>showIfGrouped<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowIfGrouped: Boolean) -> sap.ui.table.AnalyticalColumn","!category":"function"}},"sap.ui.table.SortOrder":{"!description":"Sort order of a column","Descending":{"!description":"Sort Order: descending.","!type":"String","!category":"enum"},"!category":"static class","Ascending":{"!description":"Sort Order: ascending.","!type":"String","!category":"enum"}},"sap.ui.table.NavigationMode":{"!description":"Navigation mode of the table","!category":"static class","Paginator":{"!description":"Uses the paginator control.","!type":"String","!category":"enum"},"Scrollbar":{"!description":"Uses the scrollbar control.","!type":"String","!category":"enum"}},"sap.ui.table.SelectionBehavior":{"!description":"Selection behavior of the table","RowOnly":{"!description":"Rows can only be selected on the row (and the selector is hidden).","!type":"String","!category":"enum"},"Row":{"!description":"Rows can be selected on the complete row.","!type":"String","!category":"enum"},"!category":"static class","RowSelector":{"!description":"Rows can only be selected on the row selector.","!type":"String","!category":"enum"}},"sap.ui.table.ColumnMenu":{"!description":"The column menu provides all common actions that can be performed on a column.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.table.ColumnMenu.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.unified.Menu"},"sap.ui":{"!category":"namespace","table":"sap.ui.table"},"sap.ui.table.TreeTable":{"setSelectionInterval":{"!description":"Sets the selection of the TreeTable to the given range (including boundaries).\nBeware: The previous selection will be lost/overriden. If this is not wanted, please use \"addSelectionInterval\" and\n\"removeSelectionIntervall\".","!type":"fn(iFromIndex: Number, iToIndex: Number) -> sap.ui.table.TreeTable","!category":"function"},"getCollapseRecursive":{"!description":"Getter for property <code>collapseRecursive<\/code>.\n\nSetting collapseRecursive to true means, that when collapsing a node all subsequent child nodes will also be collapsed.\nThis property is only supported with sap.ui.model.odata.v2.ODataModel\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setFixedRowCount":{"!description":"Setter for property <code>fixedRowCount<\/code>.\n\n<b>This property is not supportd for the TreeTable and will be ignored!<\/b>\n\nDefault value is <code>0<\/code>","!type":"fn(iFixedRowCount: Number) -> sap.ui.table.TreeTable","!category":"function"},"setSelectionMode":{"!description":"Sets the selection mode. The current selection is lost.","!type":"fn(sSelectionMode: String)","!category":"function"},"collapseAll":{"!description":"Collapses all nodes (and lower if collapseRecursive is activated)","!type":"fn() -> sap.ui.table.TreeTable","!category":"function"},"setExpandFirstLevel":{"!description":"Setter for property <code>expandFirstLevel<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bExpandFirstLevel: Boolean) -> sap.ui.table.TreeTable","!category":"function"},"!category":"class","expand":{"!description":"expands the row for the given row index","!type":"fn(iRowIndex: Number) -> sap.ui.table.TreeTable","!category":"function"},"isExpanded":{"!description":"Returns whether the row is expanded or collapsed.","!type":"fn(iRowIndex: Number) -> Boolean","!category":"function"},"removeSelectionInterval":{"!description":"All rows/tree nodes inside the range (including boundaries) will be deselected.\nTree nodes are referenced with theit absolute row index inside the tree- \nPlease be aware, that the absolute row index only applies to the the tree which is visualized by the TreeTable.\nInvisible nodes (collapsed child nodes) will not be regarded.","!type":"fn(iFromIndex: Number, iToIndex: Number) -> sap.ui.table.TreeTable","!category":"function"},"collapse":{"!description":"collapses the row for the given row index","!type":"fn(iRowIndex: Number) -> sap.ui.table.TreeTable","!category":"function"},"getGroupHeaderProperty":{"!description":"Getter for property <code>groupHeaderProperty<\/code>.\n\nThe property name of the rows data which will be displayed as a group header if the group mode is enabled","!type":"fn() -> String","!category":"function"},"clearSelection":{"!description":"Clears the complete selection (all tree table rows/nodes will lose their selection)","!type":"fn() -> sap.ui.table.TreeTable","!category":"function"},"fireToggleOpenState":{"!description":"Fire event toggleOpenState to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'rowIndex' of type <code>int<\/code>index of the expanded/collapsed row<\/li>\n<li>'rowContext' of type <code>object<\/code>binding context of the selected row<\/li>\n<li>'expanded' of type <code>boolean<\/code>flag whether the node has been expanded or collapsed<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.table.TreeTable","!category":"function"},"getSelectedIndices":{"!description":"Returns an array containing the row indices of all selected tree nodes (ordered ascending).\n\nPlease be aware of the following:\nDue to performance/network traffic reasons, the getSelectedIndices function returns only all indices\nof actually selected rows/tree nodes. Unknown rows/nodes (as in \"not yet loaded\" to the client), will not be\nreturned.","!type":"fn() -> [Number]","!category":"function"},"selectAll":{"!description":"Selects all available nodes/rows.\n\nExplanation of the SelectAll function and what to expect from its behavior:\nAll rows/tree nodes locally stored on the client are selected.\nIn addition all subsequent rows/tree nodes, which will be paged into view are also immediatly selected.\nHowever, due to obvious performance/network traffic reasons, the SelectAll function will NOT retrieve any data from the backend.","!type":"fn() -> sap.ui.table.TreeTable","!category":"function"},"setGroupHeaderProperty":{"!description":"Setter for property <code>groupHeaderProperty<\/code>.","!type":"fn(sGroupHeaderProperty: String) -> sap.ui.table.TreeTable","!category":"function"},"detachToggleOpenState":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'toggleOpenState' event of this <code>sap.ui.table.TreeTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.table.TreeTable","!category":"function"},"getRootLevel":{"!description":"Getter for property <code>rootLevel<\/code>.\n\nThe root level is the level of the topmost tree nodes, which will be used as an entry point for OData services.\nThis property is only supported when the TreeTable uses an underlying odata services with hierarchy annotations.\nThis property is only supported with sap.ui.model.odata.v2.ODataModel\nThe hierarchy annotations may also be provided locally as a parameter for the ODataTreeBinding.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function"},"getUseGroupMode":{"!description":"Getter for property <code>useGroupMode<\/code>.\n\nIf group mode is enable nodes with subitems are rendered as if they were group headers.\nThis can be used to do the grouping for an OData service on the backend and visualize this in a table.\nThis mode only makes sense if the tree has a depth of exacly 1 (group headers and entries)\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"expandToLevel":{"!description":"Collapses all nodes on level 'iLevel' (and lower if collapseRecursive is activated)\nIf no parameter is given, all nodes will be collapsed to the topmost level.\n\nOnly supported with ODataModel v2.","!type":"fn(iLevel: Number) -> sap.ui.table.TreeTable","!category":"function"},"!description":"The TreeTable Control.","isIndexSelected":{"!description":"Checks if the row at the given index is selected.","!type":"fn(iRowIndex: Number) -> Boolean","!category":"function"},"getExpandFirstLevel":{"!description":"Getter for property <code>expandFirstLevel<\/code>.\n\nFlag to enable or disable expanding of first level.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"attachToggleOpenState":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'toggleOpenState' event of this <code>sap.ui.table.TreeTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.table.TreeTable<\/code> itself.\n\nfired when a node has been expanded or collapsed (only available in hierachical mode)","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.table.TreeTable","!category":"function"},"setSelectedIndex":{"!description":"Overriden from Table.js base class.\nIn a TreeTable you can only select indices, which correspond to the currently visualized tree.\nInvisible tree nodes (e.g. collapsed child nodes) can not be selected via Index, because they do not\ncorrespond to a TreeTable row.","!type":"fn(iRowIndex: Number) -> sap.ui.table.TreeTable","!category":"function"},"addSelectionInterval":{"!description":"Marks a range of tree nodes as selected, starting with iFromIndex going to iToIndex.\nThe TreeNodes are referenced via their absolute row index.\nPlease be aware, that the absolute row index only applies to the the tree which is visualized by the TreeTable.\nInvisible nodes (collapsed child nodes) will not be regarded.\n\nPlease also take notice of the fact, that \"addSelectionInterval\" does not change any other selection.\nTo override the current selection, please use \"setSelctionInterval\" or for a single entry use \"setSelectedIndex\".","!type":"fn(iFromIndex: Number, iToIndex: Number) -> sap.ui.table.TreeTable","!category":"function"},"getSelectedIndex":{"!description":"Retrieves the lead selection index. The lead selection index is, among other things, used to determine the\nstart/end of a selection range, when using Shift-Click to select multiple entries at once.","!type":"fn() -> [Number]","!category":"function"},"setUseGroupMode":{"!description":"Setter for property <code>useGroupMode<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bUseGroupMode: Boolean) -> sap.ui.table.TreeTable","!category":"function"},"!proto":"sap.ui.table.Table","getMetadata":{"!description":"Returns a metadata object for class sap.ui.table.TreeTable.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.table.Table":{"detachColumnVisibility":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'columnVisibility' event of this <code>sap.ui.table.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.table.Table","!category":"function"},"fireColumnResize":{"!description":"Fire event columnResize to attached listeners.\n\nListeners may prevent the default action of this event using the preventDefault-method on the event object.\n\n\nExpects following event parameters:\n<ul>\n<li>'column' of type <code>sap.ui.table.Column<\/code>resized column.<\/li>\n<li>'width' of type <code>int<\/code>new width of the table in pixel.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> Boolean","!category":"function"},"setFooter":{"!description":"Setter for the aggregated <code>footer<\/code>.","!type":"fn(oFooter: sap.ui.core.Control) -> sap.ui.table.Table","!category":"function"},"removeAllColumns":{"!description":"Removes all the controls in the aggregation named <code>columns<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.table.Column]","!category":"function"},"getShowOverlay":{"!description":"Getter for property <code>showOverlay<\/code>.\n\nSetting this property to true will show an overlay on top of the Table content and users cannot click anymore on the Table content.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getColumns":{"!description":"Getter for aggregation <code>columns<\/code>.\n\nColumns of the Table","!type":"fn() -> [sap.ui.table.Column]","!category":"function"},"fireColumnSelect":{"!description":"Fire event columnSelect to attached listeners.\n\nListeners may prevent the default action of this event using the preventDefault-method on the event object.\n\n\nExpects following event parameters:\n<ul>\n<li>'column' of type <code>sap.ui.table.Column<\/code>reference to the selected column<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> Boolean","!category":"function"},"destroyColumns":{"!description":"Destroys all the columns in the aggregation\nnamed <code>columns<\/code>.","!type":"fn() -> sap.ui.table.Table","!category":"function"},"attachFilter":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'filter' event of this <code>sap.ui.table.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.table.Table<\/code> itself.\n\nfired when the table is filtered.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.table.Table","!category":"function"},"setSelectionMode":{"!description":"Sets the selection mode. The current selection is lost.","!type":"fn(sSelectionMode: String)","!category":"function"},"setEditable":{"!description":"Setter for property <code>editable<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEditable: Boolean) -> sap.ui.table.Table","!category":"function"},"getEnableGrouping":{"!description":"Getter for property <code>enableGrouping<\/code>.\n\nFlag to enable or disable column grouping. (experimental!)\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getNavigationMode":{"!description":"Getter for property <code>navigationMode<\/code>.\n\nFlag whether to use the scroll mode or paging mode. If the Paginator mode is used it will require the sap.ui.commons library!\n\nDefault value is <code>Scrollbar<\/code>.","!type":"fn() -> sap.ui.table.NavigationMode","!category":"function"},"getThreshold":{"!description":"Getter for property <code>threshold<\/code>.\n\nThreshold to fetch the next chunk of data. The minimal threshold can be the visible row count of the Table. If the value is 0 then the thresholding is disabled.\n\nDefault value is <code>100<\/code>.","!type":"fn() -> Number","!category":"function"},"setEnableSelectAll":{"!description":"Setter for property <code>enableSelectAll<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableSelectAll: Boolean) -> sap.ui.table.Table","!category":"function"},"getTitle":{"!description":"Getter for aggregation <code>title<\/code>.\n\nControl or text of title section of the Table (if not set it will be hidden)","!type":"fn() -> sap.ui.core.Control","!category":"function"},"setThreshold":{"!description":"Setter for property <code>threshold<\/code>.\n\nDefault value is <code>100<\/code>.","!type":"fn(iThreshold: Number) -> sap.ui.table.Table","!category":"function"},"setColumnHeaderVisible":{"!description":"Setter for property <code>columnHeaderVisible<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bColumnHeaderVisible: Boolean) -> sap.ui.table.Table","!category":"function"},"removeRow":{"!description":"Removes a row from the aggregation named <code>rows<\/code>.","!type":"fn(vRow: Number | String | sap.ui.table.Row) -> sap.ui.table.Row","!category":"function"},"addRow":{"!description":"Adds some row into the aggregation named <code>rows<\/code>.","!type":"fn(oRow: sap.ui.table.Row) -> sap.ui.table.Table","!category":"function"},"setFirstVisibleRow":{"!description":"Setter for property <code>firstVisibleRow<\/code>.\n\nDefault value is <code>0<\/code>.","!type":"fn(iFirstVisibleRow: Number) -> sap.ui.table.Table","!category":"function"},"getFooter":{"!description":"Getter for aggregation <code>footer<\/code>.\n\nControl or text of footer section of the Table (if not set it will be hidden)","!type":"fn() -> sap.ui.core.Control","!category":"function"},"removeAllExtension":{"!description":"Removes all the controls in the aggregation named <code>extension<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getSelectedIndices":{"!description":"Zero-based indices of selected items, wrapped in an array. An empty array means \"no selection\".","!type":"fn() -> [Number]","!category":"function"},"getShowNoData":{"!description":"Getter for property <code>showNoData<\/code>.\n\nFlag whether to show the no data overlay or not once the table is empty.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setEnableCellFilter":{"!description":"Setter for property <code>enableCellFilter<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bEnableCellFilter: Boolean) -> sap.ui.table.Table","!category":"function"},"fireGroup":{"!description":"Fire event group to attached listeners.\n\nListeners may prevent the default action of this event using the preventDefault-method on the event object.\n\n\nExpects following event parameters:\n<ul>\n<li>'column' of type <code>sap.ui.table.Column<\/code>grouped column.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> Boolean","!category":"function"},"setToolbar":{"!description":"Setter for the aggregated <code>toolbar<\/code>.","!type":"fn(oToolbar: sap.ui.core.Toolbar) -> sap.ui.table.Table","!category":"function"},"setNoData":{"!description":"Setter for the aggregated <code>noData<\/code>.","!type":"fn(oNoData: sap.ui.core.Control) -> sap.ui.table.Table","!category":"function"},"setVisibleRowCount":{"!description":"Setter for property <code>visibleRowCount<\/code>.\n\nDefault value is <code>10<\/code>.","!type":"fn(iVisibleRowCount: Number) -> sap.ui.table.Table","!category":"function"},"setFixedColumnCount":{"!description":"Setter for property <code>fixedColumnCount<\/code>.\n\nDefault value is <code>0<\/code>.","!type":"fn(iFixedColumnCount: Number) -> sap.ui.table.Table","!category":"function"},"setEnableBusyIndicator":{"!description":"Setter for property <code>enableBusyIndicator<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bEnableBusyIndicator: Boolean) -> sap.ui.table.Table","!category":"function"},"insertColumn":{"!description":"Inserts a column into the aggregation named <code>columns<\/code>.","!type":"fn(oColumn: sap.ui.table.Column, iIndex: Number) -> sap.ui.table.Table","!category":"function"},"addColumn":{"!description":"Adds some column into the aggregation named <code>columns<\/code>.","!type":"fn(oColumn: sap.ui.table.Column) -> sap.ui.table.Table","!category":"function"},"destroyExtension":{"!description":"Destroys all the extension in the aggregation\nnamed <code>extension<\/code>.","!type":"fn() -> sap.ui.table.Table","!category":"function"},"getFixedBottomRowCount":{"!description":"Getter for property <code>fixedBottomRowCount<\/code>.\n\nNumber of rows that are fix on the bottom. When you use a vertical scroll bar, only the rows which are not fixed, will scroll. (experimental!)\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function"},"attachSort":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'sort' event of this <code>sap.ui.table.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.table.Table<\/code> itself.\n\nfired when the table is sorted.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.table.Table","!category":"function"},"getExtension":{"!description":"Getter for aggregation <code>extension<\/code>.\n\nExtension section of the Table (if not set it will be hidden)","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"attachColumnSelect":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'columnSelect' event of this <code>sap.ui.table.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.table.Table<\/code> itself.\n\nfired when a column of the table has been selected","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.table.Table","!category":"function"},"getEnableCustomFilter":{"!description":"Getter for property <code>enableCustomFilter<\/code>.\n\nSet this parameter to true to implement your own filter behaviour. Instead of the filter input box a button will be rendered for which' press event (customFilter) you can register an event handler.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getSelectedIndex":{"!description":"Getter for property <code>selectedIndex<\/code>.\n\nZero-based index of selected item. Index value for no selection is -1. When multi-selection is enabled and multiple items are selected, the method returns the lead selected item. Sets the zero-based index of the currently selected item. This method removes any previous selections. When the given index is invalid, the call is ignored.\n\nDefault value is <code>-1<\/code>.","!type":"fn() -> Number","!category":"function"},"!proto":"sap.ui.core.Control","sort":{"!description":"sorts the given column ascending or descending","!type":"function sort() { [native code for Array.sort, arity=1] }\n, oColumn: sap.ui.table.Column, oSortOrder: sap.ui.table.SortOrder) -> sap.ui.table.Table","!category":"function"},"fireCustomFilter":{"!description":"Fire event customFilter to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.table.Table","!category":"function"},"setSelectionInterval":{"!description":"Sets the given selection interval as selection. In case of single selection the \"indexTo\" value will be used for as selected index.","!type":"fn(iIndexFrom: Number, iIndexTo: Number) -> sap.ui.table.Table","!category":"function"},"getVisibleRowCountMode":{"!description":"Getter for property <code>visibleRowCountMode<\/code>.\n\nThis defines how the table handles the visible rows in the table. The default behavior is, that a fixed row count is defined. If you change it to auto the visibleRowCount property is changed by the table automatically. It will then adjust its maximum row count to the space it is allowed to cover (limited by the surrounding container) and its minimum row count to the value of the property minAutoRowCount (default value : 5) In manual mode the user can change the visibleRowCount interactively.\n\nDefault value is <code>Fixed<\/code>.","!type":"fn() -> sap.ui.table.VisibleRowCountMode","!category":"function"},"detachRowSelectionChange":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'rowSelectionChange' event of this <code>sap.ui.table.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.table.Table","!category":"function"},"setShowColumnVisibilityMenu":{"!description":"Setter for property <code>showColumnVisibilityMenu<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowColumnVisibilityMenu: Boolean) -> sap.ui.table.Table","!category":"function"},"attachCellContextmenu":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'cellContextmenu' event of this <code>sap.ui.table.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.table.Table<\/code> itself.\n\nfired when the user clicks a cell of the table (experimental!).","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.table.Table","!category":"function"},"bindRows":{"!description":"Binder for aggregation <code>rows<\/code>.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.ui.table.Table","!category":"function"},"setAllowColumnReordering":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.2 Use the property enableColumnReordering instead.<br>Setter for property <code>allowColumnReordering<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bAllowColumnReordering: Boolean) -> sap.ui.table.Table","!category":"function"},"getShowColumnVisibilityMenu":{"!description":"Getter for property <code>showColumnVisibilityMenu<\/code>.\n\nFlag to show or hide the column visibility menu.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"insertRow":{"!description":"Inserts a row into the aggregation named <code>rows<\/code>.","!type":"fn(oRow: sap.ui.table.Row, iIndex: Number) -> sap.ui.table.Table","!category":"function"},"getColumnHeaderVisible":{"!description":"Getter for property <code>columnHeaderVisible<\/code>.\n\nFlag whether the column header is visible or not.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"autoResizeColumn":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn(iColId: Number)","!category":"function"},"setGroupBy":{"!description":"Setter for the associated <code>groupBy<\/code>.","!type":"fn(oGroupBy: sap.ui.table.Column) -> sap.ui.table.Table","!category":"function"},"!category":"class","getVisibleRowCount":{"!description":"Getter for property <code>visibleRowCount<\/code>.\n\nCount of visible rows (will overwrite the height property).\n\nDefault value is <code>10<\/code>.","!type":"fn() -> Number","!category":"function"},"addExtension":{"!description":"Adds some extension into the aggregation named <code>extension<\/code>.","!type":"fn(oExtension: sap.ui.core.Control) -> sap.ui.table.Table","!category":"function"},"fireFilter":{"!description":"Fire event filter to attached listeners.\n\nListeners may prevent the default action of this event using the preventDefault-method on the event object.\n\n\nExpects following event parameters:\n<ul>\n<li>'column' of type <code>sap.ui.table.Column<\/code>filtered column.<\/li>\n<li>'value' of type <code>string<\/code>filter value.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> Boolean","!category":"function"},"setEnableColumnReordering":{"!description":"Setter for property <code>enableColumnReordering<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableColumnReordering: Boolean) -> sap.ui.table.Table","!category":"function"},"getEnableColumnFreeze":{"!description":"Getter for property <code>enableColumnFreeze<\/code>.\n\nFlag whether to show or hide the column menu item to freeze or unfreeze a column.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"removeAllRows":{"!description":"Removes all the controls in the aggregation named <code>rows<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.table.Row]","!category":"function"},"exportData":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn(mSettings: Object) -> Promise","!category":"function"},"detachSort":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'sort' event of this <code>sap.ui.table.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.table.Table","!category":"function"},"getMinAutoRowCount":{"!description":"Getter for property <code>minAutoRowCount<\/code>.\n\nThis property is used to set the minimum count of visible rows when the property visibleRowCountMode is set to Auto. For any other visibleRowCountMode, it is ignored.\n\nDefault value is <code>5<\/code>.","!type":"fn() -> Number","!category":"function"},"clearSelection":{"!description":"Removes complete selection.","!type":"fn() -> sap.ui.table.Table","!category":"function"},"detachCustomFilter":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'customFilter' event of this <code>sap.ui.table.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.table.Table","!category":"function"},"getNoData":{"!description":"Getter for aggregation <code>noData<\/code>.\n\nThe value for the noData aggregation can be either a string value or a control instance. The control is shown, in case there is no data for the Table available. In case of a string value this will simply replace the no data text.","!type":"fn() -> sap.ui.core.Control","!category":"function"},"destroyToolbar":{"!description":"Destroys the toolbar in the aggregation\nnamed <code>toolbar<\/code>.","!type":"fn() -> sap.ui.table.Table","!category":"function"},"!description":"<p>\n    Provides a comprehensive set of features for displaying and dealing with vast amounts of data. The Table control supports\n    desktop PCs and tablet devices. On tablets, special consideration should be given to the number of visible columns\n    and rows due to the limited performance of some devices.\n<\/p>\n<p>\n    In order to keep the document DOM as lean as possible, the Table control reuses its DOM elements of the rows.\n    When the user scrolls, only the row contexts are changed but the rendered controls remain the same. This allows\n    the Table control to handle huge amounts of data. Nevertheless, restrictions apply regarding the number of displayed\n    columns. Keep the number as low as possible to improve performance. Due to the nature of tables, the used\n    control for column templates also has a big influence on the performance.\n<\/p>\n<p>\n    The Table control relies completely on data binding, and its supported feature set is tightly coupled to\n    the data model and binding being used.\n<\/p>","fireRowSelectionChange":{"!description":"Fire event rowSelectionChange to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'rowIndex' of type <code>int<\/code>row index which has been clicked so that the selection has been changed (either selected or deselected)<\/li>\n<li>'rowContext' of type <code>object<\/code>binding context of the row which has been clicked so that selection has been changed<\/li>\n<li>'rowIndices' of type <code>int[]<\/code>array of row indices which selection has been changed (either selected or deselected)<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.table.Table","!category":"function"},"getEnableBusyIndicator":{"!description":"Getter for property <code>enableBusyIndicator<\/code>.\n\nSet this parameter to true to make the table handle the busy indicator by its own. The table will switch to busy as soon as it scrolls into an unpaged area.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setSelectedIndex":{"!description":"Setter for property <code>selectedIndex<\/code>.\n\nDefault value is <code>-1<\/code>.","!type":"fn(iSelectedIndex: Number) -> sap.ui.table.Table","!category":"function"},"setRowHeight":{"!description":"Setter for property <code>rowHeight<\/code>.","!type":"fn(iRowHeight: Number) -> sap.ui.table.Table","!category":"function"},"addSelectionInterval":{"!description":"Adds the given selection interval to the selection. In case of single selection the \"indexTo\" value will be used for as selected index.","!type":"fn(iIndexFrom: Number, iIndexTo: Number) -> sap.ui.table.Table","!category":"function"},"detachColumnResize":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'columnResize' event of this <code>sap.ui.table.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.table.Table","!category":"function"},"detachCellContextmenu":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'cellContextmenu' event of this <code>sap.ui.table.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.table.Table","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.table.Table.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"detachFilter":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'filter' event of this <code>sap.ui.table.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.table.Table","!category":"function"},"attachColumnFreeze":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'columnFreeze' event of this <code>sap.ui.table.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.table.Table<\/code> itself.\n\nfired when a column of the table should be freezed","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.table.Table","!category":"function"},"attachRowSelectionChange":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'rowSelectionChange' event of this <code>sap.ui.table.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.table.Table<\/code> itself.\n\nfired when the row selection of the table has been changed (the event parameters can be used to determine selection changes - to find out the selected rows you should better use the table selection API)","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.table.Table","!category":"function"},"removeExtension":{"!description":"Removes a extension from the aggregation named <code>extension<\/code>.","!type":"fn(vExtension: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"setFixedRowCount":{"!description":"Setter for property <code>fixedRowCount<\/code>.\n\nDefault value is <code>0<\/code>.","!type":"fn(iFixedRowCount: Number) -> sap.ui.table.Table","!category":"function"},"removeColumn":{"!description":"Removes a column from the aggregation named <code>columns<\/code>.","!type":"fn(vColumn: Number | String | sap.ui.table.Column) -> sap.ui.table.Column","!category":"function"},"getSelectionBehavior":{"!description":"Getter for property <code>selectionBehavior<\/code>.\n\nSelection behavior of the Table.\n\nDefault value is <code>RowSelector<\/code>.","!type":"fn() -> sap.ui.table.SelectionBehavior","!category":"function"},"attachCellClick":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'cellClick' event of this <code>sap.ui.table.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.table.Table<\/code> itself.\n\nfired when the user clicks a cell of the table (experimental!).","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.table.Table","!category":"function"},"getContextByIndex":{"!description":"Returns the context of a row by its index.","!type":"fn(iIndex: Number) -> Object","!category":"function"},"setVisibleRowCountMode":{"!description":"Setter for property <code>visibleRowCountMode<\/code>.\n\nDefault value is <code>Fixed<\/code>.","!type":"fn(sVisibleRowCountMode: sap.ui.table.VisibleRowCountMode) -> sap.ui.table.Table","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nWidth of the Table.\n\nDefault value is <code>auto<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setEnableColumnFreeze":{"!description":"Setter for property <code>enableColumnFreeze<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bEnableColumnFreeze: Boolean) -> sap.ui.table.Table","!category":"function"},"unbindRows":{"!description":"Unbinder for aggregation <code>rows<\/code>.","!type":"fn() -> sap.ui.table.Table","!category":"function"},"attachColumnVisibility":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'columnVisibility' event of this <code>sap.ui.table.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.table.Table<\/code> itself.\n\nfired when the visibility of a table column is changed.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.table.Table","!category":"function"},"getEnableColumnReordering":{"!description":"Getter for property <code>enableColumnReordering<\/code>.\n\nFlag to enable or disable column reordering\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getEditable":{"!description":"Getter for property <code>editable<\/code>.\n\nFlag whether the controls of the Table are editable or not (currently this only controls the background color!)\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"attachColumnMove":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'columnMove' event of this <code>sap.ui.table.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.table.Table<\/code> itself.\n\nfired when a table column is moved.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.table.Table","!category":"function"},"getNoDataText":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22.1 The aggregation noData also supports string values now. Use noData instead.<br>Getter for property <code>noDataText<\/code>.\n\nThis text is shown, in case there is no data available to be displayed in the Table and no custom noData control is set.","!type":"fn() -> String","!category":"function"},"detachColumnSelect":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'columnSelect' event of this <code>sap.ui.table.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.table.Table","!category":"function"},"attachCustomFilter":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'customFilter' event of this <code>sap.ui.table.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.table.Table<\/code> itself.\n\nThis event is triggered when the custom filter item of the column menu is pressed. The column on which the event was triggered is passed as parameter.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.table.Table","!category":"function"},"setShowOverlay":{"!description":"Setter for property <code>showOverlay<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowOverlay: Boolean) -> sap.ui.table.Table","!category":"function"},"detachColumnMove":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'columnMove' event of this <code>sap.ui.table.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.table.Table","!category":"function"},"getToolbar":{"!description":"Getter for aggregation <code>toolbar<\/code>.\n\nToolbar of the Table (if not set it will be hidden)","!type":"fn() -> sap.ui.core.Toolbar","!category":"function"},"fireCellContextmenu":{"!description":"Fire event cellContextmenu to attached listeners.\n\nListeners may prevent the default action of this event using the preventDefault-method on the event object.\n\n\nExpects following event parameters:\n<ul>\n<li>'cellControl' of type <code>sap.ui.core.Control<\/code>The control of the cell.<\/li>\n<li>'rowIndex' of type <code>int<\/code>Row index of the selected cell.<\/li>\n<li>'columnIndex' of type <code>int<\/code>Column index of the selected cell.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> Boolean","!category":"function"},"fireColumnMove":{"!description":"Fire event columnMove to attached listeners.\n\nListeners may prevent the default action of this event using the preventDefault-method on the event object.\n\n\nExpects following event parameters:\n<ul>\n<li>'column' of type <code>sap.ui.table.Column<\/code>moved column.<\/li>\n<li>'newPos' of type <code>int<\/code>new position of the column.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> Boolean","!category":"function"},"destroyTitle":{"!description":"Destroys the title in the aggregation\nnamed <code>title<\/code>.","!type":"fn() -> sap.ui.table.Table","!category":"function"},"indexOfColumn":{"!description":"Checks for the provided <code>sap.ui.table.Column<\/code> in the aggregation named <code>columns<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oColumn: sap.ui.table.Column) -> Number","!category":"function"},"setTitle":{"!description":"Setter for the aggregated <code>title<\/code>.","!type":"fn(oTitle: sap.ui.core.Control) -> sap.ui.table.Table","!category":"function"},"setFixedBottomRowCount":{"!description":"Setter for property <code>fixedBottomRowCount<\/code>.\n\nDefault value is <code>0<\/code>.","!type":"fn(iFixedBottomRowCount: Number) -> sap.ui.table.Table","!category":"function"},"isIndexSelected":{"!description":"Returns whether the given index is selected.","!type":"fn(iIndex: Number) -> Boolean","!category":"function"},"setColumnHeaderHeight":{"!description":"Setter for property <code>columnHeaderHeight<\/code>.","!type":"fn(iColumnHeaderHeight: Number) -> sap.ui.table.Table","!category":"function"},"getFixedColumnCount":{"!description":"Getter for property <code>fixedColumnCount<\/code>.\n\nNumber of columns that are fix on the left. When you use a horizontal scroll bar, only the columns which are not fixed, will scroll. Fixed columns need a defined width for the feature to work.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function"},"filter":{"!description":"filter the given column by the given value","!type":"function filter() { [native code for Array.filter, arity=1] }\n, oColumn: sap.ui.table.Column, sValue: String) -> sap.ui.table.Table","!category":"function"},"unbindColumns":{"!description":"Unbinder for aggregation <code>columns<\/code>.","!type":"fn() -> sap.ui.table.Table","!category":"function"},"setEnableGrouping":{"!description":"Setter for property <code>enableGrouping<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bEnableGrouping: Boolean) -> sap.ui.table.Table","!category":"function"},"fireSort":{"!description":"Fire event sort to attached listeners.\n\nListeners may prevent the default action of this event using the preventDefault-method on the event object.\n\n\nExpects following event parameters:\n<ul>\n<li>'column' of type <code>sap.ui.table.Column<\/code>sorted column.<\/li>\n<li>'sortOrder' of type <code>sap.ui.table.SortOrder<\/code>Sort Order<\/li>\n<li>'columnAdded' of type <code>boolean<\/code>If column was added to sorter this is true. If new sort is started this is set to false<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> Boolean","!category":"function"},"detachGroup":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'group' event of this <code>sap.ui.table.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.table.Table","!category":"function"},"setShowNoData":{"!description":"Setter for property <code>showNoData<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowNoData: Boolean) -> sap.ui.table.Table","!category":"function"},"detachCellClick":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'cellClick' event of this <code>sap.ui.table.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.table.Table","!category":"function"},"getSelectionMode":{"!description":"Getter for property <code>selectionMode<\/code>.\n\nSelection mode of the Table.\n\nDefault value is <code>Multi<\/code>.","!type":"fn() -> sap.ui.table.SelectionMode","!category":"function"},"destroyFooter":{"!description":"Destroys the footer in the aggregation\nnamed <code>footer<\/code>.","!type":"fn() -> sap.ui.table.Table","!category":"function"},"setNavigationMode":{"!description":"Setter for property <code>navigationMode<\/code>.\n\nDefault value is <code>Scrollbar<\/code>.","!type":"fn(sNavigationMode: sap.ui.table.NavigationMode) -> sap.ui.table.Table","!category":"function"},"indexOfExtension":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>extension<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oExtension: sap.ui.core.Control) -> Number","!category":"function"},"attachGroup":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'group' event of this <code>sap.ui.table.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.table.Table<\/code> itself.\n\nfired when the table is grouped (experimental!).","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.table.Table","!category":"function"},"getRows":{"!description":"Getter for aggregation <code>rows<\/code>.\n\nRows of the Table","!type":"fn() -> [sap.ui.table.Row]","!category":"function"},"setSelectionBehavior":{"!description":"Setter for property <code>selectionBehavior<\/code>.\n\nDefault value is <code>RowSelector<\/code>.","!type":"fn(sSelectionBehavior: sap.ui.table.SelectionBehavior) -> sap.ui.table.Table","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.\n\nDefault value is <code>auto<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.table.Table","!category":"function"},"destroyNoData":{"!description":"Destroys the noData in the aggregation\nnamed <code>noData<\/code>.","!type":"fn() -> sap.ui.table.Table","!category":"function"},"removeSelectionInterval":{"!description":"Removes the given selection interval from the selection. In case of single selection this call removeSelectedIndex with the \"indexTo\" value.","!type":"fn(iIndexFrom: Number, iIndexTo: Number) -> sap.ui.table.Table","!category":"function"},"fireCellClick":{"!description":"Fire event cellClick to attached listeners.\n\nListeners may prevent the default action of this event using the preventDefault-method on the event object.\n\n\nExpects following event parameters:\n<ul>\n<li>'cellControl' of type <code>sap.ui.core.Control<\/code>The control of the cell.<\/li>\n<li>'rowIndex' of type <code>int<\/code>Row index of the selected cell.<\/li>\n<li>'columnIndex' of type <code>int<\/code>Column index of the selected cell.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> Boolean","!category":"function"},"getRowHeight":{"!description":"Getter for property <code>rowHeight<\/code>.\n\nHeight of a row of the Table in pixel.","!type":"fn() -> Number","!category":"function"},"getFixedRowCount":{"!description":"Getter for property <code>fixedRowCount<\/code>.\n\nNumber of rows that are fix on the top. When you use a vertical scroll bar, only the rows which are not fixed, will scroll.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function"},"getEnableCellFilter":{"!description":"Getter for property <code>enableCellFilter<\/code>.\n\nFlag whether to enable or disable the context menu on cells to trigger a filtering with the cell value.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"destroyRows":{"!description":"Destroys all the rows in the aggregation\nnamed <code>rows<\/code>.","!type":"fn() -> sap.ui.table.Table","!category":"function"},"getGroupBy":{"!description":"Id of the element which is the current target of the <code>groupBy<\/code> association, or null.\n\nGroup By Column (experimental!)","!type":"fn() -> sap.ui.table.Column","!category":"function"},"setNoDataText":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22.1 The aggregation noData also supports string values now. Use noData instead.<br>Setter for property <code>noDataText<\/code>.","!type":"fn(sNoDataText: String) -> sap.ui.table.Table","!category":"function"},"detachColumnFreeze":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'columnFreeze' event of this <code>sap.ui.table.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.table.Table","!category":"function"},"getAllowColumnReordering":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.2 Use the property enableColumnReordering instead.<br>Getter for property <code>allowColumnReordering<\/code>.\n\nFlag to enable or disable column reordering\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getEnableSelectAll":{"!description":"Getter for property <code>enableSelectAll<\/code>.\n\nSpecifies if a select all button should be displayed in the top left corner.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"fireColumnVisibility":{"!description":"Fire event columnVisibility to attached listeners.\n\nListeners may prevent the default action of this event using the preventDefault-method on the event object.\n\n\nExpects following event parameters:\n<ul>\n<li>'column' of type <code>sap.ui.table.Column<\/code>affected column.<\/li>\n<li>'visible' of type <code>boolean<\/code>new value of the visible property.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> Boolean","!category":"function"},"selectAll":{"!description":"Add all rows to the selection.","!type":"fn() -> sap.ui.table.Table","!category":"function"},"indexOfRow":{"!description":"Checks for the provided <code>sap.ui.table.Row<\/code> in the aggregation named <code>rows<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oRow: sap.ui.table.Row) -> Number","!category":"function"},"fireColumnFreeze":{"!description":"Fire event columnFreeze to attached listeners.\n\nListeners may prevent the default action of this event using the preventDefault-method on the event object.\n\n\nExpects following event parameters:\n<ul>\n<li>'column' of type <code>sap.ui.table.Column<\/code>reference to the column to freeze<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> Boolean","!category":"function"},"getColumnHeaderHeight":{"!description":"Getter for property <code>columnHeaderHeight<\/code>.\n\nHeight of the column header of the Table in pixel.","!type":"fn() -> Number","!category":"function"},"attachColumnResize":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'columnResize' event of this <code>sap.ui.table.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.table.Table<\/code> itself.\n\nfired when a table column is resized.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.table.Table","!category":"function"},"setMinAutoRowCount":{"!description":"Setter for property <code>minAutoRowCount<\/code>.\n\nDefault value is <code>5<\/code>.","!type":"fn(iMinAutoRowCount: Number) -> sap.ui.table.Table","!category":"function"},"insertExtension":{"!description":"Inserts a extension into the aggregation named <code>extension<\/code>.","!type":"fn(oExtension: sap.ui.core.Control, iIndex: Number) -> sap.ui.table.Table","!category":"function"},"setEnableCustomFilter":{"!description":"Setter for property <code>enableCustomFilter<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bEnableCustomFilter: Boolean) -> sap.ui.table.Table","!category":"function"},"bindColumns":{"!description":"Binder for aggregation <code>columns<\/code>.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.ui.table.Table","!category":"function"},"getFirstVisibleRow":{"!description":"Getter for property <code>firstVisibleRow<\/code>.\n\nFirst visible row.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function"}},"sap.ui.table.Row":{"indexOfCell":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>cells<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oCell: sap.ui.core.Control) -> Number","!category":"function"},"getCells":{"!description":"Getter for aggregation <code>cells<\/code>.\n\nThe controls for the cells.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"!description":"The row.","insertCell":{"!description":"Inserts a cell into the aggregation named <code>cells<\/code>.","!type":"fn(oCell: sap.ui.core.Control, iIndex: Number) -> sap.ui.table.Row","!category":"function"},"destroyCells":{"!description":"Destroys all the cells in the aggregation\nnamed <code>cells<\/code>.","!type":"fn() -> sap.ui.table.Row","!category":"function"},"getIndex":{"!description":"Returns the index of the row in the table or -1 if not added to a table. This\nfunction considers the scroll position of the table and also takes fixed rows and\nfixed bottom rows into account.","!type":"fn() -> Number","!category":"function"},"addCell":{"!description":"Adds some cell into the aggregation named <code>cells<\/code>.","!type":"fn(oCell: sap.ui.core.Control) -> sap.ui.table.Row","!category":"function"},"!category":"class","removeAllCells":{"!description":"Removes all the controls in the aggregation named <code>cells<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"removeCell":{"!description":"Removes a cell from the aggregation named <code>cells<\/code>.","!type":"fn(vCell: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.table.Row.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Element"},"sap.ui.table.Table_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.table.Table with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.table.Table"},"sap.ui.table.ColumnMenu_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.table.ColumnMenu with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.Menu.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.table.ColumnMenu"},"sap.ui.table.AnalyticalColumnMenu":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.table.AnalyticalColumnMenu.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.table.ColumnMenu"},"sap.ui.table.SelectionMode":{"MultiToggle":{"!description":"Select multiple rows at a time (toggle behavior).","!type":"String","!category":"enum"},"Multi":{"!description":"Select multiple rows at a time.","!type":"String","!category":"enum"},"!description":"Selection mode of the table","!category":"static class","None":{"!description":"No rows can be selected.","!type":"String","!category":"enum"},"Single":{"!description":"Select one row at a time.","!type":"String","!category":"enum"}},"sap.ui.table.Column_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.table.Column with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.table.Column"},"sap.ui.table.AnalyticalColumn_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.table.AnalyticalColumn with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.table.Column.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.table.AnalyticalColumn"},"sap.ui.table.Row_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.table.Row with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.table.Row"},"sap":{"ui":"sap.ui","sap":"sap","!category":"namespace"},"sap.ui.table.TablePersoController":{"getAutoSave":{"!description":"Getter for property <code>autoSave<\/code>.\n\nAuto save state\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getTable":{"!description":"Id of the element which is the current target of the <code>table<\/code> association, or null.\n\nThe target table of this controller.","!type":"fn() -> sap.ui.table.Table","!category":"function"},"setTable":{"!description":"Setter for the associated <code>table<\/code>.","!type":"fn(oTable: sap.ui.table.Table) -> sap.ui.table.TablePersoController","!category":"function"},"setPersoService":{"!description":"Setter for property <code>persoService<\/code>.","!type":"fn(oPersoService: Object) -> sap.ui.table.TablePersoController","!category":"function"},"savePersonalizations":{"!description":"Saves the current personalization state.","!type":"fn() -> jQuery.Promise","!category":"function"},"setCustomDataKey":{"!description":"Setter for property <code>customDataKey<\/code>.\n\nDefault value is <code>persoKey<\/code>.","!type":"fn(sCustomDataKey: String) -> sap.ui.table.TablePersoController","!category":"function"},"!description":"The TablePersoController can be used to connect a table with a persistence service.","setAutoSave":{"!description":"Setter for property <code>autoSave<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bAutoSave: Boolean) -> sap.ui.table.TablePersoController","!category":"function"},"getPersoService":{"!description":"Getter for property <code>persoService<\/code>.\n\nPersonalization Service object. Needs to have the following methods:\n<ul>\n<li>getPersData() : <code>jQuery Promise<\/code> (http://api.jquery.com/promise/)<\/li>\n<li>setPersData(oBundle) : <code>jQuery Promise<\/code> (http://api.jquery.com/promise/)<\/li>\n<li>delPersData() : <code>jQuery Promise<\/code> (http://api.jquery.com/promise/)<\/li>\n<\/ul>","!type":"fn() -> Object","!category":"function"},"!category":"class","getCustomDataKey":{"!description":"Getter for property <code>customDataKey<\/code>.\n\nBy defining a custom data key the <code>TablePersoController<\/code>\nwill try to get the key for saving the perso data from the custom\ndata of the Table and Column instead of creating it by concatenating \nthe ID of the Table and the Column. Basically this will be more stable \nthan using the auto IDs.\n\nDefault value is <code>persoKey<\/code>.","!type":"fn() -> String","!category":"function"},"openDialog":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn(mSettings: Object)","!category":"function"},"refresh":{"!description":"Refresh the personalizations (reloads data from service).","!type":"fn() -> jQuery.Promise","!category":"function"},"!proto":"sap.ui.base.ManagedObject","getMetadata":{"!description":"Returns a metadata object for class sap.ui.table.TablePersoController.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.table.AnalyticalColumnMenu_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.table.AnalyticalColumnMenu with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.table.ColumnMenu.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.table.AnalyticalColumnMenu"},"sap.ui.table.TreeTable_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.table.TreeTable with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.table.Table.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.table.TreeTable"},"sap.ui.table.VisibleRowCountMode":{"!description":"VisibleRowCountMode of the table","Interactive":{"!description":"After rendering the table has as many rows as defined in visibleRowCount property. The user is able to change the visible rows by moving a grip with the mouse. The visibleRowCount property is changed accordingly.","!type":"String","!category":"enum"},"Auto":{"!description":"The table automatically fills the height of the surrounding container. The visibleRowCount property is automatically changed accordingly. All rows need the same height, otherwise the auto mode doesn't always work as expected.","!type":"String","!category":"enum"},"!category":"static class","Fixed":{"!description":"The table always has as many rows as defined in the visibleRowCount property.","!type":"String","!category":"enum"}}},"!name":"sap.ui.table"}