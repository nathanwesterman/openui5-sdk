{"!define":{"sap.ui.demokit.TagCloud_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.TagCloud with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.TagCloud"},"sap.ui.demokit.TagCloud":{"removeTag":{"!description":"Removes a tag from the aggregation named <code>tags<\/code>.","!type":"fn(vTag: Number | String | sap.ui.demokit.Tag) -> sap.ui.demokit.Tag","!category":"function"},"getMinFontSize":{"!description":"Getter for property <code>minFontSize<\/code>.\n\nMinimum font size that must be used for a tag in this cloud\n\nDefault value is <code>10<\/code>.","!type":"fn() -> Number","!category":"function"},"firePress":{"!description":"Fire event press to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'tagId' of type <code>string<\/code>Id of the selected Tag.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.demokit.TagCloud","!category":"function"},"setMaxFontSize":{"!description":"Setter for property <code>maxFontSize<\/code>.\n\nDefault value is <code>30<\/code>.","!type":"fn(iMaxFontSize: Number) -> sap.ui.demokit.TagCloud","!category":"function"},"attachPress":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'press' event of this <code>sap.ui.demokit.TagCloud<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.demokit.TagCloud<\/code> itself.\n\nFired when a Tag is clicked.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.demokit.TagCloud","!category":"function"},"getTags":{"!description":"Getter for aggregation <code>tags<\/code>.\n\nThe tags displayed in this tag cloud","!type":"fn() -> [sap.ui.demokit.Tag]","!category":"function"},"getMaxFontSize":{"!description":"Getter for property <code>maxFontSize<\/code>.\n\nMaximum font size that may be chosen for a tag in this cloud\n\nDefault value is <code>30<\/code>.","!type":"fn() -> Number","!category":"function"},"!description":"A simple TagCloud representing a set of weighted tags","destroyTags":{"!description":"Destroys all the tags in the aggregation\nnamed <code>tags<\/code>.","!type":"fn() -> sap.ui.demokit.TagCloud","!category":"function"},"addTag":{"!description":"Adds some tag into the aggregation named <code>tags<\/code>.","!type":"fn(oTag: sap.ui.demokit.Tag) -> sap.ui.demokit.TagCloud","!category":"function"},"insertTag":{"!description":"Inserts a tag into the aggregation named <code>tags<\/code>.","!type":"fn(oTag: sap.ui.demokit.Tag, iIndex: Number) -> sap.ui.demokit.TagCloud","!category":"function"},"!category":"class","removeAllTags":{"!description":"Removes all the controls in the aggregation named <code>tags<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.demokit.Tag]","!category":"function"},"detachPress":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'press' event of this <code>sap.ui.demokit.TagCloud<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.demokit.TagCloud","!category":"function"},"setMinFontSize":{"!description":"Setter for property <code>minFontSize<\/code>.\n\nDefault value is <code>10<\/code>.","!type":"fn(iMinFontSize: Number) -> sap.ui.demokit.TagCloud","!category":"function"},"indexOfTag":{"!description":"Checks for the provided <code>sap.ui.demokit.Tag<\/code> in the aggregation named <code>tags<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oTag: sap.ui.demokit.Tag) -> Number","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.TagCloud.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.demokit.CodeViewer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.CodeViewer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.CodeViewer"},"sap.ui.demokit":{"position":{"!description":"The position. If set, the button is rendered with an absolute position.","!type":"String","!category":"enum"},"CodeViewer":"sap.ui.demokit.CodeViewer_obj","weight":{"!description":"The weight for this tag. Can be any integer value.","!type":"Number","!category":"enum"},"IndexLayout":"sap.ui.demokit.IndexLayout_obj","visible":{"!description":"Whether the code viewer should be visible","!type":"Boolean","!category":"enum"},"collapsible":{"!description":"Whether the cue card can be collapsed at all. When set to true, the value of property expanded determines the current collapsed/expanded state. When false, the control is always expanded.","!type":"Boolean","!category":"enum"},"CodeSampleContainer":"sap.ui.demokit.CodeSampleContainer_obj","UI5EntityCueCard":"sap.ui.demokit.UI5EntityCueCard_obj","itemWidth":{"!description":"The width of a content item. Only px values are allowed.","!type":"sap.ui.core.CSSSize","!category":"enum"},"HexagonButton":"sap.ui.demokit.HexagonButton_obj","maxFontSize":{"!description":"Maximum font size that may be chosen for a tag in this cloud","!type":"Number","!category":"enum"},"title":{"!description":"A title to be displayed above the code.","!type":"String","!category":"enum"},"height":{"!description":"(CSS) Height of the control","!type":"sap.ui.core.CSSSize","!category":"enum"},"style":{"!description":"Style of the cue card.","!type":"sap.ui.demokit.UI5EntityCueCardStyle","!category":"enum"},"HexagonButtonGroup":"sap.ui.demokit.HexagonButtonGroup_obj","Tag":"sap.ui.demokit.Tag_obj","!category":"namespace","minFontSize":{"!description":"Minimum font size that must be used for a tag in this cloud","!type":"Number","!category":"enum"},"imagePosition":{"!description":"The position of the contained image. If not set the image is rendered with a fixed relative position.","!type":"String","!category":"enum"},"enableScaling":{"!description":"Whether the given item width/height should be scaled according to the screen size.","!type":"Boolean","!category":"enum"},"uploadUrl":{"!description":"The URL to check the upload content with....","!type":"String","!category":"enum"},"enabled":{"!description":"Whether the button is enabled or not.","!type":"Boolean","!category":"enum"},"icon":{"!description":"Icon to display","!type":"String","!category":"enum"},"text":{"!description":"The text to be disaplyed for this tag.","!type":"String","!category":"enum"},"colspan":{"!description":"How many buttons might be placed in the same row of the grid","!type":"Number","!category":"enum"},"FileUploadIntrospector":"sap.ui.demokit.FileUploadIntrospector_obj","width":{"!description":"Width of the file list","!type":"sap.ui.core.CSSSize","!category":"enum"},"scriptElementId":{"!description":"Id of the script element that contains the initial sample code for this code sample.","!type":"String","!category":"enum"},"autoRefreshInterval":{"!description":"Interval in milliseconds after which the content is checked again. values lower or equal to 0 mean 'no automatic refresh'.","!type":"String","!category":"enum"},"expanded":{"!description":"Whether the cue card is currently expanded.","!type":"Boolean","!category":"enum"},"UIAreaSubstitute":"sap.ui.demokit.UIAreaSubstitute_obj","itemHeight":{"!description":"The height of a content item. Only px values are allowed.","!type":"sap.ui.core.CSSSize","!category":"enum"},"editable":{"!description":"Whether the code can be edited or not","!type":"Boolean","!category":"enum"},"entityName":{"!description":"Qualified name of the control or type to show the documentation for. The name can be specified in the metamodel notation ('sap.ui.core/Control' or in the UI5 resource notation (sap.ui.core.Control).","!type":"String","!category":"enum"},"!description":"SAPUI5 library with non-public controls, used in the UI5 demokit (SDK)","source":{"!description":"The source code to display.","!type":"String","!category":"enum"},"color":{"!description":"The color of the hexagon","!type":"String","!category":"enum"},"TagCloud":"sap.ui.demokit.TagCloud_obj","uiAreaId":{"!description":"Id of the container for the running code. This Id can be used in calls to sap.ui.setRoot as if it would be a normal UIArea. Internally, a container UIElement is created with that Id.","!type":"String","!category":"enum"},"sourceVisible":{"!description":"Whether the source code is visible or not.","!type":"Boolean","!category":"enum"},"navigable":{"!description":"Whether type information is navigable. Also see event 'navigate'.","!type":"Boolean","!category":"enum"},"UI5EntityCueCardStyle":"sap.ui.demokit.UI5EntityCueCardStyle"},"sap.ui.demokit.FileUploadIntrospector_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.FileUploadIntrospector with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.FileUploadIntrospector"},"sap.ui.demokit.IndexLayout":{"setEnableScaling":{"!description":"Setter for property <code>enableScaling<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableScaling: Boolean) -> sap.ui.demokit.IndexLayout","!category":"function"},"getItemHeight":{"!description":"Getter for property <code>itemHeight<\/code>.\n\nThe height of a content item. Only px values are allowed.\n\nDefault value is <code>200px<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"addContent":{"!description":"Adds some content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.demokit.IndexLayout","!category":"function"},"getContent":{"!description":"Getter for aggregation <code>content<\/code>.\n\nThe content items","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"removeAllContent":{"!description":"Removes all the controls in the aggregation named <code>content<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"setItemHeight":{"!description":"Setter for property <code>itemHeight<\/code>.\n\nDefault value is <code>200px<\/code>.","!type":"fn(sItemHeight: sap.ui.core.CSSSize) -> sap.ui.demokit.IndexLayout","!category":"function"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function"},"removeContent":{"!description":"Removes a content from the aggregation named <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"destroyContent":{"!description":"Destroys all the content in the aggregation\nnamed <code>content<\/code>.","!type":"fn() -> sap.ui.demokit.IndexLayout","!category":"function"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","insertContent":{"!description":"Inserts a content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.demokit.IndexLayout","!category":"function"},"setItemWidth":{"!description":"Setter for property <code>itemWidth<\/code>.\n\nDefault value is <code>200px<\/code>.","!type":"fn(sItemWidth: sap.ui.core.CSSSize) -> sap.ui.demokit.IndexLayout","!category":"function"},"!category":"class","getEnableScaling":{"!description":"Getter for property <code>enableScaling<\/code>.\n\nWhether the given item width/height should be scaled according to the screen size.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getItemWidth":{"!description":"Getter for property <code>itemWidth<\/code>.\n\nThe width of a content item. Only px values are allowed.\n\nDefault value is <code>200px<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.IndexLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.demokit.CodeSampleContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.CodeSampleContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.CodeSampleContainer"},"sap.ui.demokit.UIAreaSubstitute_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.UIAreaSubstitute with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.UIAreaSubstitute"},"sap.ui.demokit.HexagonButton":{"getColor":{"!description":"Getter for property <code>color<\/code>.\n\nThe color of the hexagon\n\nDefault value is <code>blue<\/code>.","!type":"fn() -> String","!category":"function"},"getEnabled":{"!description":"Getter for property <code>enabled<\/code>.\n\nWhether the button is enabled or not.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getImagePosition":{"!description":"Getter for property <code>imagePosition<\/code>.\n\nThe position of the contained image. If not set the image is rendered with a fixed relative position.","!type":"fn() -> String","!category":"function"},"firePress":{"!description":"Fire event press to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.demokit.HexagonButton","!category":"function"},"setPosition":{"!description":"Setter for property <code>position<\/code>.","!type":"fn(sPosition: String) -> sap.ui.demokit.HexagonButton","!category":"function"},"attachPress":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'press' event of this <code>sap.ui.demokit.HexagonButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.demokit.HexagonButton<\/code> itself.\n\nFired when the user clicks the hex button","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.demokit.HexagonButton","!category":"function"},"getPosition":{"!description":"Getter for property <code>position<\/code>.\n\nThe position. If set, the button is rendered with an absolute position.","!type":"fn() -> String","!category":"function"},"getIcon":{"!description":"Getter for property <code>icon<\/code>.\n\nIcon to display","!type":"fn() -> String","!category":"function"},"setImagePosition":{"!description":"Setter for property <code>imagePosition<\/code>.","!type":"fn(sImagePosition: String) -> sap.ui.demokit.HexagonButton","!category":"function"},"setColor":{"!description":"Setter for property <code>color<\/code>.\n\nDefault value is <code>blue<\/code>.","!type":"fn(sColor: String) -> sap.ui.demokit.HexagonButton","!category":"function"},"!description":"A custom button with a 'hexagon' shape","!category":"class","setEnabled":{"!description":"Setter for property <code>enabled<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.demokit.HexagonButton","!category":"function"},"setIcon":{"!description":"Setter for property <code>icon<\/code>.","!type":"fn(sIcon: String) -> sap.ui.demokit.HexagonButton","!category":"function"},"detachPress":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'press' event of this <code>sap.ui.demokit.HexagonButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.demokit.HexagonButton","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.HexagonButton.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.demokit.Tag":{"getText":{"!description":"Getter for property <code>text<\/code>.\n\nThe text to be disaplyed for this tag.","!type":"fn() -> String","!category":"function"},"!description":"A Tag in a TagCloud","setWeight":{"!description":"Setter for property <code>weight<\/code>.\n\nDefault value is <code>1<\/code>.","!type":"fn(iWeight: Number) -> sap.ui.demokit.Tag","!category":"function"},"!category":"class","setText":{"!description":"Setter for property <code>text<\/code>.","!type":"fn(sText: String) -> sap.ui.demokit.Tag","!category":"function"},"getWeight":{"!description":"Getter for property <code>weight<\/code>.\n\nThe weight for this tag. Can be any integer value.\n\nDefault value is <code>1<\/code>.","!type":"fn() -> Number","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.Tag.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Element"},"sap.ui.demokit.HexagonButtonGroup_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.HexagonButtonGroup with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.HexagonButtonGroup"},"sap":{"ui":"sap.ui","sap":"sap","!category":"namespace"},"sap.ui":{"!category":"namespace","demokit":"sap.ui.demokit"},"sap.ui.demokit.IndexLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.IndexLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.IndexLayout"},"sap.ui.demokit.UI5EntityCueCardStyle":{"Standard":{"!description":"default style (no special styling).","!type":"String","!category":"enum"},"!description":"different styles for an entity cue card.","!category":"static class","Demokit":{"!description":"Demokit style","!type":"String","!category":"enum"}},"sap.ui.demokit.HexagonButtonGroup":{"removeButton":{"!description":"Removes a button from the aggregation named <code>buttons<\/code>.","!type":"fn(vButton: Number | String | sap.ui.demokit.HexagonButton) -> sap.ui.demokit.HexagonButton","!category":"function"},"removeAllButtons":{"!description":"Removes all the controls in the aggregation named <code>buttons<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.demokit.HexagonButton]","!category":"function"},"insertButton":{"!description":"Inserts a button into the aggregation named <code>buttons<\/code>.","!type":"fn(oButton: sap.ui.demokit.HexagonButton, iIndex: Number) -> sap.ui.demokit.HexagonButtonGroup","!category":"function"},"!description":"A group of HexagonButtons, aligned in a packed grid","setColspan":{"!description":"Setter for property <code>colspan<\/code>.\n\nDefault value is <code>3<\/code>.","!type":"fn(iColspan: Number) -> sap.ui.demokit.HexagonButtonGroup","!category":"function"},"destroyButtons":{"!description":"Destroys all the buttons in the aggregation\nnamed <code>buttons<\/code>.","!type":"fn() -> sap.ui.demokit.HexagonButtonGroup","!category":"function"},"addButton":{"!description":"Adds some button into the aggregation named <code>buttons<\/code>.","!type":"fn(oButton: sap.ui.demokit.HexagonButton) -> sap.ui.demokit.HexagonButtonGroup","!category":"function"},"!category":"class","indexOfButton":{"!description":"Checks for the provided <code>sap.ui.demokit.HexagonButton<\/code> in the aggregation named <code>buttons<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oButton: sap.ui.demokit.HexagonButton) -> Number","!category":"function"},"getButtons":{"!description":"Getter for aggregation <code>buttons<\/code>.\n\nThe buttons to layout in a grid","!type":"fn() -> [sap.ui.demokit.HexagonButton]","!category":"function"},"getColspan":{"!description":"Getter for property <code>colspan<\/code>.\n\nHow many buttons might be placed in the same row of the grid\n\nDefault value is <code>3<\/code>.","!type":"fn() -> Number","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.HexagonButtonGroup.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.demokit.UI5EntityCueCard_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.UI5EntityCueCard with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.UI5EntityCueCard"},"sap.ui.demokit.HexagonButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.HexagonButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.HexagonButton"},"sap.ui.demokit.UI5EntityCueCard":{"getEntityName":{"!description":"Getter for property <code>entityName<\/code>.\n\nQualified name of the control or type to show the documentation for. The name can be specified in the metamodel notation ('sap.ui.core/Control' or in the UI5 resource notation (sap.ui.core.Control).","!type":"fn() -> String","!category":"function"},"detachNavigate":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'navigate' event of this <code>sap.ui.demokit.UI5EntityCueCard<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.demokit.UI5EntityCueCard","!category":"function"},"getCollapsible":{"!description":"Getter for property <code>collapsible<\/code>.\n\nWhether the cue card can be collapsed at all. When set to true, the value of property expanded determines the current collapsed/expanded state. When false, the control is always expanded.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"fireNavigate":{"!description":"Fire event navigate to attached listeners.\n\nListeners may prevent the default action of this event using the preventDefault-method on the event object.\n\n\nExpects following event parameters:\n<ul>\n<li>'entityName' of type <code>string<\/code>Name of the entity (control or type) that has been clicked.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> Boolean","!category":"function"},"getExpanded":{"!description":"Getter for property <code>expanded<\/code>.\n\nWhether the cue card is currently expanded.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"setEntityName":{"!description":"Setter for property <code>entityName<\/code>.","!type":"fn(sEntityName: String) -> sap.ui.demokit.UI5EntityCueCard","!category":"function"},"getStyle":{"!description":"Getter for property <code>style<\/code>.\n\nStyle of the cue card.","!type":"fn() -> sap.ui.demokit.UI5EntityCueCardStyle","!category":"function"},"setNavigable":{"!description":"Setter for property <code>navigable<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bNavigable: Boolean) -> sap.ui.demokit.UI5EntityCueCard","!category":"function"},"!description":"Displays documentation for a UI5 entity (control or type).\n\nThe documentation will be read from a UI5 metamodel file that by default is loaded from the same resource location\nwhere the control or type would be loaded from (using the UI5 resource loading). This control displays all properties,\naggregations, associations, events and methods that are described in the metamodel. For each part, it lists the name,\ntype (where applicable) and documentation. If the navigable property is set to true, all types are shown as links\nand when pressed, the navigate event is fired. This allows consumers to react on a user click on such a type\n(and to e.g. navigate to the underlying type of a property or aggregation)","attachNavigate":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'navigate' event of this <code>sap.ui.demokit.UI5EntityCueCard<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.demokit.UI5EntityCueCard<\/code> itself.\n\nFired when a link for a type is activated (clicked) by the user.\n\nWhen property \"navigable\" is set to true, type links are created for the types of properties, aggregations and associations, for the types of event or method parameters and for the return types of methods (if not void).\n\nThe default behavior for this event is to set the entityName property to the clicked entityName. Applications can prevent the default by calling the corresponding method on the event object.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.demokit.UI5EntityCueCard","!category":"function"},"setExpanded":{"!description":"Setter for property <code>expanded<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bExpanded: Boolean) -> sap.ui.demokit.UI5EntityCueCard","!category":"function"},"!category":"class","setCollapsible":{"!description":"Setter for property <code>collapsible<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bCollapsible: Boolean) -> sap.ui.demokit.UI5EntityCueCard","!category":"function"},"setStyle":{"!description":"Setter for property <code>style<\/code>.","!type":"fn(sStyle: sap.ui.demokit.UI5EntityCueCardStyle) -> sap.ui.demokit.UI5EntityCueCard","!category":"function"},"getNavigable":{"!description":"Getter for property <code>navigable<\/code>.\n\nWhether type information is navigable. Also see event 'navigate'.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.UI5EntityCueCard.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.demokit.FileUploadIntrospector":{"getHeight":{"!description":"Getter for property <code>height<\/code>.\n\n(CSS) Height of the control","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"getAutoRefreshInterval":{"!description":"Getter for property <code>autoRefreshInterval<\/code>.\n\nInterval in milliseconds after which the content is checked again. values lower or equal to 0 mean 'no automatic refresh'.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> String","!category":"function"},"!description":"Control that allows to monitor uploaded files in a demo scenario. This is not a general purpose monitor but only works with the demo fileupload service.","setUploadUrl":{"!description":"Setter for property <code>uploadUrl<\/code>.","!type":"fn(sUploadUrl: String) -> sap.ui.demokit.FileUploadIntrospector","!category":"function"},"setHeight":{"!description":"Setter for property <code>height<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.demokit.FileUploadIntrospector","!category":"function"},"!category":"class","setAutoRefreshInterval":{"!description":"Setter for property <code>autoRefreshInterval<\/code>.\n\nDefault value is <code>0<\/code>.","!type":"fn(sAutoRefreshInterval: String) -> sap.ui.demokit.FileUploadIntrospector","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nWidth of the file list","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.demokit.FileUploadIntrospector","!category":"function"},"getUploadUrl":{"!description":"Getter for property <code>uploadUrl<\/code>.\n\nThe URL to check the upload content with....","!type":"fn() -> String","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.FileUploadIntrospector.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Control"},"sap.ui.demokit.UIAreaSubstitute":{"destroyContent":{"!description":"Destroys all the content in the aggregation\nnamed <code>content<\/code>.","!type":"fn() -> sap.ui.demokit.UIAreaSubstitute","!category":"function"},"addContent":{"!description":"Adds some content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.demokit.UIAreaSubstitute","!category":"function"},"insertContent":{"!description":"Inserts a content into the aggregation named <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.demokit.UIAreaSubstitute","!category":"function"},"!description":"A substitute for an UIArea that can be embedded in the control tree.","removeAllContent":{"!description":"Removes all the controls in the aggregation named <code>content<\/code>.\n\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"getContent":{"!description":"Getter for aggregation <code>content<\/code>.\n\nContent Area used for the running sample code","!type":"fn() -> [sap.ui.core.Control]","!category":"function"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation named <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function"},"!category":"class","removeContent":{"!description":"Removes a content from the aggregation named <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.UIAreaSubstitute.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"},"!proto":"sap.ui.core.Element"},"sap.ui.demokit.CodeSampleContainer":{"setScriptElementId":{"!description":"Setter for property <code>scriptElementId<\/code>.","!type":"fn(sScriptElementId: String) -> sap.ui.demokit.CodeSampleContainer","!category":"function"},"getUiAreaId":{"!description":"Getter for property <code>uiAreaId<\/code>.\n\nId of the container for the running code. This Id can be used in calls to sap.ui.setRoot as if it would be a normal UIArea. Internally, a container UIElement is created with that Id.","!type":"fn() -> String","!category":"function"},"fireApply":{"!description":"Fire event apply to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'code' of type <code>string<\/code>the current code that will be applied<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.demokit.CodeSampleContainer","!category":"function"},"!description":"A container for both the source and the runtime results of a CodeSample. By default, only the runtime results are shown. There are additional controls that allow the user to display the source, modify and run it.\n\nThe container provides a sub container that can be used in calls to sap.ui.setRoot() as if it would be a normal UIArea. So the sample code doesn't have to know that it runs in a CodeSample container.","setSourceVisible":{"!description":"Setter for property <code>sourceVisible<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bSourceVisible: Boolean) -> sap.ui.demokit.CodeSampleContainer","!category":"function"},"setUiAreaId":{"!description":"Setter for property <code>uiAreaId<\/code>.","!type":"fn(sUiAreaId: String) -> sap.ui.demokit.CodeSampleContainer","!category":"function"},"setTitle":{"!description":"Setter for property <code>title<\/code>.","!type":"fn(sTitle: String) -> sap.ui.demokit.CodeSampleContainer","!category":"function"},"!category":"class","detachApply":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'apply' event of this <code>sap.ui.demokit.CodeSampleContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.demokit.CodeSampleContainer","!category":"function"},"attachApply":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'apply' event of this <code>sap.ui.demokit.CodeSampleContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.demokit.CodeSampleContainer<\/code> itself.\n\nFired when the user decides to apply his/her changes to the sample code","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.demokit.CodeSampleContainer","!category":"function"},"getTitle":{"!description":"Getter for property <code>title<\/code>.\n\nA title to be displayed above the code.","!type":"fn() -> String","!category":"function"},"getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nWidth of the CodeSample container.\n\nDefault value is <code>90%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.\n\nDefault value is <code>90%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.demokit.CodeSampleContainer","!category":"function"},"getSourceVisible":{"!description":"Getter for property <code>sourceVisible<\/code>.\n\nWhether the source code is visible or not.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"getScriptElementId":{"!description":"Getter for property <code>scriptElementId<\/code>.\n\nId of the script element that contains the initial sample code for this code sample.","!type":"fn() -> String","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.CodeSampleContainer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.demokit.CodeViewer":{"getEditable":{"!description":"Getter for property <code>editable<\/code>.\n\nWhether the code can be edited or not\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function"},"firePress":{"!description":"Fire event press to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.demokit.CodeViewer","!category":"function"},"fireSave":{"!description":"Fire event save to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.demokit.CodeViewer","!category":"function"},"setVisible":{"!description":"Setter for property <code>visible<\/code>.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisible: Boolean) -> sap.ui.demokit.CodeViewer","!category":"function"},"detachSave":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'save' event of this <code>sap.ui.demokit.CodeViewer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.demokit.CodeViewer","!category":"function"},"attachPress":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'press' event of this <code>sap.ui.demokit.CodeViewer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.demokit.CodeViewer<\/code> itself.\n\nCalled when the mouse button is clicked over the non-editable(!) control","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.demokit.CodeViewer","!category":"function"},"getSource":{"!description":"Getter for property <code>source<\/code>.\n\nThe source code to display.","!type":"fn() -> String","!category":"function"},"getVisible":{"!description":"Getter for property <code>visible<\/code>.\n\nWhether the code viewer should be visible\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function"},"attachSave":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'save' event of this <code>sap.ui.demokit.CodeViewer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified\notherwise to this <code>sap.ui.demokit.CodeViewer<\/code> itself.\n\nCalled when the editor is active and should be saved","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.demokit.CodeViewer","!category":"function"},"getHeight":{"!description":"Getter for property <code>height<\/code>.\n\nThe CSS height property","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setEditable":{"!description":"Setter for property <code>editable<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn(bEditable: Boolean) -> sap.ui.demokit.CodeViewer","!category":"function"},"!description":"Shows a piece of (Javascript) code and allows to edit it","setSource":{"!description":"Setter for property <code>source<\/code>.","!type":"fn(sSource: String) -> sap.ui.demokit.CodeViewer","!category":"function"},"setHeight":{"!description":"Setter for property <code>height<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.demokit.CodeViewer","!category":"function"},"!category":"class","getWidth":{"!description":"Getter for property <code>width<\/code>.\n\nThe CSS width property","!type":"fn() -> sap.ui.core.CSSSize","!category":"function"},"setWidth":{"!description":"Setter for property <code>width<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.demokit.CodeViewer","!category":"function"},"detachPress":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'press' event of this <code>sap.ui.demokit.CodeViewer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.demokit.CodeViewer","!category":"function"},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.CodeViewer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function"}},"sap.ui.demokit.Tag_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.Tag with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn())","!category":"function"},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.Tag"}},"!name":"sap.ui.demokit"}